// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protogame/data.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mobius.Proto.Game {

  /// <summary>Holder for reflection information generated from protogame/data.proto</summary>
  public static partial class DataReflection {

    #region Descriptor
    /// <summary>File descriptor for protogame/data.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChRwcm90b2dhbWUvZGF0YS5wcm90bxIEZ2FtZRoacHJvdG9pZGVudGl0eS9w",
            "bGF5ZXIucHJvdG8ipwUKDVByb3RvR2FtZURhdGESEQoJcGxheWVyX2lkGAEg",
            "ASgJEhMKC3BsYXllcl9uYW1lGAIgASgJEhYKDnBsYXllcl9jb21tZW50GAMg",
            "ASgJEiMKB21haWxib3gYBCABKAsyEi5nYW1lLlByb3RvTWFpbEJveBI1ChFh",
            "YmlsaXR5X2NhcmRfZGF0YRgFIAEoCzIaLmdhbWUuUHJvdG9BYmlsaXR5Q2Fy",
            "ZERhdGESLQoNam9iX2NhcmRfZGF0YRgGIAEoCzIWLmdhbWUuUHJvdG9Kb2JD",
            "YXJkRGF0YRImCglpdGVtX2RhdGEYByABKAsyEy5nYW1lLlByb3RvSXRlbURh",
            "dGESOwoUZmFpcnlfY29tcGFuaW9uX2RhdGEYCCABKAsyHS5nYW1lLlByb3Rv",
            "RmFpcnlDb21wYW5pb25EYXRhEjQKD3JlZ2lvbl9tYXBfZGF0YRgJIAEoCzIb",
            "LmdhbWUuUHJvdG9SZWdpb25IZWFkZXJEYXRhEjYKF3NpbmdsZV9wbGF5X2Jh",
            "dHRsZV9kYXRhGAogASgLMhUuZ2FtZS5Qcm90b0JhdHRsZURhdGESNQoWbXVs",
            "dGlfcGxheV9iYXR0bGVfZGF0YRgLIAEoCzIVLmdhbWUuUHJvdG9CYXR0bGVE",
            "YXRhEjsKFWNhcmRfZmlsdGVyX3NvcnRfc2V0cxgUIAMoCzIcLmdhbWUuUHJv",
            "dG9DYXJkRmlsdGVyU29ydFNldBJJChRwbGF5ZXJfcHJvZ3Jlc3NfZGF0YRhk",
            "IAMoCzIrLmdhbWUuUHJvdG9HYW1lRGF0YS5QbGF5ZXJQcm9ncmVzc0RhdGFF",
            "bnRyeRo5ChdQbGF5ZXJQcm9ncmVzc0RhdGFFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAg6AjgBIr8CChRQcm90b0FiaWxpdHlDYXJkRGF0YRIW",
            "Cg5yZW50YWxfY2FyZF9pZBgBIAEoCRIyCglpbnZlbnRvcnkYAiABKAsyHy5n",
            "YW1lLlByb3RvQWJpbGl0eUNhcmRJbnZlbnRvcnkSLQoEYmFuaxgDIAEoCzIf",
            "LmdhbWUuUHJvdG9BYmlsaXR5Q2FyZEludmVudG9yeRIuCgdoaXN0b3J5GAQg",
            "ASgLMh0uZ2FtZS5Qcm90b0FiaWxpdHlDYXJkSGlzdG9yeRJGCg9tYXhfY2Fy",
            "ZF9sZXZlbHMYBSADKAsyLS5nYW1lLlByb3RvQWJpbGl0eUNhcmREYXRhLk1h",
            "eENhcmRMZXZlbHNFbnRyeRo0ChJNYXhDYXJkTGV2ZWxzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASKKAQoXUHJvdG9BYmlsaXR5Q2Fy",
            "ZEhpc3RvcnkSNQoJYmFzZV9saXN0GAEgAygLMiIuZ2FtZS5Qcm90b0Jhc2VD",
            "YXJkSGlzdG9yeUluc3RhbmNlEjgKCWNhcmRfbGlzdBgCIAMoCzIlLmdhbWUu",
            "UHJvdG9BYmlsaXR5Q2FyZEhpc3RvcnlJbnN0YW5jZSKUAQocUHJvdG9CYXNl",
            "Q2FyZEhpc3RvcnlJbnN0YW5jZRIUCgxiYXNlX2NhcmRfaWQYASABKAkSGgoS",
            "aGlnaGVzdF9zdGFyX2xldmVsGAIgASgFEh8KF2hpZ2hlc3RfYWJpbGl0eV9j",
            "YXJkX2lkGAMgASgJEiEKGWhpZ2hlc3RfYXVnbWVudF9jb25maWdfaWQYBCAB",
            "KAkidQofUHJvdG9BYmlsaXR5Q2FyZEhpc3RvcnlJbnN0YW5jZRIXCg9hYmls",
            "aXR5X2NhcmRfaWQYASABKAkSEgoKc3Rhcl9sZXZlbBgCIAEoBRIRCglhdXRv",
            "X3NlbGwYAyABKAgSEgoKY3JlYXRlZF9hdBgEIAEoAyJxChlQcm90b0FiaWxp",
            "dHlDYXJkSW52ZW50b3J5EhEKCW1heF9zbG90cxgBIAEoBRIxCgljYXJkX2xp",
            "c3QYAiADKAsyHi5nYW1lLlByb3RvQWJpbGl0eUNhcmRJbnN0YW5jZRIOCgZz",
            "b3VyY2UYAyABKAUi7gMKGFByb3RvQWJpbGl0eUNhcmRJbnN0YW5jZRIOCgZz",
            "eXNfaWQYASABKAkSFwoPYWJpbGl0eV9jYXJkX2lkGAIgASgJEhkKEWF1Z21l",
            "bnRfY29uZmlnX2lkGAMgASgJEhEKCWFjY3VtX2V4cBgEIAEoBBIXCg90b3Rh",
            "bF9hY2N1bV9leHAYBSABKAQSEgoKY2FyZF9sZXZlbBgGIAEoBRIVCg1hYmls",
            "aXR5X2xldmVsGAcgASgFEhMKC3NlZWRfdW5sb2NrGAggASgFEhoKEmV4dHJh",
            "X3NraWxsX3VubG9jaxgJIAEoBRIYChBvdmVyX2Jvb3N0X2xldmVsGAogASgF",
            "EkkKDmF1dG9fYWJpbGl0aWVzGAsgAygLMjEuZ2FtZS5Qcm90b0FiaWxpdHlD",
            "YXJkSW5zdGFuY2UuQXV0b0FiaWxpdGllc0VudHJ5EhEKCWNhcmRfbG9jaxgM",
            "IAEoCBIOCgZzb3VyY2UYDSABKAUSEgoKY3JlYXRlZF9hdBgOIAEoAxIWCg5i",
            "YXNlX2NvbmZpZ19pZBgPIAEoCRIcChRleHRyYV9za2lsbF9wcm9ncmVzcxgQ",
            "IAEoBRo0ChJBdXRvQWJpbGl0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZh",
            "bHVlGAIgASgFOgI4ASLQAwoPUHJvdG9CYXR0bGVEYXRhEhQKDHBsYXllcl9s",
            "ZXZlbBgBIAEoBRIRCglwbGF5X21vZGUYAiABKAkSEQoJdG90YWxfZXhwGAMg",
            "ASgEEhEKCWFjY3VtX2V4cBgEIAEoBBIRCglleHBfYm9udXMYBSABKAISKQoH",
            "c3RhbWluYRgGIAEoCzIYLmdhbWUuUHJvdG9QbGF5ZXJTdGFtaW5hEi4KBWRl",
            "Y2tzGAcgASgLMh8uZ2FtZS5Qcm90b1BsYXllckRlY2tDb2xsZWN0aW9uEkQK",
            "EGVuZW1pZXNfZGVmZWF0ZWQYCCADKAsyKi5nYW1lLlByb3RvQmF0dGxlRGF0",
            "YS5FbmVtaWVzRGVmZWF0ZWRFbnRyeRIzCgpzdGFydF9kYXRhGAogASgLMhou",
            "Z2FtZS5Qcm90b0JhdHRsZVN0YXJ0RGF0YUgAiAEBEjIKB3Jlc3VsdHMYFCAB",
            "KAsyHC5nYW1lLlByb3RvTGFzdEJhdHRsZVJlc3VsdHNIAYgBARo2ChRFbmVt",
            "aWVzRGVmZWF0ZWRFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAQ6",
            "AjgBQg0KC19zdGFydF9kYXRhQgoKCF9yZXN1bHRzIowGChRQcm90b0JhdHRs",
            "ZVN0YXJ0RGF0YRIVCg1yZWdpb25fbWFwX2lkGAEgASgJEhYKDnJlZ2lvbl9u",
            "b2RlX2lkGAIgASgJEhkKEXJlZ2lvbl9ub2RlX2luZGV4GAMgASgFEhcKD25v",
            "ZGVfd2F2ZV9pbmRleBgVIAEoBRISCgpkZWNrX2luZGV4GAQgASgFEhEKCWhh",
            "cmRfbW9kZRgFIAEoCBIRCgljb21wbGV0ZWQYBiABKAgSEQoJdG90YWxfZXhw",
            "GAcgASgEEhMKC2dvbGRfcmV3YXJkGAggASgFEh8KF3BsYXllcl9leHBlcmll",
            "bmNlX2JvbnVzGAkgASgCEhwKFGFkZF9leHBlcmllbmNlX2JvbnVzGAogASgC",
            "EhwKFGFyZWFfc2VlZF9tdWx0aXBsaWVyGAsgASgCEh8KF2FiaWxpdHlfc2Vl",
            "ZF9tdWx0aXBsaWVyGAwgASgCEi0KD2l0ZW1fZHJvcF90YWJsZRgNIAMoCzIU",
            "LmdhbWUuQmF0dGxlSXRlbURyb3ASLQoPY2FyZF9kcm9wX3RhYmxlGA4gAygL",
            "MhQuZ2FtZS5CYXR0bGVDYXJkRHJvcBI0Cg1wcm9ncmVzc19kYXRhGA8gASgL",
            "Mh0uZ2FtZS5Qcm90b0JhdHRsZVByb2dyZXNzRGF0YRI3ChJjYXJkX3Byb2dy",
            "ZXNzX2RhdGEYECADKAsyGy5nYW1lLlByb3RvQ2FyZFByb2dyZXNzRGF0YRIY",
            "ChByZW50YWxfcGxheWVyX2lkGBEgASgJEjcKC3JlbnRhbF9jYXJkGBIgASgL",
            "MiIuaWRlbnRpdHkuUHJvdG9BYmlsaXR5Q2FyZElkZW50aXR5EhMKC3Jldml2",
            "ZV91c2VkGBMgASgIEhIKCmNyZWF0ZWRfYXQYFCABKAMSMQoMZmllbmRfc3Bh",
            "d25zGBYgAygLMhsuZ2FtZS5Qcm90b0JhdHRsZUZpZW5kU3Bhd24SNQoRc2Vs",
            "ZWN0aW9uX3Jlc3VsdHMYFyABKAsyGi5nYW1lLlByb3RvQmF0dGxlU2VsZWN0",
            "aW9uIkYKFVByb3RvQmF0dGxlRmllbmRTcGF3bhIWCg5yZXBsYWNlc19maWVu",
            "ZBgBIAEoCRIVCg1yZXBsYWNlc193aXRoGAIgASgJIpEBChdQcm90b0JhdHRs",
            "ZVByb2dyZXNzRGF0YRIUCgxwbGF5ZXJfbGV2ZWwYASABKAUSEQoJdG90YWxf",
            "ZXhwGAIgASgEEhEKCWFjY3VtX2V4cBgDIAEoBBIRCglleHBfYm9udXMYBCAB",
            "KAISEgoKZGVja19jb3VudBgFIAEoBRITCgttYXhfc3RhbWluYRgGIAEoBSLZ",
            "AQoVUHJvdG9DYXJkUHJvZ3Jlc3NEYXRhEhMKC2luc3RhbmNlX2lkGAEgASgJ",
            "EhIKCnNsb3RfaW5kZXgYAiABKAUSDQoFbGV2ZWwYAyABKAUSEQoJdG90YWxf",
            "ZXhwGAQgASgEEhEKCWFjY3VtX2V4cBgFIAEoBBIaChJleHRyYV9za2lsbF91",
            "bmxvY2sYBiABKAgSJgoeZXh0cmFfc2tpbGxfdW5sb2NrX3JlcXVpcmVtZW50",
            "GAcgASgFEh4KFmV4dHJhX3NraWxsX3Byb2dyZXNzZWQYCCABKAgicAoMUHJv",
            "dG9NaXNzaW9uEhQKDHJlZmVyZW5jZV9pZBgBIAEoCRIaChJwcmltYXJ5X2Rl",
            "ZmluaXRpb24YAiABKAUSHAoUc2Vjb25kYXJ5X2RlZmluaXRpb24YAyABKAUS",
            "EAoIcmVxdWlyZWQYBCABKAUicQoUUHJvdG9NaXNzaW9uSW5zdGFuY2USIwoH",
            "bWlzc2lvbhgBIAEoCzISLmdhbWUuUHJvdG9NaXNzaW9uEhAKCHByb2dyZXNz",
            "GAIgASgFEhEKCWNvbmZpcm1lZBgDIAEoCBIPCgdjbGFpbWVkGAQgASgIIpoB",
            "ChlQcm90b0RhaWx5TWlzc2lvbkluc3RhbmNlEgoKAmlkGAEgASgJEiwKCGlu",
            "c3RhbmNlGAIgASgLMhouZ2FtZS5Qcm90b01pc3Npb25JbnN0YW5jZRITCgty",
            "ZWNlaXZlZF9hdBgDIAEoAxIuCgxpdGVtX3Jld2FyZHMYBCADKAsyGC5nYW1l",
            "LlByb3RvSXRlbVZhbHVlUGFpciJhCg5CYXR0bGVJdGVtRHJvcBIlCgNrZXkY",
            "ASABKAsyGC5nYW1lLkJhdHRsZURyb3BUYWJsZUtleRIoCgRkcm9wGAIgASgL",
            "MhouZ2FtZS5CYXR0bGVJdGVtRHJvcFJlc3VsdCJhCg5CYXR0bGVDYXJkRHJv",
            "cBIlCgNrZXkYASABKAsyGC5nYW1lLkJhdHRsZURyb3BUYWJsZUtleRIoCgRk",
            "cm9wGAIgASgLMhouZ2FtZS5CYXR0bGVDYXJkRHJvcFJlc3VsdCJPChJCYXR0",
            "bGVEcm9wVGFibGVLZXkSEAoIZmllbmRfaWQYASABKAkSEwoLZmllbmRfaW5k",
            "ZXgYAiABKAUSEgoKd2F2ZV9pbmRleBgDIAEoBSI5ChRCYXR0bGVJdGVtRHJv",
            "cFJlc3VsdBIPCgdpdGVtX2lkGAEgASgJEhAKCHF1YW50aXR5GAIgASgFIjkK",
            "FEJhdHRsZUNhcmREcm9wUmVzdWx0Eg8KB2NhcmRfaWQYASABKAkSEAoIbmV3",
            "X2NhcmQYAiABKAgiTwoWUHJvdG9DYXJkRmlsdGVyU29ydFNldBIMCgR2aWV3",
            "GAEgASgFEicKBHNldHMYAiADKAsyGS5nYW1lLlByb3RvQ2FyZEZpbHRlclNv",
            "cnQimwEKE1Byb3RvQ2FyZEZpbHRlclNvcnQSDQoFaW5kZXgYASABKAUSEgoK",
            "Y2FyZF90eXBlcxgCIAMoBRIXCg9jYXJkX2NhdGVnb3JpZXMYAyADKAUSFwoP",
            "c3BlY2lhbF9maWx0ZXJzGAQgAygFEhYKDnNvcnRfc2VsZWN0b3JzGAUgAygF",
            "EhcKD3NvcnRfZGVzY2VuZGluZxgGIAEoCCJtChpQcm90b0xvZ2luQ2FtcGFp",
            "Z25JbnN0YW5jZRIKCgJpZBgBIAEoCRIPCgdjbGFpbWVkGAIgAygIEhgKEGxh",
            "c3RfY2xhaW1faW5kZXgYAyABKAUSGAoQbGFzdF9jbGFpbV9hZGRlZBgEIAEo",
            "AyKRAQoXUHJvdG9GYWlyeUNvbXBhbmlvbkRhdGESHwoXY3VycmVudF9jb21w",
            "YW5pb25faW5kZXgYASABKAUSNQoJaW52ZW50b3J5GAIgASgLMiIuZ2FtZS5Q",
            "cm90b0ZhaXJ5Q29tcGFuaW9uSW52ZW50b3J5Eh4KFmxhc3RfcHJpbWFyeV9j",
            "b21wYW5pb24YAyABKAkiWQocUHJvdG9GYWlyeUNvbXBhbmlvbkludmVudG9y",
            "eRI5Cg5jb21wYW5pb25fbGlzdBgCIAMoCzIhLmdhbWUuUHJvdG9GYWlyeUNv",
            "bXBhbmlvbkluc3RhbmNlIlwKG1Byb3RvRmFpcnlDb21wYW5pb25JbnN0YW5j",
            "ZRIOCgZzeXNfaWQYASABKAkSGQoRYmFzZV9jb21wYW5pb25faWQYAiABKAkS",
            "EgoKY3JlYXRlZF9hdBgDIAEoAyKfAgoNUHJvdG9JdGVtRGF0YRIrCglpbnZl",
            "bnRvcnkYASABKAsyGC5nYW1lLlByb3RvSXRlbUludmVudG9yeRI2CgpsaW1p",
            "dF9kYXRhGAIgAygLMiIuZ2FtZS5Qcm90b0l0ZW1EYXRhLkxpbWl0RGF0YUVu",
            "dHJ5EiwKCmRpc3RpbGxlcnMYAyADKAsyGC5nYW1lLlByb3RvSXRlbURpc3Rp",
            "bGxlchIuCgpnaWZ0X2JveGVzGAQgAygLMhouZ2FtZS5Qcm90b0dpZnRCb3hJ",
            "bnN0YW5jZRpLCg5MaW1pdERhdGFFbnRyeRILCgNrZXkYASABKAkSKAoFdmFs",
            "dWUYAiABKAsyGS5nYW1lLlByb3RvSXRlbURyb3BSZWNvcmQ6AjgBIjcKElBy",
            "b3RvSXRlbURpc3RpbGxlchIPCgdpdGVtX2lkGAEgASgJEhAKCGRlY190aW1l",
            "GAIgASgDIjEKE1Byb3RvSXRlbURyb3BSZWNvcmQSCwoDa2V5GAEgASgFEg0K",
            "BWNvdW50GAIgASgFIkAKElByb3RvSXRlbUludmVudG9yeRIqCglpdGVtX2xp",
            "c3QYASADKAsyFy5nYW1lLlByb3RvSXRlbUluc3RhbmNlImgKFFByb3RvR2lm",
            "dEJveEluc3RhbmNlEgoKAmlkGAEgASgJEhQKDHB1cmNoYXNlZF9hdBgCIAEo",
            "AxIWCg5wdXJjaGFzZV9jb3VudBgDIAEoBRIWCg5lZmZlY3RpdmVfZGF5cxgE",
            "IAEoBSJaChFQcm90b0l0ZW1JbnN0YW5jZRIOCgZzeXNfaWQYASABKAkSEAoI",
            "cXVhbnRpdHkYAiABKAUSDwoHaXRlbV9pZBgDIAEoCRISCgpjcmVhdGVkX2F0",
            "GAQgASgDIjQKElByb3RvSXRlbVZhbHVlUGFpchIPCgdpdGVtX2lkGAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgFIvYBChBQcm90b0pvYkNhcmREYXRhEiUKBGpvYnMY",
            "ASABKAsyFy5nYW1lLlByb3RvSm9iSW52ZW50b3J5EisKB3dlYXBvbnMYAiAB",
            "KAsyGi5nYW1lLlByb3RvV2VhcG9uSW52ZW50b3J5Ej0KDHNraWxsX3BhbmVs",
            "cxgDIAMoCzInLmdhbWUuUHJvdG9Kb2JDYXJkRGF0YS5Ta2lsbFBhbmVsc0Vu",
            "dHJ5Gk8KEFNraWxsUGFuZWxzRW50cnkSCwoDa2V5GAEgASgJEioKBXZhbHVl",
            "GAIgASgLMhsuZ2FtZS5Qcm90b1NraWxsUGFuZWxHcm91cHM6AjgBIkEKEVBy",
            "b3RvSm9iSW52ZW50b3J5EiwKCGpvYl9saXN0GAEgAygLMhouZ2FtZS5Qcm90",
            "b0pvYkNhcmRJbnN0YW5jZSKqBAoUUHJvdG9Kb2JDYXJkSW5zdGFuY2USDgoG",
            "c3lzX2lkGAEgASgJEhYKDnN1Yl9qb2JfdW5sb2NrGAIgASgFEhgKEG92ZXJf",
            "Ym9vc3RfbGV2ZWwYAyABKAUSOAoTc2tpbGxfcGFuZWxfdW5sb2NrcxgEIAEo",
            "CzIbLmdhbWUuUHJvdG9Ta2lsbFBhbmVsR3JvdXBzEhMKC2Jhc2Vfam9iX2lk",
            "GAUgASgJEhIKCmNyZWF0ZWRfYXQYBiABKAMSFQoNd2VhcG9uX3VubG9jaxgH",
            "IAEoBRITCgtocF9zdGF0X21vZBgIIAEoBRIXCg9hdHRhY2tfc3RhdF9tb2QY",
            "CSABKAUSFgoOYnJlYWtfc3RhdF9tb2QYCiABKAUSFgoObWFnaWNfc3RhdF9t",
            "b2QYCyABKAUSFgoOc3BlZWRfc3RhdF9tb2QYDCABKAUSGAoQZGVmZW5zZV9z",
            "dGF0X21vZBgOIAEoBRIcChRjcml0X2NoYW5jZV9zdGF0X21vZBgPIAEoBRIW",
            "Cg51bHRpbWF0ZV9ib29zdBgSIAEoBRJFCg5hdXRvX2FiaWxpdGllcxgTIAMo",
            "CzItLmdhbWUuUHJvdG9Kb2JDYXJkSW5zdGFuY2UuQXV0b0FiaWxpdGllc0Vu",
            "dHJ5EhMKC2Nyb3duX2xldmVsGBQgASgFGjQKEkF1dG9BYmlsaXRpZXNFbnRy",
            "eRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAU6AjgBIuUGChZQcm90b0xh",
            "c3RCYXR0bGVSZXN1bHRzEhUKDXJlZ2lvbl9tYXBfaWQYASABKAkSGQoRcmVn",
            "aW9uX25vZGVfaW5kZXgYAiABKAUSDQoFc2NvcmUYAyABKAQSEQoJdG90YWxf",
            "ZXhwGAQgASgFEhwKFHNlZWRfYXJlYV9tdWx0aXBsaWVyGAUgASgCEh4KFnNl",
            "ZWRfYmF0dGxlX211bHRpcGxpZXIYBiABKAISNAoNcHJvZ3Jlc3NfZGF0YRgH",
            "IAEoCzIdLmdhbWUuUHJvdG9CYXR0bGVQcm9ncmVzc0RhdGESNwoSY2FyZF9w",
            "cm9ncmVzc19kYXRhGAggAygLMhsuZ2FtZS5Qcm90b0NhcmRQcm9ncmVzc0Rh",
            "dGESMgoMaXRlbV9yZXdhcmRzGAkgAygLMhwuZ2FtZS5UYWdnZWRCYXR0bGVJ",
            "dGVtUmV3YXJkEjIKDGNhcmRfcmV3YXJkcxgKIAMoCzIcLmdhbWUuVGFnZ2Vk",
            "QmF0dGxlQ2FyZFJld2FyZBI8ChFjb21wYW5pb25fcmV3YXJkcxgPIAMoCzIh",
            "LmdhbWUuVGFnZ2VkQmF0dGxlQ29tcGFuaW9uUmV3YXJkEjIKDnBlbmRpbmdf",
            "ZXZlbnRzGAsgAygLMhouZ2FtZS5Qcm90b1JlZ2lvbk5vZGVFdmVudBIeChZk",
            "YWlseV9taXNzaW9uX3Byb2dyZXNzGAwgASgFEhoKEmFjaGlldmVtZW50X3Vu",
            "bG9jaxgNIAEoBRJYChdyZWdpb25fbWlzc2lvbl9wcm9ncmVzcxgOIAMoCzI3",
            "LmdhbWUuUHJvdG9MYXN0QmF0dGxlUmVzdWx0cy5SZWdpb25NaXNzaW9uUHJv",
            "Z3Jlc3NFbnRyeRJcChl3YW5kZXJpbmdfZmllbmRfbW92ZW1lbnRzGBAgAygL",
            "MjkuZ2FtZS5Qcm90b0xhc3RCYXR0bGVSZXN1bHRzLldhbmRlcmluZ0ZpZW5k",
            "TW92ZW1lbnRzRW50cnkaPAoaUmVnaW9uTWlzc2lvblByb2dyZXNzRW50cnkS",
            "CwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ARo+ChxXYW5kZXJpbmdG",
            "aWVuZE1vdmVtZW50c0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "BToCOAEiSAoWVGFnZ2VkQmF0dGxlSXRlbVJld2FyZBIPCgdpdGVtX2lkGAEg",
            "ASgJEhAKCHF1YW50aXR5GAIgASgFEgsKA3RhZxgDIAEoBSJlChZUYWdnZWRC",
            "YXR0bGVDYXJkUmV3YXJkEhMKC2luc3RhbmNlX2lkGAEgASgJEhcKD2FiaWxp",
            "dHlfY2FyZF9pZBgCIAEoCRIQCghuZXdfY2FyZBgDIAEoCBILCgN0YWcYBCAB",
            "KAUiMwobVGFnZ2VkQmF0dGxlQ29tcGFuaW9uUmV3YXJkEhQKDGNvbXBhbmlv",
            "bl9pZBgBIAEoCSJICgxQcm90b01haWxCb3gSJQoFaXRlbXMYASADKAsyFi5n",
            "YW1lLlByb3RvTWFpbEJveEl0ZW0SEQoJbWF4X2l0ZW1zGAIgASgFIqsBChBQ",
            "cm90b01haWxCb3hJdGVtEgoKAmlkGAEgASgJEhQKDHJlZmVyZW5jZV9pZBgC",
            "IAEoCRIlCgZzb3VyY2UYAyABKA4yFS5nYW1lLlJlZmVyZW5jZVNvdXJjZRIQ",
            "CghxdWFudGl0eRgEIAEoBRITCgtyZWNlaXZlZF9hdBgFIAEoAxIUCgxjbGFp",
            "bV9zb3VyY2UYBiABKAkSEQoJY29uZmlybWVkGAcgASgIIl0KGVByb3RvUGxh",
            "eWVyRGVja0NvbGxlY3Rpb24SGgoSY3VycmVudF9kZWNrX2luZGV4GAEgASgF",
            "EiQKBWRlY2tzGAIgAygLMhUuZ2FtZS5Qcm90b1BsYXllckRlY2sitwIKD1By",
            "b3RvUGxheWVyRGVjaxIWCg5qb2JfY2FyZF9pbmRleBgBIAEoBRIaChJzdWJf",
            "am9iX2NhcmRfaW5kZXgYAiABKAUSNQoSYWJpbGl0eV9jYXJkX3Nsb3RzGAMg",
            "AygLMhkuZ2FtZS5Qcm90b1BsYXllckRlY2tTbG90EjkKFnN1Yl9hYmlsaXR5",
            "X2NhcmRfc2xvdHMYBCADKAsyGS5nYW1lLlByb3RvUGxheWVyRGVja1Nsb3QS",
            "FAoMd2VhcG9uX2luZGV4GAUgASgFEhgKEHN1Yl93ZWFwb25faW5kZXgYBiAB",
            "KAUSEgoKZGVja19pbmRleBgHIAEoBRIaChJqb2JfY2FyZF9zdWJfaW5kZXgY",
            "CCABKAUSHgoWc3ViX2pvYl9jYXJkX3N1Yl9pbmRleBgJIAEoBSJCChNQcm90",
            "b1BsYXllckRlY2tTbG90EhcKD2FiaWxpdHlfY2FyZF9pZBgBIAEoCRISCgpz",
            "bG90X2luZGV4GAIgASgFIqMBChJQcm90b1BsYXllclN0YW1pbmESFwoPY3Vy",
            "cmVudF9zdGFtaW5hGAEgASgNEhMKC21heF9zdGFtaW5hGAIgASgNEhMKC3N0",
            "YW1pbmFfZGVjGAMgASgEEhoKEmN1cnJlbnRfbXBfc3RhbWluYRgEIAEoDRIW",
            "Cg5tYXhfbXBfc3RhbWluYRgFIAEoDRIWCg5tcF9zdGFtaW5hX2RlYxgGIAEo",
            "BCJfChJQcm90b1JlZ2lvbk1hcERhdGESFgoOY3VycmVudF9tYXBfaWQYASAB",
            "KAkSMQoLcmVnaW9uX21hcHMYAiADKAsyHC5nYW1lLlByb3RvUmVnaW9uTWFw",
            "SW5zdGFuY2UieAoVUHJvdG9SZWdpb25IZWFkZXJEYXRhEhYKDmN1cnJlbnRf",
            "bWFwX2lkGAEgASgJEhoKEmN1cnJlbnRfbm9kZV9pbmRleBgCIAEoBRIrCgdo",
            "ZWFkZXJzGAMgAygLMhouZ2FtZS5Qcm90b1JlZ2lvbk1hcEhlYWRlciKSAQoU",
            "UHJvdG9SZWdpb25NYXBIZWFkZXISDgoGbWFwX2lkGAEgASgJEg8KB2NsZWFy",
            "ZWQYAiABKAgSFwoPY29tcGxldGVkX2NvdW50GAMgASgFEhoKEmN1cnJlbnRf",
            "bm9kZV9pbmRleBgEIAEoBRIPCgd2aXNpdGVkGAUgASgIEhMKC3VubG9ja190",
            "aW1lGAYgASgDIvAEChZQcm90b1JlZ2lvbk1hcEluc3RhbmNlEg4KBm1hcF9p",
            "ZBgBIAEoCRIsCglub2RlX2RhdGEYAiADKAsyGS5nYW1lLlByb3RvUmVnaW9u",
            "Tm9kZURhdGESGgoSY3VycmVudF9ub2RlX2luZGV4GAMgASgFEiwKCWxvY2tf",
            "ZGF0YRgEIAMoCzIZLmdhbWUuUHJvdG9SZWdpb25Mb2NrRGF0YRIYChBlbmVt",
            "aWVzX2RlZmVhdGVkGAUgASgEEhIKCmhpZ2hfc2NvcmUYBiABKAQSMgoOcGVu",
            "ZGluZ19ldmVudHMYCCADKAsyGi5nYW1lLlByb3RvUmVnaW9uTm9kZUV2ZW50",
            "EjQKEHBlcnNpc3RlZF9ldmVudHMYCSADKAsyGi5nYW1lLlByb3RvUmVnaW9u",
            "Tm9kZUV2ZW50Eg8KB3Zpc2l0ZWQYCiABKAgSNQoVcGVuZGluZ19yZWdpb25f",
            "ZXZlbnRzGAsgAygLMhYuZ2FtZS5Qcm90b1JlZ2lvbkV2ZW50EjcKF3BlcnNp",
            "c3RlZF9yZWdpb25fZXZlbnRzGAwgAygLMhYuZ2FtZS5Qcm90b1JlZ2lvbkV2",
            "ZW50EjYKDG1pc3Npb25fZGF0YRgNIAMoCzIgLmdhbWUuUHJvdG9SZWdpb25N",
            "aXNzaW9uSW5zdGFuY2USEwoLdW5sb2NrX3RpbWUYDiABKAMSLwoIcHJvZ3Jl",
            "c3MYDyABKAsyHS5nYW1lLlByb3RvUmVnaW9uUHJvZ3Jlc3NEYXRhEjcKEHdh",
            "bmRlcmluZ19maWVuZHMYECABKAsyHS5nYW1lLlByb3RvV2FuZGVyaW5nRmll",
            "bmREYXRhIrYBChdQcm90b1JlZ2lvblByb2dyZXNzRGF0YRIwCglkaWFsb2d1",
            "ZXMYASADKAsyHS5nYW1lLlByb3RvUmVnaW9uRGlhbG9ndWVEYXRhEi4KCGR1",
            "bmdlb25zGAIgAygLMhwuZ2FtZS5Qcm90b1JlZ2lvbkR1bmdlb25EYXRhEg8K",
            "B2NsZWFyZWQYAyABKAgSEQoJY29tcGxldGVkGAQgASgIEhUKDWNsZWFyX2Ns",
            "YWltZWQYBSABKAgiTAoXUHJvdG9XYW5kZXJpbmdGaWVuZERhdGESMQoGZmll",
            "bmRzGAEgAygLMiEuZ2FtZS5Qcm90b1dhbmRlcmluZ0ZpZW5kSW5zdGFuY2Ui",
            "ZAobUHJvdG9XYW5kZXJpbmdGaWVuZEluc3RhbmNlEg4KBnN5c19pZBgBIAEo",
            "CRIPCgdzdGFydGVkGAIgASgIEhAKCHJlbGVhc2VkGAMgASgIEhIKCm5vZGVf",
            "aW5kZXgYBCABKAUiOgoXUHJvdG9SZWdpb25EaWFsb2d1ZURhdGESDgoGc3lz",
            "X2lkGAEgASgJEg8KB3BlbmRpbmcYAiABKAgiXwoWUHJvdG9SZWdpb25EdW5n",
            "ZW9uRGF0YRIOCgZzeXNfaWQYASABKAkSDwoHY2xhaW1lZBgCIAEoCBITCgtj",
            "bGVhcl9jb3VudBgDIAEoBRIPCgdjbGVhcmVkGAQgASgIIrcBChNQcm90b1Jl",
            "Z2lvbk5vZGVEYXRhEg8KB25vZGVfaWQYASABKAkSDwoHdmlzaWJsZRgCIAEo",
            "CBIOCgZsb2NrZWQYAyABKAgSEQoJY29tcGxldGVkGAQgASgIEhcKD2NvbXBs",
            "ZXRlZF9jb3VudBgFIAEoBBIOCgZvcGVuZWQYBiABKAgSEgoKd2F2ZV9pbmRl",
            "eBgHIAEoBRIQCghmb290aG9sZBgIIAEoCBIMCgRzZWVkGAkgASgDImgKE1By",
            "b3RvUmVnaW9uTG9ja0RhdGESDwoHbG9ja19pZBgBIAEoCRIWCg5wYXJlbnRf",
            "bm9kZV9pZBgCIAEoCRIWCg50YXJnZXRfbm9kZV9pZBgDIAEoCRIQCgh1bmxv",
            "Y2tlZBgEIAEoCCKGAQoQUHJvdG9SZWdpb25FdmVudBIOCgZzeXNfaWQYASAB",
            "KAkSFQoNcmVnaW9uX21hcF9pZBgCIAEoCRIYChBkZWZpbml0aW9uX3ZhbHVl",
            "GAMgASgFEg4KBnRhcmdldBgEIAEoBRINCgVvcmRlchgFIAEoBRISCgpyZXBl",
            "YXRhYmxlGAYgASgIIrQBChRQcm90b1JlZ2lvbk5vZGVFdmVudBIOCgZzeXNf",
            "aWQYASABKAkSFQoNcmVnaW9uX21hcF9pZBgCIAEoCRISCgpub2RlX2luZGV4",
            "GAMgASgFEhgKEGRlZmluaXRpb25fdmFsdWUYBCABKAUSDgoGdGFyZ2V0GAUg",
            "ASgFEg0KBW9yZGVyGAYgASgFEhIKCnJlcGVhdGFibGUYByABKAgSFAoMdGFy",
            "Z2V0X2luZGV4GAggASgFImsKFFByb3RvUmVnaW9uRXZlbnREYXRhEhQKDHNv",
            "dXJjZV9pbmRleBgBIAEoBRIUCgx0YXJnZXRfaW5kZXgYAiABKAUSGAoQZGVm",
            "aW5pdGlvbl92YWx1ZRgDIAEoBRINCgVvcmRlchgEIAEoBSKJAQoaUHJvdG9S",
            "ZWdpb25NaXNzaW9uSW5zdGFuY2USEgoKbWlzc2lvbl9pZBgBIAEoCRIsCghp",
            "bnN0YW5jZRgCIAEoCzIaLmdhbWUuUHJvdG9NaXNzaW9uSW5zdGFuY2USFQoN",
            "YXBwbHlfdG9fbm9kZRgDIAEoCBISCgpub2RlX2luZGV4GAQgASgFImAKFVBy",
            "b3RvU2tpbGxQYW5lbEdyb3VwcxIuCgtwYW5lbF9wYWdlcxgBIAMoCzIZLmdh",
            "bWUuUHJvdG9Ta2lsbFBhbmVsUGFnZRIXCg9jb21wbGV0ZWRfY291bnQYAiAB",
            "KAUihwEKE1Byb3RvU2tpbGxQYW5lbFBhZ2USDQoFaW5kZXgYASABKAUSDwoH",
            "dmlzaWJsZRgCIAEoCBIQCgh1bmxvY2tlZBgDIAEoCBIRCgljb21wbGV0ZWQY",
            "BCABKAgSKwoMc2tpbGxfcGFuZWxzGAUgAygLMhUuZ2FtZS5Qcm90b1NraWxs",
            "UGFuZWwiVwoPUHJvdG9Ta2lsbFBhbmVsEg0KBWluZGV4GAEgASgFEhAKCHVu",
            "bG9ja2VkGAIgASgIEhEKCWNvbXBsZXRlZBgDIAEoCBIQCghjYXBfaXRlbRgE",
            "IAEoCCJGChRQcm90b1dlYXBvbkludmVudG9yeRIuCgt3ZWFwb25fbGlzdBgB",
            "IAMoCzIZLmdhbWUuUHJvdG9XZWFwb25JbnN0YW5jZSKeAwoTUHJvdG9XZWFw",
            "b25JbnN0YW5jZRIWCg5iYXNlX3dlYXBvbl9pZBgBIAEoCRIZChFzdWJfd2Vh",
            "cG9uX3VubG9jaxgCIAEoBRITCgtocF9zdGF0X21vZBgDIAEoBRIXCg9hdHRh",
            "Y2tfc3RhdF9tb2QYBCABKAUSFgoOYnJlYWtfc3RhdF9tb2QYBSABKAUSFgoO",
            "bWFnaWNfc3RhdF9tb2QYBiABKAUSFgoOc3BlZWRfc3RhdF9tb2QYByABKAUS",
            "GAoQZGVmZW5zZV9zdGF0X21vZBgIIAEoBRIcChRjcml0X2NoYW5jZV9zdGF0",
            "X21vZBgJIAEoBRIWCg51bHRpbWF0ZV9ib29zdBgKIAEoBRJECg5hdXRvX2Fi",
            "aWxpdGllcxgLIAMoCzIsLmdhbWUuUHJvdG9XZWFwb25JbnN0YW5jZS5BdXRv",
            "QWJpbGl0aWVzRW50cnkSEgoKY3JlYXRlZF9hdBgMIAEoAxo0ChJBdXRvQWJp",
            "bGl0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASKK",
            "AwoVUHJvdG9CYXR0bGVTdGF0aXN0aWNzEhMKC3RvdGFsX3Njb3JlGAEgASgF",
            "EhQKDGJhdHRsZV90dXJucxgCIAEoBRIWCg5hYmlsaXRpZXNfdXNlZBgEIAEo",
            "BRIWCg50b3RhbF9ocF9yZWdlbhgFIAEoBRIaChJ0b3RhbF9kYW1hZ2VfdGFr",
            "ZW4YBiABKAUSFgoOZW5lbWllc19icm9rZW4YCCABKAUSNgoRZWxlbWVudF9v",
            "cmJfZHJhd3MYCyADKAsyGy5nYW1lLkVsZW1lbnRVc2FnZVN0YXRpc3RpYxI2",
            "ChFlbGVtZW50X29yYl91c2FnZRgMIAMoCzIbLmdhbWUuRWxlbWVudFVzYWdl",
            "U3RhdGlzdGljEjUKDWVuZW15X2RlZmVhdHMYDiADKAsyHi5nYW1lLlByb3Rv",
            "RW5lbXlEZWF0aFN0YXRpc3RpYxI7ChJhYmlsaXR5X2NhcmRfdXNhZ2UYDyAD",
            "KAsyHy5nYW1lLkFiaWxpdHlDYXJkVXNhZ2VTdGF0aXN0aWMiPwoZQWJpbGl0",
            "eUNhcmRVc2FnZVN0YXRpc3RpYxITCgtpbnN0YW5jZV9pZBgBIAEoCRINCgVj",
            "b3VudBgCIAEoBSI6ChVFbGVtZW50VXNhZ2VTdGF0aXN0aWMSEgoKZWxlbWVu",
            "dF9pZBgBIAEoCRINCgVjb3VudBgCIAEoBSLXAQoYUHJvdG9FbmVteURlYXRo",
            "U3RhdGlzdGljEhAKCGZpZW5kX2lkGAEgASgJEhIKCmVsZW1lbnRfaWQYAiAB",
            "KAkSEwoLam9iX3R5cGVfaWQYAyABKAkSFQoNZnJvbV93ZWFrbmVzcxgEIAEo",
            "CBITCgtmcm9tX25vcm1hbBgFIAEoCBIVCg1mcm9tX3VsdGltYXRlGAYgASgI",
            "EhQKDGFjdGlvbl9jb3VudBgHIAEoBRISCgp3YXZlX2luZGV4GAggASgFEhMK",
            "C2ZpZW5kX2luZGV4GAkgASgFIosBCiBQcm90b0FiaWxpdHlDYXJkU3VtbW9u",
            "RHJhd1Jlc3VsdBIwCghpbnN0YW5jZRgBIAEoCzIeLmdhbWUuUHJvdG9BYmls",
            "aXR5Q2FyZEluc3RhbmNlEg0KBWluZGV4GAIgASgFEhAKCG5ld19jYXJkGAMg",
            "ASgIEhQKDHVwZ3JhZGVfY2FyZBgEIAEoCCKUAQocUHJvdG9Kb2JDYXJkU3Vt",
            "bW9uRHJhd1Jlc3VsdBIsCghpbnN0YW5jZRgBIAEoCzIaLmdhbWUuUHJvdG9K",
            "b2JDYXJkSW5zdGFuY2USNwoSc2tpbGxfcGFuZWxfZ3JvdXBzGAIgASgLMhsu",
            "Z2FtZS5Qcm90b1NraWxsUGFuZWxHcm91cHMSDQoFaW5kZXgYAyABKAUi2wEK",
            "F1Byb3RvTWFpbGJveENsYWltUmVzdWx0EigKBGl0ZW0YASABKAsyGi5nYW1l",
            "LlByb3RvSXRlbUNsYWltUmVzdWx0EjcKDGFiaWxpdHlfY2FyZBgCIAEoCzIh",
            "LmdhbWUuUHJvdG9BYmlsaXR5Q2FyZENsYWltUmVzdWx0Ei8KCGpvYl9jYXJk",
            "GAMgASgLMh0uZ2FtZS5Qcm90b0pvYkNhcmRDbGFpbVJlc3VsdBIsCgZ3ZWFw",
            "b24YBCABKAsyHC5nYW1lLlByb3RvV2VhcG9uQ2xhaW1SZXN1bHQiOQoUUHJv",
            "dG9JdGVtQ2xhaW1SZXN1bHQSDwoHaXRlbV9pZBgBIAEoCRIQCghxdWFudGl0",
            "eRgCIAEoBSJPChtQcm90b0FiaWxpdHlDYXJkQ2xhaW1SZXN1bHQSMAoIaW5z",
            "dGFuY2UYASABKAsyHi5nYW1lLlByb3RvQWJpbGl0eUNhcmRJbnN0YW5jZSKA",
            "AQoXUHJvdG9Kb2JDYXJkQ2xhaW1SZXN1bHQSLAoIaW5zdGFuY2UYASABKAsy",
            "Gi5nYW1lLlByb3RvSm9iQ2FyZEluc3RhbmNlEjcKEnNraWxsX3BhbmVsX2dy",
            "b3VwcxgCIAEoCzIbLmdhbWUuUHJvdG9Ta2lsbFBhbmVsR3JvdXBzIkMKFlBy",
            "b3RvV2VhcG9uQ2xhaW1SZXN1bHQSKQoGd2VhcG9uGAEgASgLMhkuZ2FtZS5Q",
            "cm90b1dlYXBvbkluc3RhbmNlIkoKFFByb3RvQmF0dGxlU2VsZWN0aW9uEiQK",
            "BXdhdmVzGAEgAygLMhUuZ2FtZS5Qcm90b0JhdHRsZVdhdmUSDAoEc2VlZBgC",
            "IAEoAyJkCg9Qcm90b0JhdHRsZVdhdmUSDQoFaW5kZXgYASABKAUSKgoGZ3Jv",
            "dXBzGAIgAygLMhouZ2FtZS5Qcm90b0JhdHRsZVdhdmVHcm91cBIWCg5sZXZl",
            "bF9vdmVycmlkZRgDIAEoBSJGChRQcm90b0JhdHRsZVdhdmVHcm91cBINCgVp",
            "bmRleBgBIAEoBRINCgVjb3VudBgCIAEoBRIQCghmaWVuZF9pZBgDIAEoCSp0",
            "Cg9SZWZlcmVuY2VTb3VyY2USCAoETk9ORRAAEhAKDEFCSUxJVFlfQ0FSRBAB",
            "EgwKCEpPQl9DQVJEEAISCAoESVRFTRADEgoKBldFQVBPThAEEhMKD0ZBSVJZ",
            "X0NPTVBBTklPThAFEgwKCE1QX1NUQU1QEAZCS1o1Z2l0aHViLmNvbS9qdXN0",
            "amFjazE1MjEvbWV2aXVtL3BrZy9nZW5wcm90by9wcm90b2dhbWWqAhFNb2Jp",
            "dXMuUHJvdG8uR2FtZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mobius.Proto.Identity.PlayerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Mobius.Proto.Game.ReferenceSource), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoGameData), global::Mobius.Proto.Game.ProtoGameData.Parser, new[]{ "PlayerId", "PlayerName", "PlayerComment", "Mailbox", "AbilityCardData", "JobCardData", "ItemData", "FairyCompanionData", "RegionMapData", "SinglePlayBattleData", "MultiPlayBattleData", "CardFilterSortSets", "PlayerProgressData" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoAbilityCardData), global::Mobius.Proto.Game.ProtoAbilityCardData.Parser, new[]{ "RentalCardId", "Inventory", "Bank", "History", "MaxCardLevels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoAbilityCardHistory), global::Mobius.Proto.Game.ProtoAbilityCardHistory.Parser, new[]{ "BaseList", "CardList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBaseCardHistoryInstance), global::Mobius.Proto.Game.ProtoBaseCardHistoryInstance.Parser, new[]{ "BaseCardId", "HighestStarLevel", "HighestAbilityCardId", "HighestAugmentConfigId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoAbilityCardHistoryInstance), global::Mobius.Proto.Game.ProtoAbilityCardHistoryInstance.Parser, new[]{ "AbilityCardId", "StarLevel", "AutoSell", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoAbilityCardInventory), global::Mobius.Proto.Game.ProtoAbilityCardInventory.Parser, new[]{ "MaxSlots", "CardList", "Source" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoAbilityCardInstance), global::Mobius.Proto.Game.ProtoAbilityCardInstance.Parser, new[]{ "SysId", "AbilityCardId", "AugmentConfigId", "AccumExp", "TotalAccumExp", "CardLevel", "AbilityLevel", "SeedUnlock", "ExtraSkillUnlock", "OverBoostLevel", "AutoAbilities", "CardLock", "Source", "CreatedAt", "BaseConfigId", "ExtraSkillProgress" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBattleData), global::Mobius.Proto.Game.ProtoBattleData.Parser, new[]{ "PlayerLevel", "PlayMode", "TotalExp", "AccumExp", "ExpBonus", "Stamina", "Decks", "EnemiesDefeated", "StartData", "Results" }, new[]{ "StartData", "Results" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBattleStartData), global::Mobius.Proto.Game.ProtoBattleStartData.Parser, new[]{ "RegionMapId", "RegionNodeId", "RegionNodeIndex", "NodeWaveIndex", "DeckIndex", "HardMode", "Completed", "TotalExp", "GoldReward", "PlayerExperienceBonus", "AddExperienceBonus", "AreaSeedMultiplier", "AbilitySeedMultiplier", "ItemDropTable", "CardDropTable", "ProgressData", "CardProgressData", "RentalPlayerId", "RentalCard", "ReviveUsed", "CreatedAt", "FiendSpawns", "SelectionResults" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBattleFiendSpawn), global::Mobius.Proto.Game.ProtoBattleFiendSpawn.Parser, new[]{ "ReplacesFiend", "ReplacesWith" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBattleProgressData), global::Mobius.Proto.Game.ProtoBattleProgressData.Parser, new[]{ "PlayerLevel", "TotalExp", "AccumExp", "ExpBonus", "DeckCount", "MaxStamina" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoCardProgressData), global::Mobius.Proto.Game.ProtoCardProgressData.Parser, new[]{ "InstanceId", "SlotIndex", "Level", "TotalExp", "AccumExp", "ExtraSkillUnlock", "ExtraSkillUnlockRequirement", "ExtraSkillProgressed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoMission), global::Mobius.Proto.Game.ProtoMission.Parser, new[]{ "ReferenceId", "PrimaryDefinition", "SecondaryDefinition", "Required" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoMissionInstance), global::Mobius.Proto.Game.ProtoMissionInstance.Parser, new[]{ "Mission", "Progress", "Confirmed", "Claimed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoDailyMissionInstance), global::Mobius.Proto.Game.ProtoDailyMissionInstance.Parser, new[]{ "Id", "Instance", "ReceivedAt", "ItemRewards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.BattleItemDrop), global::Mobius.Proto.Game.BattleItemDrop.Parser, new[]{ "Key", "Drop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.BattleCardDrop), global::Mobius.Proto.Game.BattleCardDrop.Parser, new[]{ "Key", "Drop" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.BattleDropTableKey), global::Mobius.Proto.Game.BattleDropTableKey.Parser, new[]{ "FiendId", "FiendIndex", "WaveIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.BattleItemDropResult), global::Mobius.Proto.Game.BattleItemDropResult.Parser, new[]{ "ItemId", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.BattleCardDropResult), global::Mobius.Proto.Game.BattleCardDropResult.Parser, new[]{ "CardId", "NewCard" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoCardFilterSortSet), global::Mobius.Proto.Game.ProtoCardFilterSortSet.Parser, new[]{ "View", "Sets" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoCardFilterSort), global::Mobius.Proto.Game.ProtoCardFilterSort.Parser, new[]{ "Index", "CardTypes", "CardCategories", "SpecialFilters", "SortSelectors", "SortDescending" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoLoginCampaignInstance), global::Mobius.Proto.Game.ProtoLoginCampaignInstance.Parser, new[]{ "Id", "Claimed", "LastClaimIndex", "LastClaimAdded" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoFairyCompanionData), global::Mobius.Proto.Game.ProtoFairyCompanionData.Parser, new[]{ "CurrentCompanionIndex", "Inventory", "LastPrimaryCompanion" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoFairyCompanionInventory), global::Mobius.Proto.Game.ProtoFairyCompanionInventory.Parser, new[]{ "CompanionList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoFairyCompanionInstance), global::Mobius.Proto.Game.ProtoFairyCompanionInstance.Parser, new[]{ "SysId", "BaseCompanionId", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoItemData), global::Mobius.Proto.Game.ProtoItemData.Parser, new[]{ "Inventory", "LimitData", "Distillers", "GiftBoxes" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoItemDistiller), global::Mobius.Proto.Game.ProtoItemDistiller.Parser, new[]{ "ItemId", "DecTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoItemDropRecord), global::Mobius.Proto.Game.ProtoItemDropRecord.Parser, new[]{ "Key", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoItemInventory), global::Mobius.Proto.Game.ProtoItemInventory.Parser, new[]{ "ItemList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoGiftBoxInstance), global::Mobius.Proto.Game.ProtoGiftBoxInstance.Parser, new[]{ "Id", "PurchasedAt", "PurchaseCount", "EffectiveDays" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoItemInstance), global::Mobius.Proto.Game.ProtoItemInstance.Parser, new[]{ "SysId", "Quantity", "ItemId", "CreatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoItemValuePair), global::Mobius.Proto.Game.ProtoItemValuePair.Parser, new[]{ "ItemId", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoJobCardData), global::Mobius.Proto.Game.ProtoJobCardData.Parser, new[]{ "Jobs", "Weapons", "SkillPanels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoJobInventory), global::Mobius.Proto.Game.ProtoJobInventory.Parser, new[]{ "JobList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoJobCardInstance), global::Mobius.Proto.Game.ProtoJobCardInstance.Parser, new[]{ "SysId", "SubJobUnlock", "OverBoostLevel", "SkillPanelUnlocks", "BaseJobId", "CreatedAt", "WeaponUnlock", "HpStatMod", "AttackStatMod", "BreakStatMod", "MagicStatMod", "SpeedStatMod", "DefenseStatMod", "CritChanceStatMod", "UltimateBoost", "AutoAbilities", "CrownLevel" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoLastBattleResults), global::Mobius.Proto.Game.ProtoLastBattleResults.Parser, new[]{ "RegionMapId", "RegionNodeIndex", "Score", "TotalExp", "SeedAreaMultiplier", "SeedBattleMultiplier", "ProgressData", "CardProgressData", "ItemRewards", "CardRewards", "CompanionRewards", "PendingEvents", "DailyMissionProgress", "AchievementUnlock", "RegionMissionProgress", "WanderingFiendMovements" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.TaggedBattleItemReward), global::Mobius.Proto.Game.TaggedBattleItemReward.Parser, new[]{ "ItemId", "Quantity", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.TaggedBattleCardReward), global::Mobius.Proto.Game.TaggedBattleCardReward.Parser, new[]{ "InstanceId", "AbilityCardId", "NewCard", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.TaggedBattleCompanionReward), global::Mobius.Proto.Game.TaggedBattleCompanionReward.Parser, new[]{ "CompanionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoMailBox), global::Mobius.Proto.Game.ProtoMailBox.Parser, new[]{ "Items", "MaxItems" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoMailBoxItem), global::Mobius.Proto.Game.ProtoMailBoxItem.Parser, new[]{ "Id", "ReferenceId", "Source", "Quantity", "ReceivedAt", "ClaimSource", "Confirmed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoPlayerDeckCollection), global::Mobius.Proto.Game.ProtoPlayerDeckCollection.Parser, new[]{ "CurrentDeckIndex", "Decks" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoPlayerDeck), global::Mobius.Proto.Game.ProtoPlayerDeck.Parser, new[]{ "JobCardIndex", "SubJobCardIndex", "AbilityCardSlots", "SubAbilityCardSlots", "WeaponIndex", "SubWeaponIndex", "DeckIndex", "JobCardSubIndex", "SubJobCardSubIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoPlayerDeckSlot), global::Mobius.Proto.Game.ProtoPlayerDeckSlot.Parser, new[]{ "AbilityCardId", "SlotIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoPlayerStamina), global::Mobius.Proto.Game.ProtoPlayerStamina.Parser, new[]{ "CurrentStamina", "MaxStamina", "StaminaDec", "CurrentMpStamina", "MaxMpStamina", "MpStaminaDec" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionMapData), global::Mobius.Proto.Game.ProtoRegionMapData.Parser, new[]{ "CurrentMapId", "RegionMaps" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionHeaderData), global::Mobius.Proto.Game.ProtoRegionHeaderData.Parser, new[]{ "CurrentMapId", "CurrentNodeIndex", "Headers" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionMapHeader), global::Mobius.Proto.Game.ProtoRegionMapHeader.Parser, new[]{ "MapId", "Cleared", "CompletedCount", "CurrentNodeIndex", "Visited", "UnlockTime" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionMapInstance), global::Mobius.Proto.Game.ProtoRegionMapInstance.Parser, new[]{ "MapId", "NodeData", "CurrentNodeIndex", "LockData", "EnemiesDefeated", "HighScore", "PendingEvents", "PersistedEvents", "Visited", "PendingRegionEvents", "PersistedRegionEvents", "MissionData", "UnlockTime", "Progress", "WanderingFiends" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionProgressData), global::Mobius.Proto.Game.ProtoRegionProgressData.Parser, new[]{ "Dialogues", "Dungeons", "Cleared", "Completed", "ClearClaimed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoWanderingFiendData), global::Mobius.Proto.Game.ProtoWanderingFiendData.Parser, new[]{ "Fiends" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoWanderingFiendInstance), global::Mobius.Proto.Game.ProtoWanderingFiendInstance.Parser, new[]{ "SysId", "Started", "Released", "NodeIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionDialogueData), global::Mobius.Proto.Game.ProtoRegionDialogueData.Parser, new[]{ "SysId", "Pending" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionDungeonData), global::Mobius.Proto.Game.ProtoRegionDungeonData.Parser, new[]{ "SysId", "Claimed", "ClearCount", "Cleared" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionNodeData), global::Mobius.Proto.Game.ProtoRegionNodeData.Parser, new[]{ "NodeId", "Visible", "Locked", "Completed", "CompletedCount", "Opened", "WaveIndex", "Foothold", "Seed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionLockData), global::Mobius.Proto.Game.ProtoRegionLockData.Parser, new[]{ "LockId", "ParentNodeId", "TargetNodeId", "Unlocked" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionEvent), global::Mobius.Proto.Game.ProtoRegionEvent.Parser, new[]{ "SysId", "RegionMapId", "DefinitionValue", "Target", "Order", "Repeatable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionNodeEvent), global::Mobius.Proto.Game.ProtoRegionNodeEvent.Parser, new[]{ "SysId", "RegionMapId", "NodeIndex", "DefinitionValue", "Target", "Order", "Repeatable", "TargetIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionEventData), global::Mobius.Proto.Game.ProtoRegionEventData.Parser, new[]{ "SourceIndex", "TargetIndex", "DefinitionValue", "Order" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoRegionMissionInstance), global::Mobius.Proto.Game.ProtoRegionMissionInstance.Parser, new[]{ "MissionId", "Instance", "ApplyToNode", "NodeIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoSkillPanelGroups), global::Mobius.Proto.Game.ProtoSkillPanelGroups.Parser, new[]{ "PanelPages", "CompletedCount" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoSkillPanelPage), global::Mobius.Proto.Game.ProtoSkillPanelPage.Parser, new[]{ "Index", "Visible", "Unlocked", "Completed", "SkillPanels" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoSkillPanel), global::Mobius.Proto.Game.ProtoSkillPanel.Parser, new[]{ "Index", "Unlocked", "Completed", "CapItem" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoWeaponInventory), global::Mobius.Proto.Game.ProtoWeaponInventory.Parser, new[]{ "WeaponList" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoWeaponInstance), global::Mobius.Proto.Game.ProtoWeaponInstance.Parser, new[]{ "BaseWeaponId", "SubWeaponUnlock", "HpStatMod", "AttackStatMod", "BreakStatMod", "MagicStatMod", "SpeedStatMod", "DefenseStatMod", "CritChanceStatMod", "UltimateBoost", "AutoAbilities", "CreatedAt" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBattleStatistics), global::Mobius.Proto.Game.ProtoBattleStatistics.Parser, new[]{ "TotalScore", "BattleTurns", "AbilitiesUsed", "TotalHpRegen", "TotalDamageTaken", "EnemiesBroken", "ElementOrbDraws", "ElementOrbUsage", "EnemyDefeats", "AbilityCardUsage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.AbilityCardUsageStatistic), global::Mobius.Proto.Game.AbilityCardUsageStatistic.Parser, new[]{ "InstanceId", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ElementUsageStatistic), global::Mobius.Proto.Game.ElementUsageStatistic.Parser, new[]{ "ElementId", "Count" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoEnemyDeathStatistic), global::Mobius.Proto.Game.ProtoEnemyDeathStatistic.Parser, new[]{ "FiendId", "ElementId", "JobTypeId", "FromWeakness", "FromNormal", "FromUltimate", "ActionCount", "WaveIndex", "FiendIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoAbilityCardSummonDrawResult), global::Mobius.Proto.Game.ProtoAbilityCardSummonDrawResult.Parser, new[]{ "Instance", "Index", "NewCard", "UpgradeCard" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoJobCardSummonDrawResult), global::Mobius.Proto.Game.ProtoJobCardSummonDrawResult.Parser, new[]{ "Instance", "SkillPanelGroups", "Index" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoMailboxClaimResult), global::Mobius.Proto.Game.ProtoMailboxClaimResult.Parser, new[]{ "Item", "AbilityCard", "JobCard", "Weapon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoItemClaimResult), global::Mobius.Proto.Game.ProtoItemClaimResult.Parser, new[]{ "ItemId", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoAbilityCardClaimResult), global::Mobius.Proto.Game.ProtoAbilityCardClaimResult.Parser, new[]{ "Instance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoJobCardClaimResult), global::Mobius.Proto.Game.ProtoJobCardClaimResult.Parser, new[]{ "Instance", "SkillPanelGroups" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoWeaponClaimResult), global::Mobius.Proto.Game.ProtoWeaponClaimResult.Parser, new[]{ "Weapon" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBattleSelection), global::Mobius.Proto.Game.ProtoBattleSelection.Parser, new[]{ "Waves", "Seed" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBattleWave), global::Mobius.Proto.Game.ProtoBattleWave.Parser, new[]{ "Index", "Groups", "LevelOverride" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Game.ProtoBattleWaveGroup), global::Mobius.Proto.Game.ProtoBattleWaveGroup.Parser, new[]{ "Index", "Count", "FiendId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ReferenceSource {
    [pbr::OriginalName("NONE")] None = 0,
    [pbr::OriginalName("ABILITY_CARD")] AbilityCard = 1,
    [pbr::OriginalName("JOB_CARD")] JobCard = 2,
    [pbr::OriginalName("ITEM")] Item = 3,
    [pbr::OriginalName("WEAPON")] Weapon = 4,
    [pbr::OriginalName("FAIRY_COMPANION")] FairyCompanion = 5,
    [pbr::OriginalName("MP_STAMP")] MpStamp = 6,
  }

  #endregion

  #region Messages
  public sealed partial class ProtoGameData : pb::IMessage<ProtoGameData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoGameData> _parser = new pb::MessageParser<ProtoGameData>(() => new ProtoGameData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoGameData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoGameData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoGameData(ProtoGameData other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerComment_ = other.playerComment_;
      mailbox_ = other.mailbox_ != null ? other.mailbox_.Clone() : null;
      abilityCardData_ = other.abilityCardData_ != null ? other.abilityCardData_.Clone() : null;
      jobCardData_ = other.jobCardData_ != null ? other.jobCardData_.Clone() : null;
      itemData_ = other.itemData_ != null ? other.itemData_.Clone() : null;
      fairyCompanionData_ = other.fairyCompanionData_ != null ? other.fairyCompanionData_.Clone() : null;
      regionMapData_ = other.regionMapData_ != null ? other.regionMapData_.Clone() : null;
      singlePlayBattleData_ = other.singlePlayBattleData_ != null ? other.singlePlayBattleData_.Clone() : null;
      multiPlayBattleData_ = other.multiPlayBattleData_ != null ? other.multiPlayBattleData_.Clone() : null;
      cardFilterSortSets_ = other.cardFilterSortSets_.Clone();
      playerProgressData_ = other.playerProgressData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoGameData Clone() {
      return new ProtoGameData(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_comment" field.</summary>
    public const int PlayerCommentFieldNumber = 3;
    private string playerComment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerComment {
      get { return playerComment_; }
      set {
        playerComment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mailbox" field.</summary>
    public const int MailboxFieldNumber = 4;
    private global::Mobius.Proto.Game.ProtoMailBox mailbox_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoMailBox Mailbox {
      get { return mailbox_; }
      set {
        mailbox_ = value;
      }
    }

    /// <summary>Field number for the "ability_card_data" field.</summary>
    public const int AbilityCardDataFieldNumber = 5;
    private global::Mobius.Proto.Game.ProtoAbilityCardData abilityCardData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoAbilityCardData AbilityCardData {
      get { return abilityCardData_; }
      set {
        abilityCardData_ = value;
      }
    }

    /// <summary>Field number for the "job_card_data" field.</summary>
    public const int JobCardDataFieldNumber = 6;
    private global::Mobius.Proto.Game.ProtoJobCardData jobCardData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoJobCardData JobCardData {
      get { return jobCardData_; }
      set {
        jobCardData_ = value;
      }
    }

    /// <summary>Field number for the "item_data" field.</summary>
    public const int ItemDataFieldNumber = 7;
    private global::Mobius.Proto.Game.ProtoItemData itemData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoItemData ItemData {
      get { return itemData_; }
      set {
        itemData_ = value;
      }
    }

    /// <summary>Field number for the "fairy_companion_data" field.</summary>
    public const int FairyCompanionDataFieldNumber = 8;
    private global::Mobius.Proto.Game.ProtoFairyCompanionData fairyCompanionData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoFairyCompanionData FairyCompanionData {
      get { return fairyCompanionData_; }
      set {
        fairyCompanionData_ = value;
      }
    }

    /// <summary>Field number for the "region_map_data" field.</summary>
    public const int RegionMapDataFieldNumber = 9;
    private global::Mobius.Proto.Game.ProtoRegionHeaderData regionMapData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoRegionHeaderData RegionMapData {
      get { return regionMapData_; }
      set {
        regionMapData_ = value;
      }
    }

    /// <summary>Field number for the "single_play_battle_data" field.</summary>
    public const int SinglePlayBattleDataFieldNumber = 10;
    private global::Mobius.Proto.Game.ProtoBattleData singlePlayBattleData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoBattleData SinglePlayBattleData {
      get { return singlePlayBattleData_; }
      set {
        singlePlayBattleData_ = value;
      }
    }

    /// <summary>Field number for the "multi_play_battle_data" field.</summary>
    public const int MultiPlayBattleDataFieldNumber = 11;
    private global::Mobius.Proto.Game.ProtoBattleData multiPlayBattleData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoBattleData MultiPlayBattleData {
      get { return multiPlayBattleData_; }
      set {
        multiPlayBattleData_ = value;
      }
    }

    /// <summary>Field number for the "card_filter_sort_sets" field.</summary>
    public const int CardFilterSortSetsFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoCardFilterSortSet> _repeated_cardFilterSortSets_codec
        = pb::FieldCodec.ForMessage(162, global::Mobius.Proto.Game.ProtoCardFilterSortSet.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardFilterSortSet> cardFilterSortSets_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardFilterSortSet>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardFilterSortSet> CardFilterSortSets {
      get { return cardFilterSortSets_; }
    }

    /// <summary>Field number for the "player_progress_data" field.</summary>
    public const int PlayerProgressDataFieldNumber = 100;
    private static readonly pbc::MapField<string, bool>.Codec _map_playerProgressData_codec
        = new pbc::MapField<string, bool>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForBool(16, false), 802);
    private readonly pbc::MapField<string, bool> playerProgressData_ = new pbc::MapField<string, bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, bool> PlayerProgressData {
      get { return playerProgressData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoGameData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoGameData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerComment != other.PlayerComment) return false;
      if (!object.Equals(Mailbox, other.Mailbox)) return false;
      if (!object.Equals(AbilityCardData, other.AbilityCardData)) return false;
      if (!object.Equals(JobCardData, other.JobCardData)) return false;
      if (!object.Equals(ItemData, other.ItemData)) return false;
      if (!object.Equals(FairyCompanionData, other.FairyCompanionData)) return false;
      if (!object.Equals(RegionMapData, other.RegionMapData)) return false;
      if (!object.Equals(SinglePlayBattleData, other.SinglePlayBattleData)) return false;
      if (!object.Equals(MultiPlayBattleData, other.MultiPlayBattleData)) return false;
      if(!cardFilterSortSets_.Equals(other.cardFilterSortSets_)) return false;
      if (!PlayerProgressData.Equals(other.PlayerProgressData)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerComment.Length != 0) hash ^= PlayerComment.GetHashCode();
      if (mailbox_ != null) hash ^= Mailbox.GetHashCode();
      if (abilityCardData_ != null) hash ^= AbilityCardData.GetHashCode();
      if (jobCardData_ != null) hash ^= JobCardData.GetHashCode();
      if (itemData_ != null) hash ^= ItemData.GetHashCode();
      if (fairyCompanionData_ != null) hash ^= FairyCompanionData.GetHashCode();
      if (regionMapData_ != null) hash ^= RegionMapData.GetHashCode();
      if (singlePlayBattleData_ != null) hash ^= SinglePlayBattleData.GetHashCode();
      if (multiPlayBattleData_ != null) hash ^= MultiPlayBattleData.GetHashCode();
      hash ^= cardFilterSortSets_.GetHashCode();
      hash ^= PlayerProgressData.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerComment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerComment);
      }
      if (mailbox_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mailbox);
      }
      if (abilityCardData_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AbilityCardData);
      }
      if (jobCardData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(JobCardData);
      }
      if (itemData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ItemData);
      }
      if (fairyCompanionData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FairyCompanionData);
      }
      if (regionMapData_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RegionMapData);
      }
      if (singlePlayBattleData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SinglePlayBattleData);
      }
      if (multiPlayBattleData_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(MultiPlayBattleData);
      }
      cardFilterSortSets_.WriteTo(output, _repeated_cardFilterSortSets_codec);
      playerProgressData_.WriteTo(output, _map_playerProgressData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerComment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerComment);
      }
      if (mailbox_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Mailbox);
      }
      if (abilityCardData_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(AbilityCardData);
      }
      if (jobCardData_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(JobCardData);
      }
      if (itemData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ItemData);
      }
      if (fairyCompanionData_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(FairyCompanionData);
      }
      if (regionMapData_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RegionMapData);
      }
      if (singlePlayBattleData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(SinglePlayBattleData);
      }
      if (multiPlayBattleData_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(MultiPlayBattleData);
      }
      cardFilterSortSets_.WriteTo(ref output, _repeated_cardFilterSortSets_codec);
      playerProgressData_.WriteTo(ref output, _map_playerProgressData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerComment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerComment);
      }
      if (mailbox_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mailbox);
      }
      if (abilityCardData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AbilityCardData);
      }
      if (jobCardData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobCardData);
      }
      if (itemData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ItemData);
      }
      if (fairyCompanionData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FairyCompanionData);
      }
      if (regionMapData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RegionMapData);
      }
      if (singlePlayBattleData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SinglePlayBattleData);
      }
      if (multiPlayBattleData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MultiPlayBattleData);
      }
      size += cardFilterSortSets_.CalculateSize(_repeated_cardFilterSortSets_codec);
      size += playerProgressData_.CalculateSize(_map_playerProgressData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoGameData other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerComment.Length != 0) {
        PlayerComment = other.PlayerComment;
      }
      if (other.mailbox_ != null) {
        if (mailbox_ == null) {
          Mailbox = new global::Mobius.Proto.Game.ProtoMailBox();
        }
        Mailbox.MergeFrom(other.Mailbox);
      }
      if (other.abilityCardData_ != null) {
        if (abilityCardData_ == null) {
          AbilityCardData = new global::Mobius.Proto.Game.ProtoAbilityCardData();
        }
        AbilityCardData.MergeFrom(other.AbilityCardData);
      }
      if (other.jobCardData_ != null) {
        if (jobCardData_ == null) {
          JobCardData = new global::Mobius.Proto.Game.ProtoJobCardData();
        }
        JobCardData.MergeFrom(other.JobCardData);
      }
      if (other.itemData_ != null) {
        if (itemData_ == null) {
          ItemData = new global::Mobius.Proto.Game.ProtoItemData();
        }
        ItemData.MergeFrom(other.ItemData);
      }
      if (other.fairyCompanionData_ != null) {
        if (fairyCompanionData_ == null) {
          FairyCompanionData = new global::Mobius.Proto.Game.ProtoFairyCompanionData();
        }
        FairyCompanionData.MergeFrom(other.FairyCompanionData);
      }
      if (other.regionMapData_ != null) {
        if (regionMapData_ == null) {
          RegionMapData = new global::Mobius.Proto.Game.ProtoRegionHeaderData();
        }
        RegionMapData.MergeFrom(other.RegionMapData);
      }
      if (other.singlePlayBattleData_ != null) {
        if (singlePlayBattleData_ == null) {
          SinglePlayBattleData = new global::Mobius.Proto.Game.ProtoBattleData();
        }
        SinglePlayBattleData.MergeFrom(other.SinglePlayBattleData);
      }
      if (other.multiPlayBattleData_ != null) {
        if (multiPlayBattleData_ == null) {
          MultiPlayBattleData = new global::Mobius.Proto.Game.ProtoBattleData();
        }
        MultiPlayBattleData.MergeFrom(other.MultiPlayBattleData);
      }
      cardFilterSortSets_.Add(other.cardFilterSortSets_);
      playerProgressData_.Add(other.playerProgressData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 26: {
            PlayerComment = input.ReadString();
            break;
          }
          case 34: {
            if (mailbox_ == null) {
              Mailbox = new global::Mobius.Proto.Game.ProtoMailBox();
            }
            input.ReadMessage(Mailbox);
            break;
          }
          case 42: {
            if (abilityCardData_ == null) {
              AbilityCardData = new global::Mobius.Proto.Game.ProtoAbilityCardData();
            }
            input.ReadMessage(AbilityCardData);
            break;
          }
          case 50: {
            if (jobCardData_ == null) {
              JobCardData = new global::Mobius.Proto.Game.ProtoJobCardData();
            }
            input.ReadMessage(JobCardData);
            break;
          }
          case 58: {
            if (itemData_ == null) {
              ItemData = new global::Mobius.Proto.Game.ProtoItemData();
            }
            input.ReadMessage(ItemData);
            break;
          }
          case 66: {
            if (fairyCompanionData_ == null) {
              FairyCompanionData = new global::Mobius.Proto.Game.ProtoFairyCompanionData();
            }
            input.ReadMessage(FairyCompanionData);
            break;
          }
          case 74: {
            if (regionMapData_ == null) {
              RegionMapData = new global::Mobius.Proto.Game.ProtoRegionHeaderData();
            }
            input.ReadMessage(RegionMapData);
            break;
          }
          case 82: {
            if (singlePlayBattleData_ == null) {
              SinglePlayBattleData = new global::Mobius.Proto.Game.ProtoBattleData();
            }
            input.ReadMessage(SinglePlayBattleData);
            break;
          }
          case 90: {
            if (multiPlayBattleData_ == null) {
              MultiPlayBattleData = new global::Mobius.Proto.Game.ProtoBattleData();
            }
            input.ReadMessage(MultiPlayBattleData);
            break;
          }
          case 162: {
            cardFilterSortSets_.AddEntriesFrom(input, _repeated_cardFilterSortSets_codec);
            break;
          }
          case 802: {
            playerProgressData_.AddEntriesFrom(input, _map_playerProgressData_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 26: {
            PlayerComment = input.ReadString();
            break;
          }
          case 34: {
            if (mailbox_ == null) {
              Mailbox = new global::Mobius.Proto.Game.ProtoMailBox();
            }
            input.ReadMessage(Mailbox);
            break;
          }
          case 42: {
            if (abilityCardData_ == null) {
              AbilityCardData = new global::Mobius.Proto.Game.ProtoAbilityCardData();
            }
            input.ReadMessage(AbilityCardData);
            break;
          }
          case 50: {
            if (jobCardData_ == null) {
              JobCardData = new global::Mobius.Proto.Game.ProtoJobCardData();
            }
            input.ReadMessage(JobCardData);
            break;
          }
          case 58: {
            if (itemData_ == null) {
              ItemData = new global::Mobius.Proto.Game.ProtoItemData();
            }
            input.ReadMessage(ItemData);
            break;
          }
          case 66: {
            if (fairyCompanionData_ == null) {
              FairyCompanionData = new global::Mobius.Proto.Game.ProtoFairyCompanionData();
            }
            input.ReadMessage(FairyCompanionData);
            break;
          }
          case 74: {
            if (regionMapData_ == null) {
              RegionMapData = new global::Mobius.Proto.Game.ProtoRegionHeaderData();
            }
            input.ReadMessage(RegionMapData);
            break;
          }
          case 82: {
            if (singlePlayBattleData_ == null) {
              SinglePlayBattleData = new global::Mobius.Proto.Game.ProtoBattleData();
            }
            input.ReadMessage(SinglePlayBattleData);
            break;
          }
          case 90: {
            if (multiPlayBattleData_ == null) {
              MultiPlayBattleData = new global::Mobius.Proto.Game.ProtoBattleData();
            }
            input.ReadMessage(MultiPlayBattleData);
            break;
          }
          case 162: {
            cardFilterSortSets_.AddEntriesFrom(ref input, _repeated_cardFilterSortSets_codec);
            break;
          }
          case 802: {
            playerProgressData_.AddEntriesFrom(ref input, _map_playerProgressData_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardData : pb::IMessage<ProtoAbilityCardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardData> _parser = new pb::MessageParser<ProtoAbilityCardData>(() => new ProtoAbilityCardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardData(ProtoAbilityCardData other) : this() {
      rentalCardId_ = other.rentalCardId_;
      inventory_ = other.inventory_ != null ? other.inventory_.Clone() : null;
      bank_ = other.bank_ != null ? other.bank_.Clone() : null;
      history_ = other.history_ != null ? other.history_.Clone() : null;
      maxCardLevels_ = other.maxCardLevels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardData Clone() {
      return new ProtoAbilityCardData(this);
    }

    /// <summary>Field number for the "rental_card_id" field.</summary>
    public const int RentalCardIdFieldNumber = 1;
    private string rentalCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RentalCardId {
      get { return rentalCardId_; }
      set {
        rentalCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 2;
    private global::Mobius.Proto.Game.ProtoAbilityCardInventory inventory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoAbilityCardInventory Inventory {
      get { return inventory_; }
      set {
        inventory_ = value;
      }
    }

    /// <summary>Field number for the "bank" field.</summary>
    public const int BankFieldNumber = 3;
    private global::Mobius.Proto.Game.ProtoAbilityCardInventory bank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoAbilityCardInventory Bank {
      get { return bank_; }
      set {
        bank_ = value;
      }
    }

    /// <summary>Field number for the "history" field.</summary>
    public const int HistoryFieldNumber = 4;
    private global::Mobius.Proto.Game.ProtoAbilityCardHistory history_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoAbilityCardHistory History {
      get { return history_; }
      set {
        history_ = value;
      }
    }

    /// <summary>Field number for the "max_card_levels" field.</summary>
    public const int MaxCardLevelsFieldNumber = 5;
    private static readonly pbc::MapField<string, int>.Codec _map_maxCardLevels_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 42);
    private readonly pbc::MapField<string, int> maxCardLevels_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> MaxCardLevels {
      get { return maxCardLevels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RentalCardId != other.RentalCardId) return false;
      if (!object.Equals(Inventory, other.Inventory)) return false;
      if (!object.Equals(Bank, other.Bank)) return false;
      if (!object.Equals(History, other.History)) return false;
      if (!MaxCardLevels.Equals(other.MaxCardLevels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RentalCardId.Length != 0) hash ^= RentalCardId.GetHashCode();
      if (inventory_ != null) hash ^= Inventory.GetHashCode();
      if (bank_ != null) hash ^= Bank.GetHashCode();
      if (history_ != null) hash ^= History.GetHashCode();
      hash ^= MaxCardLevels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RentalCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RentalCardId);
      }
      if (inventory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Inventory);
      }
      if (bank_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Bank);
      }
      if (history_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(History);
      }
      maxCardLevels_.WriteTo(output, _map_maxCardLevels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RentalCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RentalCardId);
      }
      if (inventory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Inventory);
      }
      if (bank_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Bank);
      }
      if (history_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(History);
      }
      maxCardLevels_.WriteTo(ref output, _map_maxCardLevels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RentalCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RentalCardId);
      }
      if (inventory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inventory);
      }
      if (bank_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bank);
      }
      if (history_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(History);
      }
      size += maxCardLevels_.CalculateSize(_map_maxCardLevels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardData other) {
      if (other == null) {
        return;
      }
      if (other.RentalCardId.Length != 0) {
        RentalCardId = other.RentalCardId;
      }
      if (other.inventory_ != null) {
        if (inventory_ == null) {
          Inventory = new global::Mobius.Proto.Game.ProtoAbilityCardInventory();
        }
        Inventory.MergeFrom(other.Inventory);
      }
      if (other.bank_ != null) {
        if (bank_ == null) {
          Bank = new global::Mobius.Proto.Game.ProtoAbilityCardInventory();
        }
        Bank.MergeFrom(other.Bank);
      }
      if (other.history_ != null) {
        if (history_ == null) {
          History = new global::Mobius.Proto.Game.ProtoAbilityCardHistory();
        }
        History.MergeFrom(other.History);
      }
      maxCardLevels_.Add(other.maxCardLevels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RentalCardId = input.ReadString();
            break;
          }
          case 18: {
            if (inventory_ == null) {
              Inventory = new global::Mobius.Proto.Game.ProtoAbilityCardInventory();
            }
            input.ReadMessage(Inventory);
            break;
          }
          case 26: {
            if (bank_ == null) {
              Bank = new global::Mobius.Proto.Game.ProtoAbilityCardInventory();
            }
            input.ReadMessage(Bank);
            break;
          }
          case 34: {
            if (history_ == null) {
              History = new global::Mobius.Proto.Game.ProtoAbilityCardHistory();
            }
            input.ReadMessage(History);
            break;
          }
          case 42: {
            maxCardLevels_.AddEntriesFrom(input, _map_maxCardLevels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RentalCardId = input.ReadString();
            break;
          }
          case 18: {
            if (inventory_ == null) {
              Inventory = new global::Mobius.Proto.Game.ProtoAbilityCardInventory();
            }
            input.ReadMessage(Inventory);
            break;
          }
          case 26: {
            if (bank_ == null) {
              Bank = new global::Mobius.Proto.Game.ProtoAbilityCardInventory();
            }
            input.ReadMessage(Bank);
            break;
          }
          case 34: {
            if (history_ == null) {
              History = new global::Mobius.Proto.Game.ProtoAbilityCardHistory();
            }
            input.ReadMessage(History);
            break;
          }
          case 42: {
            maxCardLevels_.AddEntriesFrom(ref input, _map_maxCardLevels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardHistory : pb::IMessage<ProtoAbilityCardHistory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardHistory> _parser = new pb::MessageParser<ProtoAbilityCardHistory>(() => new ProtoAbilityCardHistory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardHistory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardHistory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardHistory(ProtoAbilityCardHistory other) : this() {
      baseList_ = other.baseList_.Clone();
      cardList_ = other.cardList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardHistory Clone() {
      return new ProtoAbilityCardHistory(this);
    }

    /// <summary>Field number for the "base_list" field.</summary>
    public const int BaseListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoBaseCardHistoryInstance> _repeated_baseList_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoBaseCardHistoryInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBaseCardHistoryInstance> baseList_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBaseCardHistoryInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBaseCardHistoryInstance> BaseList {
      get { return baseList_; }
    }

    /// <summary>Field number for the "card_list" field.</summary>
    public const int CardListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoAbilityCardHistoryInstance> _repeated_cardList_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoAbilityCardHistoryInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoAbilityCardHistoryInstance> cardList_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoAbilityCardHistoryInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoAbilityCardHistoryInstance> CardList {
      get { return cardList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardHistory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardHistory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!baseList_.Equals(other.baseList_)) return false;
      if(!cardList_.Equals(other.cardList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= baseList_.GetHashCode();
      hash ^= cardList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      baseList_.WriteTo(output, _repeated_baseList_codec);
      cardList_.WriteTo(output, _repeated_cardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      baseList_.WriteTo(ref output, _repeated_baseList_codec);
      cardList_.WriteTo(ref output, _repeated_cardList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += baseList_.CalculateSize(_repeated_baseList_codec);
      size += cardList_.CalculateSize(_repeated_cardList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardHistory other) {
      if (other == null) {
        return;
      }
      baseList_.Add(other.baseList_);
      cardList_.Add(other.cardList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            baseList_.AddEntriesFrom(input, _repeated_baseList_codec);
            break;
          }
          case 18: {
            cardList_.AddEntriesFrom(input, _repeated_cardList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            baseList_.AddEntriesFrom(ref input, _repeated_baseList_codec);
            break;
          }
          case 18: {
            cardList_.AddEntriesFrom(ref input, _repeated_cardList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBaseCardHistoryInstance : pb::IMessage<ProtoBaseCardHistoryInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBaseCardHistoryInstance> _parser = new pb::MessageParser<ProtoBaseCardHistoryInstance>(() => new ProtoBaseCardHistoryInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBaseCardHistoryInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBaseCardHistoryInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBaseCardHistoryInstance(ProtoBaseCardHistoryInstance other) : this() {
      baseCardId_ = other.baseCardId_;
      highestStarLevel_ = other.highestStarLevel_;
      highestAbilityCardId_ = other.highestAbilityCardId_;
      highestAugmentConfigId_ = other.highestAugmentConfigId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBaseCardHistoryInstance Clone() {
      return new ProtoBaseCardHistoryInstance(this);
    }

    /// <summary>Field number for the "base_card_id" field.</summary>
    public const int BaseCardIdFieldNumber = 1;
    private string baseCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseCardId {
      get { return baseCardId_; }
      set {
        baseCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "highest_star_level" field.</summary>
    public const int HighestStarLevelFieldNumber = 2;
    private int highestStarLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HighestStarLevel {
      get { return highestStarLevel_; }
      set {
        highestStarLevel_ = value;
      }
    }

    /// <summary>Field number for the "highest_ability_card_id" field.</summary>
    public const int HighestAbilityCardIdFieldNumber = 3;
    private string highestAbilityCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HighestAbilityCardId {
      get { return highestAbilityCardId_; }
      set {
        highestAbilityCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "highest_augment_config_id" field.</summary>
    public const int HighestAugmentConfigIdFieldNumber = 4;
    private string highestAugmentConfigId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HighestAugmentConfigId {
      get { return highestAugmentConfigId_; }
      set {
        highestAugmentConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBaseCardHistoryInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBaseCardHistoryInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseCardId != other.BaseCardId) return false;
      if (HighestStarLevel != other.HighestStarLevel) return false;
      if (HighestAbilityCardId != other.HighestAbilityCardId) return false;
      if (HighestAugmentConfigId != other.HighestAugmentConfigId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseCardId.Length != 0) hash ^= BaseCardId.GetHashCode();
      if (HighestStarLevel != 0) hash ^= HighestStarLevel.GetHashCode();
      if (HighestAbilityCardId.Length != 0) hash ^= HighestAbilityCardId.GetHashCode();
      if (HighestAugmentConfigId.Length != 0) hash ^= HighestAugmentConfigId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BaseCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BaseCardId);
      }
      if (HighestStarLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HighestStarLevel);
      }
      if (HighestAbilityCardId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HighestAbilityCardId);
      }
      if (HighestAugmentConfigId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HighestAugmentConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BaseCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BaseCardId);
      }
      if (HighestStarLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(HighestStarLevel);
      }
      if (HighestAbilityCardId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(HighestAbilityCardId);
      }
      if (HighestAugmentConfigId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HighestAugmentConfigId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BaseCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseCardId);
      }
      if (HighestStarLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HighestStarLevel);
      }
      if (HighestAbilityCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HighestAbilityCardId);
      }
      if (HighestAugmentConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HighestAugmentConfigId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBaseCardHistoryInstance other) {
      if (other == null) {
        return;
      }
      if (other.BaseCardId.Length != 0) {
        BaseCardId = other.BaseCardId;
      }
      if (other.HighestStarLevel != 0) {
        HighestStarLevel = other.HighestStarLevel;
      }
      if (other.HighestAbilityCardId.Length != 0) {
        HighestAbilityCardId = other.HighestAbilityCardId;
      }
      if (other.HighestAugmentConfigId.Length != 0) {
        HighestAugmentConfigId = other.HighestAugmentConfigId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BaseCardId = input.ReadString();
            break;
          }
          case 16: {
            HighestStarLevel = input.ReadInt32();
            break;
          }
          case 26: {
            HighestAbilityCardId = input.ReadString();
            break;
          }
          case 34: {
            HighestAugmentConfigId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BaseCardId = input.ReadString();
            break;
          }
          case 16: {
            HighestStarLevel = input.ReadInt32();
            break;
          }
          case 26: {
            HighestAbilityCardId = input.ReadString();
            break;
          }
          case 34: {
            HighestAugmentConfigId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardHistoryInstance : pb::IMessage<ProtoAbilityCardHistoryInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardHistoryInstance> _parser = new pb::MessageParser<ProtoAbilityCardHistoryInstance>(() => new ProtoAbilityCardHistoryInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardHistoryInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardHistoryInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardHistoryInstance(ProtoAbilityCardHistoryInstance other) : this() {
      abilityCardId_ = other.abilityCardId_;
      starLevel_ = other.starLevel_;
      autoSell_ = other.autoSell_;
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardHistoryInstance Clone() {
      return new ProtoAbilityCardHistoryInstance(this);
    }

    /// <summary>Field number for the "ability_card_id" field.</summary>
    public const int AbilityCardIdFieldNumber = 1;
    private string abilityCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbilityCardId {
      get { return abilityCardId_; }
      set {
        abilityCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "star_level" field.</summary>
    public const int StarLevelFieldNumber = 2;
    private int starLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int StarLevel {
      get { return starLevel_; }
      set {
        starLevel_ = value;
      }
    }

    /// <summary>Field number for the "auto_sell" field.</summary>
    public const int AutoSellFieldNumber = 3;
    private bool autoSell_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoSell {
      get { return autoSell_; }
      set {
        autoSell_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 4;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardHistoryInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardHistoryInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityCardId != other.AbilityCardId) return false;
      if (StarLevel != other.StarLevel) return false;
      if (AutoSell != other.AutoSell) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AbilityCardId.Length != 0) hash ^= AbilityCardId.GetHashCode();
      if (StarLevel != 0) hash ^= StarLevel.GetHashCode();
      if (AutoSell != false) hash ^= AutoSell.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbilityCardId);
      }
      if (StarLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StarLevel);
      }
      if (AutoSell != false) {
        output.WriteRawTag(24);
        output.WriteBool(AutoSell);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbilityCardId);
      }
      if (StarLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(StarLevel);
      }
      if (AutoSell != false) {
        output.WriteRawTag(24);
        output.WriteBool(AutoSell);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AbilityCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityCardId);
      }
      if (StarLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(StarLevel);
      }
      if (AutoSell != false) {
        size += 1 + 1;
      }
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardHistoryInstance other) {
      if (other == null) {
        return;
      }
      if (other.AbilityCardId.Length != 0) {
        AbilityCardId = other.AbilityCardId;
      }
      if (other.StarLevel != 0) {
        StarLevel = other.StarLevel;
      }
      if (other.AutoSell != false) {
        AutoSell = other.AutoSell;
      }
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 16: {
            StarLevel = input.ReadInt32();
            break;
          }
          case 24: {
            AutoSell = input.ReadBool();
            break;
          }
          case 32: {
            CreatedAt = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 16: {
            StarLevel = input.ReadInt32();
            break;
          }
          case 24: {
            AutoSell = input.ReadBool();
            break;
          }
          case 32: {
            CreatedAt = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardInventory : pb::IMessage<ProtoAbilityCardInventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardInventory> _parser = new pb::MessageParser<ProtoAbilityCardInventory>(() => new ProtoAbilityCardInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardInventory(ProtoAbilityCardInventory other) : this() {
      maxSlots_ = other.maxSlots_;
      cardList_ = other.cardList_.Clone();
      source_ = other.source_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardInventory Clone() {
      return new ProtoAbilityCardInventory(this);
    }

    /// <summary>Field number for the "max_slots" field.</summary>
    public const int MaxSlotsFieldNumber = 1;
    private int maxSlots_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxSlots {
      get { return maxSlots_; }
      set {
        maxSlots_ = value;
      }
    }

    /// <summary>Field number for the "card_list" field.</summary>
    public const int CardListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoAbilityCardInstance> _repeated_cardList_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoAbilityCardInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoAbilityCardInstance> cardList_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoAbilityCardInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoAbilityCardInstance> CardList {
      get { return cardList_; }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private int source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxSlots != other.MaxSlots) return false;
      if(!cardList_.Equals(other.cardList_)) return false;
      if (Source != other.Source) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxSlots != 0) hash ^= MaxSlots.GetHashCode();
      hash ^= cardList_.GetHashCode();
      if (Source != 0) hash ^= Source.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MaxSlots != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxSlots);
      }
      cardList_.WriteTo(output, _repeated_cardList_codec);
      if (Source != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MaxSlots != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(MaxSlots);
      }
      cardList_.WriteTo(ref output, _repeated_cardList_codec);
      if (Source != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Source);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxSlots != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxSlots);
      }
      size += cardList_.CalculateSize(_repeated_cardList_codec);
      if (Source != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Source);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardInventory other) {
      if (other == null) {
        return;
      }
      if (other.MaxSlots != 0) {
        MaxSlots = other.MaxSlots;
      }
      cardList_.Add(other.cardList_);
      if (other.Source != 0) {
        Source = other.Source;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxSlots = input.ReadInt32();
            break;
          }
          case 18: {
            cardList_.AddEntriesFrom(input, _repeated_cardList_codec);
            break;
          }
          case 24: {
            Source = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MaxSlots = input.ReadInt32();
            break;
          }
          case 18: {
            cardList_.AddEntriesFrom(ref input, _repeated_cardList_codec);
            break;
          }
          case 24: {
            Source = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardInstance : pb::IMessage<ProtoAbilityCardInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardInstance> _parser = new pb::MessageParser<ProtoAbilityCardInstance>(() => new ProtoAbilityCardInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardInstance(ProtoAbilityCardInstance other) : this() {
      sysId_ = other.sysId_;
      abilityCardId_ = other.abilityCardId_;
      augmentConfigId_ = other.augmentConfigId_;
      accumExp_ = other.accumExp_;
      totalAccumExp_ = other.totalAccumExp_;
      cardLevel_ = other.cardLevel_;
      abilityLevel_ = other.abilityLevel_;
      seedUnlock_ = other.seedUnlock_;
      extraSkillUnlock_ = other.extraSkillUnlock_;
      overBoostLevel_ = other.overBoostLevel_;
      autoAbilities_ = other.autoAbilities_.Clone();
      cardLock_ = other.cardLock_;
      source_ = other.source_;
      createdAt_ = other.createdAt_;
      baseConfigId_ = other.baseConfigId_;
      extraSkillProgress_ = other.extraSkillProgress_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardInstance Clone() {
      return new ProtoAbilityCardInstance(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_card_id" field.</summary>
    public const int AbilityCardIdFieldNumber = 2;
    private string abilityCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbilityCardId {
      get { return abilityCardId_; }
      set {
        abilityCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "augment_config_id" field.</summary>
    public const int AugmentConfigIdFieldNumber = 3;
    private string augmentConfigId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AugmentConfigId {
      get { return augmentConfigId_; }
      set {
        augmentConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "accum_exp" field.</summary>
    public const int AccumExpFieldNumber = 4;
    private ulong accumExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AccumExp {
      get { return accumExp_; }
      set {
        accumExp_ = value;
      }
    }

    /// <summary>Field number for the "total_accum_exp" field.</summary>
    public const int TotalAccumExpFieldNumber = 5;
    private ulong totalAccumExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TotalAccumExp {
      get { return totalAccumExp_; }
      set {
        totalAccumExp_ = value;
      }
    }

    /// <summary>Field number for the "card_level" field.</summary>
    public const int CardLevelFieldNumber = 6;
    private int cardLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CardLevel {
      get { return cardLevel_; }
      set {
        cardLevel_ = value;
      }
    }

    /// <summary>Field number for the "ability_level" field.</summary>
    public const int AbilityLevelFieldNumber = 7;
    private int abilityLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AbilityLevel {
      get { return abilityLevel_; }
      set {
        abilityLevel_ = value;
      }
    }

    /// <summary>Field number for the "seed_unlock" field.</summary>
    public const int SeedUnlockFieldNumber = 8;
    private int seedUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SeedUnlock {
      get { return seedUnlock_; }
      set {
        seedUnlock_ = value;
      }
    }

    /// <summary>Field number for the "extra_skill_unlock" field.</summary>
    public const int ExtraSkillUnlockFieldNumber = 9;
    private int extraSkillUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraSkillUnlock {
      get { return extraSkillUnlock_; }
      set {
        extraSkillUnlock_ = value;
      }
    }

    /// <summary>Field number for the "over_boost_level" field.</summary>
    public const int OverBoostLevelFieldNumber = 10;
    private int overBoostLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OverBoostLevel {
      get { return overBoostLevel_; }
      set {
        overBoostLevel_ = value;
      }
    }

    /// <summary>Field number for the "auto_abilities" field.</summary>
    public const int AutoAbilitiesFieldNumber = 11;
    private static readonly pbc::MapField<string, int>.Codec _map_autoAbilities_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 90);
    private readonly pbc::MapField<string, int> autoAbilities_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> AutoAbilities {
      get { return autoAbilities_; }
    }

    /// <summary>Field number for the "card_lock" field.</summary>
    public const int CardLockFieldNumber = 12;
    private bool cardLock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CardLock {
      get { return cardLock_; }
      set {
        cardLock_ = value;
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 13;
    private int source_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 14;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "base_config_id" field.</summary>
    public const int BaseConfigIdFieldNumber = 15;
    private string baseConfigId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseConfigId {
      get { return baseConfigId_; }
      set {
        baseConfigId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extra_skill_progress" field.</summary>
    public const int ExtraSkillProgressFieldNumber = 16;
    private int extraSkillProgress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraSkillProgress {
      get { return extraSkillProgress_; }
      set {
        extraSkillProgress_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (AbilityCardId != other.AbilityCardId) return false;
      if (AugmentConfigId != other.AugmentConfigId) return false;
      if (AccumExp != other.AccumExp) return false;
      if (TotalAccumExp != other.TotalAccumExp) return false;
      if (CardLevel != other.CardLevel) return false;
      if (AbilityLevel != other.AbilityLevel) return false;
      if (SeedUnlock != other.SeedUnlock) return false;
      if (ExtraSkillUnlock != other.ExtraSkillUnlock) return false;
      if (OverBoostLevel != other.OverBoostLevel) return false;
      if (!AutoAbilities.Equals(other.AutoAbilities)) return false;
      if (CardLock != other.CardLock) return false;
      if (Source != other.Source) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (BaseConfigId != other.BaseConfigId) return false;
      if (ExtraSkillProgress != other.ExtraSkillProgress) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (AbilityCardId.Length != 0) hash ^= AbilityCardId.GetHashCode();
      if (AugmentConfigId.Length != 0) hash ^= AugmentConfigId.GetHashCode();
      if (AccumExp != 0UL) hash ^= AccumExp.GetHashCode();
      if (TotalAccumExp != 0UL) hash ^= TotalAccumExp.GetHashCode();
      if (CardLevel != 0) hash ^= CardLevel.GetHashCode();
      if (AbilityLevel != 0) hash ^= AbilityLevel.GetHashCode();
      if (SeedUnlock != 0) hash ^= SeedUnlock.GetHashCode();
      if (ExtraSkillUnlock != 0) hash ^= ExtraSkillUnlock.GetHashCode();
      if (OverBoostLevel != 0) hash ^= OverBoostLevel.GetHashCode();
      hash ^= AutoAbilities.GetHashCode();
      if (CardLock != false) hash ^= CardLock.GetHashCode();
      if (Source != 0) hash ^= Source.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (BaseConfigId.Length != 0) hash ^= BaseConfigId.GetHashCode();
      if (ExtraSkillProgress != 0) hash ^= ExtraSkillProgress.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AbilityCardId);
      }
      if (AugmentConfigId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AugmentConfigId);
      }
      if (AccumExp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccumExp);
      }
      if (TotalAccumExp != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(TotalAccumExp);
      }
      if (CardLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CardLevel);
      }
      if (AbilityLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AbilityLevel);
      }
      if (SeedUnlock != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SeedUnlock);
      }
      if (ExtraSkillUnlock != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(OverBoostLevel);
      }
      autoAbilities_.WriteTo(output, _map_autoAbilities_codec);
      if (CardLock != false) {
        output.WriteRawTag(96);
        output.WriteBool(CardLock);
      }
      if (Source != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Source);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(CreatedAt);
      }
      if (BaseConfigId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BaseConfigId);
      }
      if (ExtraSkillProgress != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ExtraSkillProgress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AbilityCardId);
      }
      if (AugmentConfigId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(AugmentConfigId);
      }
      if (AccumExp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccumExp);
      }
      if (TotalAccumExp != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(TotalAccumExp);
      }
      if (CardLevel != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(CardLevel);
      }
      if (AbilityLevel != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(AbilityLevel);
      }
      if (SeedUnlock != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(SeedUnlock);
      }
      if (ExtraSkillUnlock != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(OverBoostLevel);
      }
      autoAbilities_.WriteTo(ref output, _map_autoAbilities_codec);
      if (CardLock != false) {
        output.WriteRawTag(96);
        output.WriteBool(CardLock);
      }
      if (Source != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(Source);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(CreatedAt);
      }
      if (BaseConfigId.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(BaseConfigId);
      }
      if (ExtraSkillProgress != 0) {
        output.WriteRawTag(128, 1);
        output.WriteInt32(ExtraSkillProgress);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (AbilityCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityCardId);
      }
      if (AugmentConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AugmentConfigId);
      }
      if (AccumExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccumExp);
      }
      if (TotalAccumExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalAccumExp);
      }
      if (CardLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CardLevel);
      }
      if (AbilityLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityLevel);
      }
      if (SeedUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SeedUnlock);
      }
      if (ExtraSkillUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OverBoostLevel);
      }
      size += autoAbilities_.CalculateSize(_map_autoAbilities_codec);
      if (CardLock != false) {
        size += 1 + 1;
      }
      if (Source != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Source);
      }
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (BaseConfigId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseConfigId);
      }
      if (ExtraSkillProgress != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(ExtraSkillProgress);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardInstance other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.AbilityCardId.Length != 0) {
        AbilityCardId = other.AbilityCardId;
      }
      if (other.AugmentConfigId.Length != 0) {
        AugmentConfigId = other.AugmentConfigId;
      }
      if (other.AccumExp != 0UL) {
        AccumExp = other.AccumExp;
      }
      if (other.TotalAccumExp != 0UL) {
        TotalAccumExp = other.TotalAccumExp;
      }
      if (other.CardLevel != 0) {
        CardLevel = other.CardLevel;
      }
      if (other.AbilityLevel != 0) {
        AbilityLevel = other.AbilityLevel;
      }
      if (other.SeedUnlock != 0) {
        SeedUnlock = other.SeedUnlock;
      }
      if (other.ExtraSkillUnlock != 0) {
        ExtraSkillUnlock = other.ExtraSkillUnlock;
      }
      if (other.OverBoostLevel != 0) {
        OverBoostLevel = other.OverBoostLevel;
      }
      autoAbilities_.Add(other.autoAbilities_);
      if (other.CardLock != false) {
        CardLock = other.CardLock;
      }
      if (other.Source != 0) {
        Source = other.Source;
      }
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      if (other.BaseConfigId.Length != 0) {
        BaseConfigId = other.BaseConfigId;
      }
      if (other.ExtraSkillProgress != 0) {
        ExtraSkillProgress = other.ExtraSkillProgress;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 26: {
            AugmentConfigId = input.ReadString();
            break;
          }
          case 32: {
            AccumExp = input.ReadUInt64();
            break;
          }
          case 40: {
            TotalAccumExp = input.ReadUInt64();
            break;
          }
          case 48: {
            CardLevel = input.ReadInt32();
            break;
          }
          case 56: {
            AbilityLevel = input.ReadInt32();
            break;
          }
          case 64: {
            SeedUnlock = input.ReadInt32();
            break;
          }
          case 72: {
            ExtraSkillUnlock = input.ReadInt32();
            break;
          }
          case 80: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 90: {
            autoAbilities_.AddEntriesFrom(input, _map_autoAbilities_codec);
            break;
          }
          case 96: {
            CardLock = input.ReadBool();
            break;
          }
          case 104: {
            Source = input.ReadInt32();
            break;
          }
          case 112: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 122: {
            BaseConfigId = input.ReadString();
            break;
          }
          case 128: {
            ExtraSkillProgress = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 26: {
            AugmentConfigId = input.ReadString();
            break;
          }
          case 32: {
            AccumExp = input.ReadUInt64();
            break;
          }
          case 40: {
            TotalAccumExp = input.ReadUInt64();
            break;
          }
          case 48: {
            CardLevel = input.ReadInt32();
            break;
          }
          case 56: {
            AbilityLevel = input.ReadInt32();
            break;
          }
          case 64: {
            SeedUnlock = input.ReadInt32();
            break;
          }
          case 72: {
            ExtraSkillUnlock = input.ReadInt32();
            break;
          }
          case 80: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 90: {
            autoAbilities_.AddEntriesFrom(ref input, _map_autoAbilities_codec);
            break;
          }
          case 96: {
            CardLock = input.ReadBool();
            break;
          }
          case 104: {
            Source = input.ReadInt32();
            break;
          }
          case 112: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 122: {
            BaseConfigId = input.ReadString();
            break;
          }
          case 128: {
            ExtraSkillProgress = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBattleData : pb::IMessage<ProtoBattleData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBattleData> _parser = new pb::MessageParser<ProtoBattleData>(() => new ProtoBattleData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBattleData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleData(ProtoBattleData other) : this() {
      playerLevel_ = other.playerLevel_;
      playMode_ = other.playMode_;
      totalExp_ = other.totalExp_;
      accumExp_ = other.accumExp_;
      expBonus_ = other.expBonus_;
      stamina_ = other.stamina_ != null ? other.stamina_.Clone() : null;
      decks_ = other.decks_ != null ? other.decks_.Clone() : null;
      enemiesDefeated_ = other.enemiesDefeated_.Clone();
      startData_ = other.startData_ != null ? other.startData_.Clone() : null;
      results_ = other.results_ != null ? other.results_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleData Clone() {
      return new ProtoBattleData(this);
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 1;
    private int playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "play_mode" field.</summary>
    public const int PlayModeFieldNumber = 2;
    private string playMode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayMode {
      get { return playMode_; }
      set {
        playMode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "total_exp" field.</summary>
    public const int TotalExpFieldNumber = 3;
    private ulong totalExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TotalExp {
      get { return totalExp_; }
      set {
        totalExp_ = value;
      }
    }

    /// <summary>Field number for the "accum_exp" field.</summary>
    public const int AccumExpFieldNumber = 4;
    private ulong accumExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AccumExp {
      get { return accumExp_; }
      set {
        accumExp_ = value;
      }
    }

    /// <summary>Field number for the "exp_bonus" field.</summary>
    public const int ExpBonusFieldNumber = 5;
    private float expBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ExpBonus {
      get { return expBonus_; }
      set {
        expBonus_ = value;
      }
    }

    /// <summary>Field number for the "stamina" field.</summary>
    public const int StaminaFieldNumber = 6;
    private global::Mobius.Proto.Game.ProtoPlayerStamina stamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoPlayerStamina Stamina {
      get { return stamina_; }
      set {
        stamina_ = value;
      }
    }

    /// <summary>Field number for the "decks" field.</summary>
    public const int DecksFieldNumber = 7;
    private global::Mobius.Proto.Game.ProtoPlayerDeckCollection decks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoPlayerDeckCollection Decks {
      get { return decks_; }
      set {
        decks_ = value;
      }
    }

    /// <summary>Field number for the "enemies_defeated" field.</summary>
    public const int EnemiesDefeatedFieldNumber = 8;
    private static readonly pbc::MapField<string, ulong>.Codec _map_enemiesDefeated_codec
        = new pbc::MapField<string, ulong>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForUInt64(16, 0UL), 66);
    private readonly pbc::MapField<string, ulong> enemiesDefeated_ = new pbc::MapField<string, ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, ulong> EnemiesDefeated {
      get { return enemiesDefeated_; }
    }

    /// <summary>Field number for the "start_data" field.</summary>
    public const int StartDataFieldNumber = 10;
    private global::Mobius.Proto.Game.ProtoBattleStartData startData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoBattleStartData StartData {
      get { return startData_; }
      set {
        startData_ = value;
      }
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 20;
    private global::Mobius.Proto.Game.ProtoLastBattleResults results_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoLastBattleResults Results {
      get { return results_; }
      set {
        results_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBattleData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBattleData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerLevel != other.PlayerLevel) return false;
      if (PlayMode != other.PlayMode) return false;
      if (TotalExp != other.TotalExp) return false;
      if (AccumExp != other.AccumExp) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExpBonus, other.ExpBonus)) return false;
      if (!object.Equals(Stamina, other.Stamina)) return false;
      if (!object.Equals(Decks, other.Decks)) return false;
      if (!EnemiesDefeated.Equals(other.EnemiesDefeated)) return false;
      if (!object.Equals(StartData, other.StartData)) return false;
      if (!object.Equals(Results, other.Results)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (PlayMode.Length != 0) hash ^= PlayMode.GetHashCode();
      if (TotalExp != 0UL) hash ^= TotalExp.GetHashCode();
      if (AccumExp != 0UL) hash ^= AccumExp.GetHashCode();
      if (ExpBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExpBonus);
      if (stamina_ != null) hash ^= Stamina.GetHashCode();
      if (decks_ != null) hash ^= Decks.GetHashCode();
      hash ^= EnemiesDefeated.GetHashCode();
      if (startData_ != null) hash ^= StartData.GetHashCode();
      if (results_ != null) hash ^= Results.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerLevel);
      }
      if (PlayMode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayMode);
      }
      if (TotalExp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TotalExp);
      }
      if (AccumExp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccumExp);
      }
      if (ExpBonus != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ExpBonus);
      }
      if (stamina_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Stamina);
      }
      if (decks_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Decks);
      }
      enemiesDefeated_.WriteTo(output, _map_enemiesDefeated_codec);
      if (startData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartData);
      }
      if (results_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerLevel);
      }
      if (PlayMode.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayMode);
      }
      if (TotalExp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(TotalExp);
      }
      if (AccumExp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(AccumExp);
      }
      if (ExpBonus != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(ExpBonus);
      }
      if (stamina_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Stamina);
      }
      if (decks_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Decks);
      }
      enemiesDefeated_.WriteTo(ref output, _map_enemiesDefeated_codec);
      if (startData_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(StartData);
      }
      if (results_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(Results);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (PlayMode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayMode);
      }
      if (TotalExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalExp);
      }
      if (AccumExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccumExp);
      }
      if (ExpBonus != 0F) {
        size += 1 + 4;
      }
      if (stamina_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stamina);
      }
      if (decks_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Decks);
      }
      size += enemiesDefeated_.CalculateSize(_map_enemiesDefeated_codec);
      if (startData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartData);
      }
      if (results_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Results);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBattleData other) {
      if (other == null) {
        return;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.PlayMode.Length != 0) {
        PlayMode = other.PlayMode;
      }
      if (other.TotalExp != 0UL) {
        TotalExp = other.TotalExp;
      }
      if (other.AccumExp != 0UL) {
        AccumExp = other.AccumExp;
      }
      if (other.ExpBonus != 0F) {
        ExpBonus = other.ExpBonus;
      }
      if (other.stamina_ != null) {
        if (stamina_ == null) {
          Stamina = new global::Mobius.Proto.Game.ProtoPlayerStamina();
        }
        Stamina.MergeFrom(other.Stamina);
      }
      if (other.decks_ != null) {
        if (decks_ == null) {
          Decks = new global::Mobius.Proto.Game.ProtoPlayerDeckCollection();
        }
        Decks.MergeFrom(other.Decks);
      }
      enemiesDefeated_.Add(other.enemiesDefeated_);
      if (other.startData_ != null) {
        if (startData_ == null) {
          StartData = new global::Mobius.Proto.Game.ProtoBattleStartData();
        }
        StartData.MergeFrom(other.StartData);
      }
      if (other.results_ != null) {
        if (results_ == null) {
          Results = new global::Mobius.Proto.Game.ProtoLastBattleResults();
        }
        Results.MergeFrom(other.Results);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 18: {
            PlayMode = input.ReadString();
            break;
          }
          case 24: {
            TotalExp = input.ReadUInt64();
            break;
          }
          case 32: {
            AccumExp = input.ReadUInt64();
            break;
          }
          case 45: {
            ExpBonus = input.ReadFloat();
            break;
          }
          case 50: {
            if (stamina_ == null) {
              Stamina = new global::Mobius.Proto.Game.ProtoPlayerStamina();
            }
            input.ReadMessage(Stamina);
            break;
          }
          case 58: {
            if (decks_ == null) {
              Decks = new global::Mobius.Proto.Game.ProtoPlayerDeckCollection();
            }
            input.ReadMessage(Decks);
            break;
          }
          case 66: {
            enemiesDefeated_.AddEntriesFrom(input, _map_enemiesDefeated_codec);
            break;
          }
          case 82: {
            if (startData_ == null) {
              StartData = new global::Mobius.Proto.Game.ProtoBattleStartData();
            }
            input.ReadMessage(StartData);
            break;
          }
          case 162: {
            if (results_ == null) {
              Results = new global::Mobius.Proto.Game.ProtoLastBattleResults();
            }
            input.ReadMessage(Results);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 18: {
            PlayMode = input.ReadString();
            break;
          }
          case 24: {
            TotalExp = input.ReadUInt64();
            break;
          }
          case 32: {
            AccumExp = input.ReadUInt64();
            break;
          }
          case 45: {
            ExpBonus = input.ReadFloat();
            break;
          }
          case 50: {
            if (stamina_ == null) {
              Stamina = new global::Mobius.Proto.Game.ProtoPlayerStamina();
            }
            input.ReadMessage(Stamina);
            break;
          }
          case 58: {
            if (decks_ == null) {
              Decks = new global::Mobius.Proto.Game.ProtoPlayerDeckCollection();
            }
            input.ReadMessage(Decks);
            break;
          }
          case 66: {
            enemiesDefeated_.AddEntriesFrom(ref input, _map_enemiesDefeated_codec);
            break;
          }
          case 82: {
            if (startData_ == null) {
              StartData = new global::Mobius.Proto.Game.ProtoBattleStartData();
            }
            input.ReadMessage(StartData);
            break;
          }
          case 162: {
            if (results_ == null) {
              Results = new global::Mobius.Proto.Game.ProtoLastBattleResults();
            }
            input.ReadMessage(Results);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBattleStartData : pb::IMessage<ProtoBattleStartData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBattleStartData> _parser = new pb::MessageParser<ProtoBattleStartData>(() => new ProtoBattleStartData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBattleStartData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleStartData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleStartData(ProtoBattleStartData other) : this() {
      regionMapId_ = other.regionMapId_;
      regionNodeId_ = other.regionNodeId_;
      regionNodeIndex_ = other.regionNodeIndex_;
      nodeWaveIndex_ = other.nodeWaveIndex_;
      deckIndex_ = other.deckIndex_;
      hardMode_ = other.hardMode_;
      completed_ = other.completed_;
      totalExp_ = other.totalExp_;
      goldReward_ = other.goldReward_;
      playerExperienceBonus_ = other.playerExperienceBonus_;
      addExperienceBonus_ = other.addExperienceBonus_;
      areaSeedMultiplier_ = other.areaSeedMultiplier_;
      abilitySeedMultiplier_ = other.abilitySeedMultiplier_;
      itemDropTable_ = other.itemDropTable_.Clone();
      cardDropTable_ = other.cardDropTable_.Clone();
      progressData_ = other.progressData_ != null ? other.progressData_.Clone() : null;
      cardProgressData_ = other.cardProgressData_.Clone();
      rentalPlayerId_ = other.rentalPlayerId_;
      rentalCard_ = other.rentalCard_ != null ? other.rentalCard_.Clone() : null;
      reviveUsed_ = other.reviveUsed_;
      createdAt_ = other.createdAt_;
      fiendSpawns_ = other.fiendSpawns_.Clone();
      selectionResults_ = other.selectionResults_ != null ? other.selectionResults_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleStartData Clone() {
      return new ProtoBattleStartData(this);
    }

    /// <summary>Field number for the "region_map_id" field.</summary>
    public const int RegionMapIdFieldNumber = 1;
    private string regionMapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionMapId {
      get { return regionMapId_; }
      set {
        regionMapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_node_id" field.</summary>
    public const int RegionNodeIdFieldNumber = 2;
    private string regionNodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionNodeId {
      get { return regionNodeId_; }
      set {
        regionNodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_node_index" field.</summary>
    public const int RegionNodeIndexFieldNumber = 3;
    private int regionNodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RegionNodeIndex {
      get { return regionNodeIndex_; }
      set {
        regionNodeIndex_ = value;
      }
    }

    /// <summary>Field number for the "node_wave_index" field.</summary>
    public const int NodeWaveIndexFieldNumber = 21;
    private int nodeWaveIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeWaveIndex {
      get { return nodeWaveIndex_; }
      set {
        nodeWaveIndex_ = value;
      }
    }

    /// <summary>Field number for the "deck_index" field.</summary>
    public const int DeckIndexFieldNumber = 4;
    private int deckIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeckIndex {
      get { return deckIndex_; }
      set {
        deckIndex_ = value;
      }
    }

    /// <summary>Field number for the "hard_mode" field.</summary>
    public const int HardModeFieldNumber = 5;
    private bool hardMode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool HardMode {
      get { return hardMode_; }
      set {
        hardMode_ = value;
      }
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 6;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    /// <summary>Field number for the "total_exp" field.</summary>
    public const int TotalExpFieldNumber = 7;
    private ulong totalExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TotalExp {
      get { return totalExp_; }
      set {
        totalExp_ = value;
      }
    }

    /// <summary>Field number for the "gold_reward" field.</summary>
    public const int GoldRewardFieldNumber = 8;
    private int goldReward_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GoldReward {
      get { return goldReward_; }
      set {
        goldReward_ = value;
      }
    }

    /// <summary>Field number for the "player_experience_bonus" field.</summary>
    public const int PlayerExperienceBonusFieldNumber = 9;
    private float playerExperienceBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float PlayerExperienceBonus {
      get { return playerExperienceBonus_; }
      set {
        playerExperienceBonus_ = value;
      }
    }

    /// <summary>Field number for the "add_experience_bonus" field.</summary>
    public const int AddExperienceBonusFieldNumber = 10;
    private float addExperienceBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AddExperienceBonus {
      get { return addExperienceBonus_; }
      set {
        addExperienceBonus_ = value;
      }
    }

    /// <summary>Field number for the "area_seed_multiplier" field.</summary>
    public const int AreaSeedMultiplierFieldNumber = 11;
    private float areaSeedMultiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AreaSeedMultiplier {
      get { return areaSeedMultiplier_; }
      set {
        areaSeedMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "ability_seed_multiplier" field.</summary>
    public const int AbilitySeedMultiplierFieldNumber = 12;
    private float abilitySeedMultiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float AbilitySeedMultiplier {
      get { return abilitySeedMultiplier_; }
      set {
        abilitySeedMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "item_drop_table" field.</summary>
    public const int ItemDropTableFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.BattleItemDrop> _repeated_itemDropTable_codec
        = pb::FieldCodec.ForMessage(106, global::Mobius.Proto.Game.BattleItemDrop.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.BattleItemDrop> itemDropTable_ = new pbc::RepeatedField<global::Mobius.Proto.Game.BattleItemDrop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.BattleItemDrop> ItemDropTable {
      get { return itemDropTable_; }
    }

    /// <summary>Field number for the "card_drop_table" field.</summary>
    public const int CardDropTableFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.BattleCardDrop> _repeated_cardDropTable_codec
        = pb::FieldCodec.ForMessage(114, global::Mobius.Proto.Game.BattleCardDrop.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.BattleCardDrop> cardDropTable_ = new pbc::RepeatedField<global::Mobius.Proto.Game.BattleCardDrop>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.BattleCardDrop> CardDropTable {
      get { return cardDropTable_; }
    }

    /// <summary>Field number for the "progress_data" field.</summary>
    public const int ProgressDataFieldNumber = 15;
    private global::Mobius.Proto.Game.ProtoBattleProgressData progressData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoBattleProgressData ProgressData {
      get { return progressData_; }
      set {
        progressData_ = value;
      }
    }

    /// <summary>Field number for the "card_progress_data" field.</summary>
    public const int CardProgressDataFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoCardProgressData> _repeated_cardProgressData_codec
        = pb::FieldCodec.ForMessage(130, global::Mobius.Proto.Game.ProtoCardProgressData.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardProgressData> cardProgressData_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardProgressData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardProgressData> CardProgressData {
      get { return cardProgressData_; }
    }

    /// <summary>Field number for the "rental_player_id" field.</summary>
    public const int RentalPlayerIdFieldNumber = 17;
    private string rentalPlayerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RentalPlayerId {
      get { return rentalPlayerId_; }
      set {
        rentalPlayerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rental_card" field.</summary>
    public const int RentalCardFieldNumber = 18;
    private global::Mobius.Proto.Identity.ProtoAbilityCardIdentity rentalCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoAbilityCardIdentity RentalCard {
      get { return rentalCard_; }
      set {
        rentalCard_ = value;
      }
    }

    /// <summary>Field number for the "revive_used" field.</summary>
    public const int ReviveUsedFieldNumber = 19;
    private bool reviveUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReviveUsed {
      get { return reviveUsed_; }
      set {
        reviveUsed_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 20;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "fiend_spawns" field.</summary>
    public const int FiendSpawnsFieldNumber = 22;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoBattleFiendSpawn> _repeated_fiendSpawns_codec
        = pb::FieldCodec.ForMessage(178, global::Mobius.Proto.Game.ProtoBattleFiendSpawn.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleFiendSpawn> fiendSpawns_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleFiendSpawn>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleFiendSpawn> FiendSpawns {
      get { return fiendSpawns_; }
    }

    /// <summary>Field number for the "selection_results" field.</summary>
    public const int SelectionResultsFieldNumber = 23;
    private global::Mobius.Proto.Game.ProtoBattleSelection selectionResults_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoBattleSelection SelectionResults {
      get { return selectionResults_; }
      set {
        selectionResults_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBattleStartData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBattleStartData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionMapId != other.RegionMapId) return false;
      if (RegionNodeId != other.RegionNodeId) return false;
      if (RegionNodeIndex != other.RegionNodeIndex) return false;
      if (NodeWaveIndex != other.NodeWaveIndex) return false;
      if (DeckIndex != other.DeckIndex) return false;
      if (HardMode != other.HardMode) return false;
      if (Completed != other.Completed) return false;
      if (TotalExp != other.TotalExp) return false;
      if (GoldReward != other.GoldReward) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(PlayerExperienceBonus, other.PlayerExperienceBonus)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AddExperienceBonus, other.AddExperienceBonus)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AreaSeedMultiplier, other.AreaSeedMultiplier)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AbilitySeedMultiplier, other.AbilitySeedMultiplier)) return false;
      if(!itemDropTable_.Equals(other.itemDropTable_)) return false;
      if(!cardDropTable_.Equals(other.cardDropTable_)) return false;
      if (!object.Equals(ProgressData, other.ProgressData)) return false;
      if(!cardProgressData_.Equals(other.cardProgressData_)) return false;
      if (RentalPlayerId != other.RentalPlayerId) return false;
      if (!object.Equals(RentalCard, other.RentalCard)) return false;
      if (ReviveUsed != other.ReviveUsed) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if(!fiendSpawns_.Equals(other.fiendSpawns_)) return false;
      if (!object.Equals(SelectionResults, other.SelectionResults)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionMapId.Length != 0) hash ^= RegionMapId.GetHashCode();
      if (RegionNodeId.Length != 0) hash ^= RegionNodeId.GetHashCode();
      if (RegionNodeIndex != 0) hash ^= RegionNodeIndex.GetHashCode();
      if (NodeWaveIndex != 0) hash ^= NodeWaveIndex.GetHashCode();
      if (DeckIndex != 0) hash ^= DeckIndex.GetHashCode();
      if (HardMode != false) hash ^= HardMode.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (TotalExp != 0UL) hash ^= TotalExp.GetHashCode();
      if (GoldReward != 0) hash ^= GoldReward.GetHashCode();
      if (PlayerExperienceBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(PlayerExperienceBonus);
      if (AddExperienceBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AddExperienceBonus);
      if (AreaSeedMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AreaSeedMultiplier);
      if (AbilitySeedMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AbilitySeedMultiplier);
      hash ^= itemDropTable_.GetHashCode();
      hash ^= cardDropTable_.GetHashCode();
      if (progressData_ != null) hash ^= ProgressData.GetHashCode();
      hash ^= cardProgressData_.GetHashCode();
      if (RentalPlayerId.Length != 0) hash ^= RentalPlayerId.GetHashCode();
      if (rentalCard_ != null) hash ^= RentalCard.GetHashCode();
      if (ReviveUsed != false) hash ^= ReviveUsed.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      hash ^= fiendSpawns_.GetHashCode();
      if (selectionResults_ != null) hash ^= SelectionResults.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionMapId);
      }
      if (RegionNodeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionNodeId);
      }
      if (RegionNodeIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RegionNodeIndex);
      }
      if (DeckIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeckIndex);
      }
      if (HardMode != false) {
        output.WriteRawTag(40);
        output.WriteBool(HardMode);
      }
      if (Completed != false) {
        output.WriteRawTag(48);
        output.WriteBool(Completed);
      }
      if (TotalExp != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(TotalExp);
      }
      if (GoldReward != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(GoldReward);
      }
      if (PlayerExperienceBonus != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(PlayerExperienceBonus);
      }
      if (AddExperienceBonus != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(AddExperienceBonus);
      }
      if (AreaSeedMultiplier != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(AreaSeedMultiplier);
      }
      if (AbilitySeedMultiplier != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(AbilitySeedMultiplier);
      }
      itemDropTable_.WriteTo(output, _repeated_itemDropTable_codec);
      cardDropTable_.WriteTo(output, _repeated_cardDropTable_codec);
      if (progressData_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ProgressData);
      }
      cardProgressData_.WriteTo(output, _repeated_cardProgressData_codec);
      if (RentalPlayerId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(RentalPlayerId);
      }
      if (rentalCard_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RentalCard);
      }
      if (ReviveUsed != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(ReviveUsed);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(CreatedAt);
      }
      if (NodeWaveIndex != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(NodeWaveIndex);
      }
      fiendSpawns_.WriteTo(output, _repeated_fiendSpawns_codec);
      if (selectionResults_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(SelectionResults);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionMapId);
      }
      if (RegionNodeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionNodeId);
      }
      if (RegionNodeIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(RegionNodeIndex);
      }
      if (DeckIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DeckIndex);
      }
      if (HardMode != false) {
        output.WriteRawTag(40);
        output.WriteBool(HardMode);
      }
      if (Completed != false) {
        output.WriteRawTag(48);
        output.WriteBool(Completed);
      }
      if (TotalExp != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(TotalExp);
      }
      if (GoldReward != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(GoldReward);
      }
      if (PlayerExperienceBonus != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(PlayerExperienceBonus);
      }
      if (AddExperienceBonus != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(AddExperienceBonus);
      }
      if (AreaSeedMultiplier != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(AreaSeedMultiplier);
      }
      if (AbilitySeedMultiplier != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(AbilitySeedMultiplier);
      }
      itemDropTable_.WriteTo(ref output, _repeated_itemDropTable_codec);
      cardDropTable_.WriteTo(ref output, _repeated_cardDropTable_codec);
      if (progressData_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(ProgressData);
      }
      cardProgressData_.WriteTo(ref output, _repeated_cardProgressData_codec);
      if (RentalPlayerId.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(RentalPlayerId);
      }
      if (rentalCard_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(RentalCard);
      }
      if (ReviveUsed != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(ReviveUsed);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(CreatedAt);
      }
      if (NodeWaveIndex != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(NodeWaveIndex);
      }
      fiendSpawns_.WriteTo(ref output, _repeated_fiendSpawns_codec);
      if (selectionResults_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(SelectionResults);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionMapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionMapId);
      }
      if (RegionNodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionNodeId);
      }
      if (RegionNodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegionNodeIndex);
      }
      if (NodeWaveIndex != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(NodeWaveIndex);
      }
      if (DeckIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeckIndex);
      }
      if (HardMode != false) {
        size += 1 + 1;
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (TotalExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalExp);
      }
      if (GoldReward != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GoldReward);
      }
      if (PlayerExperienceBonus != 0F) {
        size += 1 + 4;
      }
      if (AddExperienceBonus != 0F) {
        size += 1 + 4;
      }
      if (AreaSeedMultiplier != 0F) {
        size += 1 + 4;
      }
      if (AbilitySeedMultiplier != 0F) {
        size += 1 + 4;
      }
      size += itemDropTable_.CalculateSize(_repeated_itemDropTable_codec);
      size += cardDropTable_.CalculateSize(_repeated_cardDropTable_codec);
      if (progressData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressData);
      }
      size += cardProgressData_.CalculateSize(_repeated_cardProgressData_codec);
      if (RentalPlayerId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(RentalPlayerId);
      }
      if (rentalCard_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(RentalCard);
      }
      if (ReviveUsed != false) {
        size += 2 + 1;
      }
      if (CreatedAt != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      size += fiendSpawns_.CalculateSize(_repeated_fiendSpawns_codec);
      if (selectionResults_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SelectionResults);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBattleStartData other) {
      if (other == null) {
        return;
      }
      if (other.RegionMapId.Length != 0) {
        RegionMapId = other.RegionMapId;
      }
      if (other.RegionNodeId.Length != 0) {
        RegionNodeId = other.RegionNodeId;
      }
      if (other.RegionNodeIndex != 0) {
        RegionNodeIndex = other.RegionNodeIndex;
      }
      if (other.NodeWaveIndex != 0) {
        NodeWaveIndex = other.NodeWaveIndex;
      }
      if (other.DeckIndex != 0) {
        DeckIndex = other.DeckIndex;
      }
      if (other.HardMode != false) {
        HardMode = other.HardMode;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      if (other.TotalExp != 0UL) {
        TotalExp = other.TotalExp;
      }
      if (other.GoldReward != 0) {
        GoldReward = other.GoldReward;
      }
      if (other.PlayerExperienceBonus != 0F) {
        PlayerExperienceBonus = other.PlayerExperienceBonus;
      }
      if (other.AddExperienceBonus != 0F) {
        AddExperienceBonus = other.AddExperienceBonus;
      }
      if (other.AreaSeedMultiplier != 0F) {
        AreaSeedMultiplier = other.AreaSeedMultiplier;
      }
      if (other.AbilitySeedMultiplier != 0F) {
        AbilitySeedMultiplier = other.AbilitySeedMultiplier;
      }
      itemDropTable_.Add(other.itemDropTable_);
      cardDropTable_.Add(other.cardDropTable_);
      if (other.progressData_ != null) {
        if (progressData_ == null) {
          ProgressData = new global::Mobius.Proto.Game.ProtoBattleProgressData();
        }
        ProgressData.MergeFrom(other.ProgressData);
      }
      cardProgressData_.Add(other.cardProgressData_);
      if (other.RentalPlayerId.Length != 0) {
        RentalPlayerId = other.RentalPlayerId;
      }
      if (other.rentalCard_ != null) {
        if (rentalCard_ == null) {
          RentalCard = new global::Mobius.Proto.Identity.ProtoAbilityCardIdentity();
        }
        RentalCard.MergeFrom(other.RentalCard);
      }
      if (other.ReviveUsed != false) {
        ReviveUsed = other.ReviveUsed;
      }
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      fiendSpawns_.Add(other.fiendSpawns_);
      if (other.selectionResults_ != null) {
        if (selectionResults_ == null) {
          SelectionResults = new global::Mobius.Proto.Game.ProtoBattleSelection();
        }
        SelectionResults.MergeFrom(other.SelectionResults);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RegionMapId = input.ReadString();
            break;
          }
          case 18: {
            RegionNodeId = input.ReadString();
            break;
          }
          case 24: {
            RegionNodeIndex = input.ReadInt32();
            break;
          }
          case 32: {
            DeckIndex = input.ReadInt32();
            break;
          }
          case 40: {
            HardMode = input.ReadBool();
            break;
          }
          case 48: {
            Completed = input.ReadBool();
            break;
          }
          case 56: {
            TotalExp = input.ReadUInt64();
            break;
          }
          case 64: {
            GoldReward = input.ReadInt32();
            break;
          }
          case 77: {
            PlayerExperienceBonus = input.ReadFloat();
            break;
          }
          case 85: {
            AddExperienceBonus = input.ReadFloat();
            break;
          }
          case 93: {
            AreaSeedMultiplier = input.ReadFloat();
            break;
          }
          case 101: {
            AbilitySeedMultiplier = input.ReadFloat();
            break;
          }
          case 106: {
            itemDropTable_.AddEntriesFrom(input, _repeated_itemDropTable_codec);
            break;
          }
          case 114: {
            cardDropTable_.AddEntriesFrom(input, _repeated_cardDropTable_codec);
            break;
          }
          case 122: {
            if (progressData_ == null) {
              ProgressData = new global::Mobius.Proto.Game.ProtoBattleProgressData();
            }
            input.ReadMessage(ProgressData);
            break;
          }
          case 130: {
            cardProgressData_.AddEntriesFrom(input, _repeated_cardProgressData_codec);
            break;
          }
          case 138: {
            RentalPlayerId = input.ReadString();
            break;
          }
          case 146: {
            if (rentalCard_ == null) {
              RentalCard = new global::Mobius.Proto.Identity.ProtoAbilityCardIdentity();
            }
            input.ReadMessage(RentalCard);
            break;
          }
          case 152: {
            ReviveUsed = input.ReadBool();
            break;
          }
          case 160: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 168: {
            NodeWaveIndex = input.ReadInt32();
            break;
          }
          case 178: {
            fiendSpawns_.AddEntriesFrom(input, _repeated_fiendSpawns_codec);
            break;
          }
          case 186: {
            if (selectionResults_ == null) {
              SelectionResults = new global::Mobius.Proto.Game.ProtoBattleSelection();
            }
            input.ReadMessage(SelectionResults);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RegionMapId = input.ReadString();
            break;
          }
          case 18: {
            RegionNodeId = input.ReadString();
            break;
          }
          case 24: {
            RegionNodeIndex = input.ReadInt32();
            break;
          }
          case 32: {
            DeckIndex = input.ReadInt32();
            break;
          }
          case 40: {
            HardMode = input.ReadBool();
            break;
          }
          case 48: {
            Completed = input.ReadBool();
            break;
          }
          case 56: {
            TotalExp = input.ReadUInt64();
            break;
          }
          case 64: {
            GoldReward = input.ReadInt32();
            break;
          }
          case 77: {
            PlayerExperienceBonus = input.ReadFloat();
            break;
          }
          case 85: {
            AddExperienceBonus = input.ReadFloat();
            break;
          }
          case 93: {
            AreaSeedMultiplier = input.ReadFloat();
            break;
          }
          case 101: {
            AbilitySeedMultiplier = input.ReadFloat();
            break;
          }
          case 106: {
            itemDropTable_.AddEntriesFrom(ref input, _repeated_itemDropTable_codec);
            break;
          }
          case 114: {
            cardDropTable_.AddEntriesFrom(ref input, _repeated_cardDropTable_codec);
            break;
          }
          case 122: {
            if (progressData_ == null) {
              ProgressData = new global::Mobius.Proto.Game.ProtoBattleProgressData();
            }
            input.ReadMessage(ProgressData);
            break;
          }
          case 130: {
            cardProgressData_.AddEntriesFrom(ref input, _repeated_cardProgressData_codec);
            break;
          }
          case 138: {
            RentalPlayerId = input.ReadString();
            break;
          }
          case 146: {
            if (rentalCard_ == null) {
              RentalCard = new global::Mobius.Proto.Identity.ProtoAbilityCardIdentity();
            }
            input.ReadMessage(RentalCard);
            break;
          }
          case 152: {
            ReviveUsed = input.ReadBool();
            break;
          }
          case 160: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 168: {
            NodeWaveIndex = input.ReadInt32();
            break;
          }
          case 178: {
            fiendSpawns_.AddEntriesFrom(ref input, _repeated_fiendSpawns_codec);
            break;
          }
          case 186: {
            if (selectionResults_ == null) {
              SelectionResults = new global::Mobius.Proto.Game.ProtoBattleSelection();
            }
            input.ReadMessage(SelectionResults);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBattleFiendSpawn : pb::IMessage<ProtoBattleFiendSpawn>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBattleFiendSpawn> _parser = new pb::MessageParser<ProtoBattleFiendSpawn>(() => new ProtoBattleFiendSpawn());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBattleFiendSpawn> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleFiendSpawn() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleFiendSpawn(ProtoBattleFiendSpawn other) : this() {
      replacesFiend_ = other.replacesFiend_;
      replacesWith_ = other.replacesWith_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleFiendSpawn Clone() {
      return new ProtoBattleFiendSpawn(this);
    }

    /// <summary>Field number for the "replaces_fiend" field.</summary>
    public const int ReplacesFiendFieldNumber = 1;
    private string replacesFiend_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplacesFiend {
      get { return replacesFiend_; }
      set {
        replacesFiend_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replaces_with" field.</summary>
    public const int ReplacesWithFieldNumber = 2;
    private string replacesWith_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplacesWith {
      get { return replacesWith_; }
      set {
        replacesWith_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBattleFiendSpawn);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBattleFiendSpawn other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReplacesFiend != other.ReplacesFiend) return false;
      if (ReplacesWith != other.ReplacesWith) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReplacesFiend.Length != 0) hash ^= ReplacesFiend.GetHashCode();
      if (ReplacesWith.Length != 0) hash ^= ReplacesWith.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReplacesFiend.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReplacesFiend);
      }
      if (ReplacesWith.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReplacesWith);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReplacesFiend.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReplacesFiend);
      }
      if (ReplacesWith.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReplacesWith);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReplacesFiend.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplacesFiend);
      }
      if (ReplacesWith.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplacesWith);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBattleFiendSpawn other) {
      if (other == null) {
        return;
      }
      if (other.ReplacesFiend.Length != 0) {
        ReplacesFiend = other.ReplacesFiend;
      }
      if (other.ReplacesWith.Length != 0) {
        ReplacesWith = other.ReplacesWith;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReplacesFiend = input.ReadString();
            break;
          }
          case 18: {
            ReplacesWith = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ReplacesFiend = input.ReadString();
            break;
          }
          case 18: {
            ReplacesWith = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBattleProgressData : pb::IMessage<ProtoBattleProgressData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBattleProgressData> _parser = new pb::MessageParser<ProtoBattleProgressData>(() => new ProtoBattleProgressData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBattleProgressData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleProgressData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleProgressData(ProtoBattleProgressData other) : this() {
      playerLevel_ = other.playerLevel_;
      totalExp_ = other.totalExp_;
      accumExp_ = other.accumExp_;
      expBonus_ = other.expBonus_;
      deckCount_ = other.deckCount_;
      maxStamina_ = other.maxStamina_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleProgressData Clone() {
      return new ProtoBattleProgressData(this);
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 1;
    private int playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "total_exp" field.</summary>
    public const int TotalExpFieldNumber = 2;
    private ulong totalExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TotalExp {
      get { return totalExp_; }
      set {
        totalExp_ = value;
      }
    }

    /// <summary>Field number for the "accum_exp" field.</summary>
    public const int AccumExpFieldNumber = 3;
    private ulong accumExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AccumExp {
      get { return accumExp_; }
      set {
        accumExp_ = value;
      }
    }

    /// <summary>Field number for the "exp_bonus" field.</summary>
    public const int ExpBonusFieldNumber = 4;
    private float expBonus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float ExpBonus {
      get { return expBonus_; }
      set {
        expBonus_ = value;
      }
    }

    /// <summary>Field number for the "deck_count" field.</summary>
    public const int DeckCountFieldNumber = 5;
    private int deckCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeckCount {
      get { return deckCount_; }
      set {
        deckCount_ = value;
      }
    }

    /// <summary>Field number for the "max_stamina" field.</summary>
    public const int MaxStaminaFieldNumber = 6;
    private int maxStamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxStamina {
      get { return maxStamina_; }
      set {
        maxStamina_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBattleProgressData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBattleProgressData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerLevel != other.PlayerLevel) return false;
      if (TotalExp != other.TotalExp) return false;
      if (AccumExp != other.AccumExp) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ExpBonus, other.ExpBonus)) return false;
      if (DeckCount != other.DeckCount) return false;
      if (MaxStamina != other.MaxStamina) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (TotalExp != 0UL) hash ^= TotalExp.GetHashCode();
      if (AccumExp != 0UL) hash ^= AccumExp.GetHashCode();
      if (ExpBonus != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ExpBonus);
      if (DeckCount != 0) hash ^= DeckCount.GetHashCode();
      if (MaxStamina != 0) hash ^= MaxStamina.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerLevel);
      }
      if (TotalExp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TotalExp);
      }
      if (AccumExp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(AccumExp);
      }
      if (ExpBonus != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ExpBonus);
      }
      if (DeckCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DeckCount);
      }
      if (MaxStamina != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxStamina);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerLevel != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(PlayerLevel);
      }
      if (TotalExp != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(TotalExp);
      }
      if (AccumExp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(AccumExp);
      }
      if (ExpBonus != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(ExpBonus);
      }
      if (DeckCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(DeckCount);
      }
      if (MaxStamina != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MaxStamina);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (TotalExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalExp);
      }
      if (AccumExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccumExp);
      }
      if (ExpBonus != 0F) {
        size += 1 + 4;
      }
      if (DeckCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeckCount);
      }
      if (MaxStamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxStamina);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBattleProgressData other) {
      if (other == null) {
        return;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.TotalExp != 0UL) {
        TotalExp = other.TotalExp;
      }
      if (other.AccumExp != 0UL) {
        AccumExp = other.AccumExp;
      }
      if (other.ExpBonus != 0F) {
        ExpBonus = other.ExpBonus;
      }
      if (other.DeckCount != 0) {
        DeckCount = other.DeckCount;
      }
      if (other.MaxStamina != 0) {
        MaxStamina = other.MaxStamina;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 16: {
            TotalExp = input.ReadUInt64();
            break;
          }
          case 24: {
            AccumExp = input.ReadUInt64();
            break;
          }
          case 37: {
            ExpBonus = input.ReadFloat();
            break;
          }
          case 40: {
            DeckCount = input.ReadInt32();
            break;
          }
          case 48: {
            MaxStamina = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 16: {
            TotalExp = input.ReadUInt64();
            break;
          }
          case 24: {
            AccumExp = input.ReadUInt64();
            break;
          }
          case 37: {
            ExpBonus = input.ReadFloat();
            break;
          }
          case 40: {
            DeckCount = input.ReadInt32();
            break;
          }
          case 48: {
            MaxStamina = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoCardProgressData : pb::IMessage<ProtoCardProgressData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoCardProgressData> _parser = new pb::MessageParser<ProtoCardProgressData>(() => new ProtoCardProgressData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoCardProgressData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardProgressData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardProgressData(ProtoCardProgressData other) : this() {
      instanceId_ = other.instanceId_;
      slotIndex_ = other.slotIndex_;
      level_ = other.level_;
      totalExp_ = other.totalExp_;
      accumExp_ = other.accumExp_;
      extraSkillUnlock_ = other.extraSkillUnlock_;
      extraSkillUnlockRequirement_ = other.extraSkillUnlockRequirement_;
      extraSkillProgressed_ = other.extraSkillProgressed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardProgressData Clone() {
      return new ProtoCardProgressData(this);
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 1;
    private string instanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slot_index" field.</summary>
    public const int SlotIndexFieldNumber = 2;
    private int slotIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotIndex {
      get { return slotIndex_; }
      set {
        slotIndex_ = value;
      }
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 3;
    private int level_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "total_exp" field.</summary>
    public const int TotalExpFieldNumber = 4;
    private ulong totalExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong TotalExp {
      get { return totalExp_; }
      set {
        totalExp_ = value;
      }
    }

    /// <summary>Field number for the "accum_exp" field.</summary>
    public const int AccumExpFieldNumber = 5;
    private ulong accumExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong AccumExp {
      get { return accumExp_; }
      set {
        accumExp_ = value;
      }
    }

    /// <summary>Field number for the "extra_skill_unlock" field.</summary>
    public const int ExtraSkillUnlockFieldNumber = 6;
    private bool extraSkillUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExtraSkillUnlock {
      get { return extraSkillUnlock_; }
      set {
        extraSkillUnlock_ = value;
      }
    }

    /// <summary>Field number for the "extra_skill_unlock_requirement" field.</summary>
    public const int ExtraSkillUnlockRequirementFieldNumber = 7;
    private int extraSkillUnlockRequirement_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraSkillUnlockRequirement {
      get { return extraSkillUnlockRequirement_; }
      set {
        extraSkillUnlockRequirement_ = value;
      }
    }

    /// <summary>Field number for the "extra_skill_progressed" field.</summary>
    public const int ExtraSkillProgressedFieldNumber = 8;
    private bool extraSkillProgressed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ExtraSkillProgressed {
      get { return extraSkillProgressed_; }
      set {
        extraSkillProgressed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoCardProgressData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoCardProgressData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstanceId != other.InstanceId) return false;
      if (SlotIndex != other.SlotIndex) return false;
      if (Level != other.Level) return false;
      if (TotalExp != other.TotalExp) return false;
      if (AccumExp != other.AccumExp) return false;
      if (ExtraSkillUnlock != other.ExtraSkillUnlock) return false;
      if (ExtraSkillUnlockRequirement != other.ExtraSkillUnlockRequirement) return false;
      if (ExtraSkillProgressed != other.ExtraSkillProgressed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (SlotIndex != 0) hash ^= SlotIndex.GetHashCode();
      if (Level != 0) hash ^= Level.GetHashCode();
      if (TotalExp != 0UL) hash ^= TotalExp.GetHashCode();
      if (AccumExp != 0UL) hash ^= AccumExp.GetHashCode();
      if (ExtraSkillUnlock != false) hash ^= ExtraSkillUnlock.GetHashCode();
      if (ExtraSkillUnlockRequirement != 0) hash ^= ExtraSkillUnlockRequirement.GetHashCode();
      if (ExtraSkillProgressed != false) hash ^= ExtraSkillProgressed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceId);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SlotIndex);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (TotalExp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(TotalExp);
      }
      if (AccumExp != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(AccumExp);
      }
      if (ExtraSkillUnlock != false) {
        output.WriteRawTag(48);
        output.WriteBool(ExtraSkillUnlock);
      }
      if (ExtraSkillUnlockRequirement != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ExtraSkillUnlockRequirement);
      }
      if (ExtraSkillProgressed != false) {
        output.WriteRawTag(64);
        output.WriteBool(ExtraSkillProgressed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceId);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SlotIndex);
      }
      if (Level != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Level);
      }
      if (TotalExp != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(TotalExp);
      }
      if (AccumExp != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(AccumExp);
      }
      if (ExtraSkillUnlock != false) {
        output.WriteRawTag(48);
        output.WriteBool(ExtraSkillUnlock);
      }
      if (ExtraSkillUnlockRequirement != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ExtraSkillUnlockRequirement);
      }
      if (ExtraSkillProgressed != false) {
        output.WriteRawTag(64);
        output.WriteBool(ExtraSkillProgressed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (SlotIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotIndex);
      }
      if (Level != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Level);
      }
      if (TotalExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(TotalExp);
      }
      if (AccumExp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(AccumExp);
      }
      if (ExtraSkillUnlock != false) {
        size += 1 + 1;
      }
      if (ExtraSkillUnlockRequirement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraSkillUnlockRequirement);
      }
      if (ExtraSkillProgressed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoCardProgressData other) {
      if (other == null) {
        return;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.SlotIndex != 0) {
        SlotIndex = other.SlotIndex;
      }
      if (other.Level != 0) {
        Level = other.Level;
      }
      if (other.TotalExp != 0UL) {
        TotalExp = other.TotalExp;
      }
      if (other.AccumExp != 0UL) {
        AccumExp = other.AccumExp;
      }
      if (other.ExtraSkillUnlock != false) {
        ExtraSkillUnlock = other.ExtraSkillUnlock;
      }
      if (other.ExtraSkillUnlockRequirement != 0) {
        ExtraSkillUnlockRequirement = other.ExtraSkillUnlockRequirement;
      }
      if (other.ExtraSkillProgressed != false) {
        ExtraSkillProgressed = other.ExtraSkillProgressed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstanceId = input.ReadString();
            break;
          }
          case 16: {
            SlotIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            TotalExp = input.ReadUInt64();
            break;
          }
          case 40: {
            AccumExp = input.ReadUInt64();
            break;
          }
          case 48: {
            ExtraSkillUnlock = input.ReadBool();
            break;
          }
          case 56: {
            ExtraSkillUnlockRequirement = input.ReadInt32();
            break;
          }
          case 64: {
            ExtraSkillProgressed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InstanceId = input.ReadString();
            break;
          }
          case 16: {
            SlotIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Level = input.ReadInt32();
            break;
          }
          case 32: {
            TotalExp = input.ReadUInt64();
            break;
          }
          case 40: {
            AccumExp = input.ReadUInt64();
            break;
          }
          case 48: {
            ExtraSkillUnlock = input.ReadBool();
            break;
          }
          case 56: {
            ExtraSkillUnlockRequirement = input.ReadInt32();
            break;
          }
          case 64: {
            ExtraSkillProgressed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoMission : pb::IMessage<ProtoMission>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoMission> _parser = new pb::MessageParser<ProtoMission>(() => new ProtoMission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoMission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMission(ProtoMission other) : this() {
      referenceId_ = other.referenceId_;
      primaryDefinition_ = other.primaryDefinition_;
      secondaryDefinition_ = other.secondaryDefinition_;
      required_ = other.required_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMission Clone() {
      return new ProtoMission(this);
    }

    /// <summary>Field number for the "reference_id" field.</summary>
    public const int ReferenceIdFieldNumber = 1;
    private string referenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferenceId {
      get { return referenceId_; }
      set {
        referenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primary_definition" field.</summary>
    public const int PrimaryDefinitionFieldNumber = 2;
    private int primaryDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PrimaryDefinition {
      get { return primaryDefinition_; }
      set {
        primaryDefinition_ = value;
      }
    }

    /// <summary>Field number for the "secondary_definition" field.</summary>
    public const int SecondaryDefinitionFieldNumber = 3;
    private int secondaryDefinition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SecondaryDefinition {
      get { return secondaryDefinition_; }
      set {
        secondaryDefinition_ = value;
      }
    }

    /// <summary>Field number for the "required" field.</summary>
    public const int RequiredFieldNumber = 4;
    private int required_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Required {
      get { return required_; }
      set {
        required_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoMission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoMission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ReferenceId != other.ReferenceId) return false;
      if (PrimaryDefinition != other.PrimaryDefinition) return false;
      if (SecondaryDefinition != other.SecondaryDefinition) return false;
      if (Required != other.Required) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ReferenceId.Length != 0) hash ^= ReferenceId.GetHashCode();
      if (PrimaryDefinition != 0) hash ^= PrimaryDefinition.GetHashCode();
      if (SecondaryDefinition != 0) hash ^= SecondaryDefinition.GetHashCode();
      if (Required != 0) hash ^= Required.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ReferenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReferenceId);
      }
      if (PrimaryDefinition != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PrimaryDefinition);
      }
      if (SecondaryDefinition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SecondaryDefinition);
      }
      if (Required != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Required);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ReferenceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ReferenceId);
      }
      if (PrimaryDefinition != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PrimaryDefinition);
      }
      if (SecondaryDefinition != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SecondaryDefinition);
      }
      if (Required != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Required);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ReferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferenceId);
      }
      if (PrimaryDefinition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrimaryDefinition);
      }
      if (SecondaryDefinition != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SecondaryDefinition);
      }
      if (Required != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Required);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoMission other) {
      if (other == null) {
        return;
      }
      if (other.ReferenceId.Length != 0) {
        ReferenceId = other.ReferenceId;
      }
      if (other.PrimaryDefinition != 0) {
        PrimaryDefinition = other.PrimaryDefinition;
      }
      if (other.SecondaryDefinition != 0) {
        SecondaryDefinition = other.SecondaryDefinition;
      }
      if (other.Required != 0) {
        Required = other.Required;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ReferenceId = input.ReadString();
            break;
          }
          case 16: {
            PrimaryDefinition = input.ReadInt32();
            break;
          }
          case 24: {
            SecondaryDefinition = input.ReadInt32();
            break;
          }
          case 32: {
            Required = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ReferenceId = input.ReadString();
            break;
          }
          case 16: {
            PrimaryDefinition = input.ReadInt32();
            break;
          }
          case 24: {
            SecondaryDefinition = input.ReadInt32();
            break;
          }
          case 32: {
            Required = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoMissionInstance : pb::IMessage<ProtoMissionInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoMissionInstance> _parser = new pb::MessageParser<ProtoMissionInstance>(() => new ProtoMissionInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoMissionInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMissionInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMissionInstance(ProtoMissionInstance other) : this() {
      mission_ = other.mission_ != null ? other.mission_.Clone() : null;
      progress_ = other.progress_;
      confirmed_ = other.confirmed_;
      claimed_ = other.claimed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMissionInstance Clone() {
      return new ProtoMissionInstance(this);
    }

    /// <summary>Field number for the "mission" field.</summary>
    public const int MissionFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoMission mission_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoMission Mission {
      get { return mission_; }
      set {
        mission_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 2;
    private int progress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "confirmed" field.</summary>
    public const int ConfirmedFieldNumber = 3;
    private bool confirmed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Confirmed {
      get { return confirmed_; }
      set {
        confirmed_ = value;
      }
    }

    /// <summary>Field number for the "claimed" field.</summary>
    public const int ClaimedFieldNumber = 4;
    private bool claimed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Claimed {
      get { return claimed_; }
      set {
        claimed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoMissionInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoMissionInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Mission, other.Mission)) return false;
      if (Progress != other.Progress) return false;
      if (Confirmed != other.Confirmed) return false;
      if (Claimed != other.Claimed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (mission_ != null) hash ^= Mission.GetHashCode();
      if (Progress != 0) hash ^= Progress.GetHashCode();
      if (Confirmed != false) hash ^= Confirmed.GetHashCode();
      if (Claimed != false) hash ^= Claimed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (mission_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Mission);
      }
      if (Progress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Progress);
      }
      if (Confirmed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Confirmed);
      }
      if (Claimed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Claimed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (mission_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Mission);
      }
      if (Progress != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Progress);
      }
      if (Confirmed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Confirmed);
      }
      if (Claimed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Claimed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (mission_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Mission);
      }
      if (Progress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Progress);
      }
      if (Confirmed != false) {
        size += 1 + 1;
      }
      if (Claimed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoMissionInstance other) {
      if (other == null) {
        return;
      }
      if (other.mission_ != null) {
        if (mission_ == null) {
          Mission = new global::Mobius.Proto.Game.ProtoMission();
        }
        Mission.MergeFrom(other.Mission);
      }
      if (other.Progress != 0) {
        Progress = other.Progress;
      }
      if (other.Confirmed != false) {
        Confirmed = other.Confirmed;
      }
      if (other.Claimed != false) {
        Claimed = other.Claimed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (mission_ == null) {
              Mission = new global::Mobius.Proto.Game.ProtoMission();
            }
            input.ReadMessage(Mission);
            break;
          }
          case 16: {
            Progress = input.ReadInt32();
            break;
          }
          case 24: {
            Confirmed = input.ReadBool();
            break;
          }
          case 32: {
            Claimed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (mission_ == null) {
              Mission = new global::Mobius.Proto.Game.ProtoMission();
            }
            input.ReadMessage(Mission);
            break;
          }
          case 16: {
            Progress = input.ReadInt32();
            break;
          }
          case 24: {
            Confirmed = input.ReadBool();
            break;
          }
          case 32: {
            Claimed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoDailyMissionInstance : pb::IMessage<ProtoDailyMissionInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoDailyMissionInstance> _parser = new pb::MessageParser<ProtoDailyMissionInstance>(() => new ProtoDailyMissionInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoDailyMissionInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoDailyMissionInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoDailyMissionInstance(ProtoDailyMissionInstance other) : this() {
      id_ = other.id_;
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      receivedAt_ = other.receivedAt_;
      itemRewards_ = other.itemRewards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoDailyMissionInstance Clone() {
      return new ProtoDailyMissionInstance(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 2;
    private global::Mobius.Proto.Game.ProtoMissionInstance instance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoMissionInstance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    /// <summary>Field number for the "received_at" field.</summary>
    public const int ReceivedAtFieldNumber = 3;
    private long receivedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReceivedAt {
      get { return receivedAt_; }
      set {
        receivedAt_ = value;
      }
    }

    /// <summary>Field number for the "item_rewards" field.</summary>
    public const int ItemRewardsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoItemValuePair> _repeated_itemRewards_codec
        = pb::FieldCodec.ForMessage(34, global::Mobius.Proto.Game.ProtoItemValuePair.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemValuePair> itemRewards_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemValuePair>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemValuePair> ItemRewards {
      get { return itemRewards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoDailyMissionInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoDailyMissionInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Instance, other.Instance)) return false;
      if (ReceivedAt != other.ReceivedAt) return false;
      if(!itemRewards_.Equals(other.itemRewards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (ReceivedAt != 0L) hash ^= ReceivedAt.GetHashCode();
      hash ^= itemRewards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      if (ReceivedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ReceivedAt);
      }
      itemRewards_.WriteTo(output, _repeated_itemRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      if (ReceivedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(ReceivedAt);
      }
      itemRewards_.WriteTo(ref output, _repeated_itemRewards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (ReceivedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceivedAt);
      }
      size += itemRewards_.CalculateSize(_repeated_itemRewards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoDailyMissionInstance other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Mobius.Proto.Game.ProtoMissionInstance();
        }
        Instance.MergeFrom(other.Instance);
      }
      if (other.ReceivedAt != 0L) {
        ReceivedAt = other.ReceivedAt;
      }
      itemRewards_.Add(other.itemRewards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoMissionInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 24: {
            ReceivedAt = input.ReadInt64();
            break;
          }
          case 34: {
            itemRewards_.AddEntriesFrom(input, _repeated_itemRewards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoMissionInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 24: {
            ReceivedAt = input.ReadInt64();
            break;
          }
          case 34: {
            itemRewards_.AddEntriesFrom(ref input, _repeated_itemRewards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BattleItemDrop : pb::IMessage<BattleItemDrop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleItemDrop> _parser = new pb::MessageParser<BattleItemDrop>(() => new BattleItemDrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleItemDrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleItemDrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleItemDrop(BattleItemDrop other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      drop_ = other.drop_ != null ? other.drop_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleItemDrop Clone() {
      return new BattleItemDrop(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Mobius.Proto.Game.BattleDropTableKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.BattleDropTableKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "drop" field.</summary>
    public const int DropFieldNumber = 2;
    private global::Mobius.Proto.Game.BattleItemDropResult drop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.BattleItemDropResult Drop {
      get { return drop_; }
      set {
        drop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleItemDrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleItemDrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Drop, other.Drop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (drop_ != null) hash ^= Drop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (drop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Drop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (drop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Drop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (drop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Drop);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleItemDrop other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Mobius.Proto.Game.BattleDropTableKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.drop_ != null) {
        if (drop_ == null) {
          Drop = new global::Mobius.Proto.Game.BattleItemDropResult();
        }
        Drop.MergeFrom(other.Drop);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Mobius.Proto.Game.BattleDropTableKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (drop_ == null) {
              Drop = new global::Mobius.Proto.Game.BattleItemDropResult();
            }
            input.ReadMessage(Drop);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Mobius.Proto.Game.BattleDropTableKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (drop_ == null) {
              Drop = new global::Mobius.Proto.Game.BattleItemDropResult();
            }
            input.ReadMessage(Drop);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BattleCardDrop : pb::IMessage<BattleCardDrop>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleCardDrop> _parser = new pb::MessageParser<BattleCardDrop>(() => new BattleCardDrop());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleCardDrop> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleCardDrop() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleCardDrop(BattleCardDrop other) : this() {
      key_ = other.key_ != null ? other.key_.Clone() : null;
      drop_ = other.drop_ != null ? other.drop_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleCardDrop Clone() {
      return new BattleCardDrop(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private global::Mobius.Proto.Game.BattleDropTableKey key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.BattleDropTableKey Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "drop" field.</summary>
    public const int DropFieldNumber = 2;
    private global::Mobius.Proto.Game.BattleCardDropResult drop_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.BattleCardDropResult Drop {
      get { return drop_; }
      set {
        drop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleCardDrop);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleCardDrop other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Key, other.Key)) return false;
      if (!object.Equals(Drop, other.Drop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (key_ != null) hash ^= Key.GetHashCode();
      if (drop_ != null) hash ^= Drop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (drop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Drop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (key_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Key);
      }
      if (drop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Drop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (key_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Key);
      }
      if (drop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Drop);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleCardDrop other) {
      if (other == null) {
        return;
      }
      if (other.key_ != null) {
        if (key_ == null) {
          Key = new global::Mobius.Proto.Game.BattleDropTableKey();
        }
        Key.MergeFrom(other.Key);
      }
      if (other.drop_ != null) {
        if (drop_ == null) {
          Drop = new global::Mobius.Proto.Game.BattleCardDropResult();
        }
        Drop.MergeFrom(other.Drop);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Mobius.Proto.Game.BattleDropTableKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (drop_ == null) {
              Drop = new global::Mobius.Proto.Game.BattleCardDropResult();
            }
            input.ReadMessage(Drop);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (key_ == null) {
              Key = new global::Mobius.Proto.Game.BattleDropTableKey();
            }
            input.ReadMessage(Key);
            break;
          }
          case 18: {
            if (drop_ == null) {
              Drop = new global::Mobius.Proto.Game.BattleCardDropResult();
            }
            input.ReadMessage(Drop);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BattleDropTableKey : pb::IMessage<BattleDropTableKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleDropTableKey> _parser = new pb::MessageParser<BattleDropTableKey>(() => new BattleDropTableKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleDropTableKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleDropTableKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleDropTableKey(BattleDropTableKey other) : this() {
      fiendId_ = other.fiendId_;
      fiendIndex_ = other.fiendIndex_;
      waveIndex_ = other.waveIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleDropTableKey Clone() {
      return new BattleDropTableKey(this);
    }

    /// <summary>Field number for the "fiend_id" field.</summary>
    public const int FiendIdFieldNumber = 1;
    private string fiendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FiendId {
      get { return fiendId_; }
      set {
        fiendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fiend_index" field.</summary>
    public const int FiendIndexFieldNumber = 2;
    private int fiendIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FiendIndex {
      get { return fiendIndex_; }
      set {
        fiendIndex_ = value;
      }
    }

    /// <summary>Field number for the "wave_index" field.</summary>
    public const int WaveIndexFieldNumber = 3;
    private int waveIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WaveIndex {
      get { return waveIndex_; }
      set {
        waveIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleDropTableKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleDropTableKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FiendId != other.FiendId) return false;
      if (FiendIndex != other.FiendIndex) return false;
      if (WaveIndex != other.WaveIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FiendId.Length != 0) hash ^= FiendId.GetHashCode();
      if (FiendIndex != 0) hash ^= FiendIndex.GetHashCode();
      if (WaveIndex != 0) hash ^= WaveIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FiendId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FiendId);
      }
      if (FiendIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FiendIndex);
      }
      if (WaveIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(WaveIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FiendId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FiendId);
      }
      if (FiendIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(FiendIndex);
      }
      if (WaveIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(WaveIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FiendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FiendId);
      }
      if (FiendIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FiendIndex);
      }
      if (WaveIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaveIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleDropTableKey other) {
      if (other == null) {
        return;
      }
      if (other.FiendId.Length != 0) {
        FiendId = other.FiendId;
      }
      if (other.FiendIndex != 0) {
        FiendIndex = other.FiendIndex;
      }
      if (other.WaveIndex != 0) {
        WaveIndex = other.WaveIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FiendId = input.ReadString();
            break;
          }
          case 16: {
            FiendIndex = input.ReadInt32();
            break;
          }
          case 24: {
            WaveIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FiendId = input.ReadString();
            break;
          }
          case 16: {
            FiendIndex = input.ReadInt32();
            break;
          }
          case 24: {
            WaveIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BattleItemDropResult : pb::IMessage<BattleItemDropResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleItemDropResult> _parser = new pb::MessageParser<BattleItemDropResult>(() => new BattleItemDropResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleItemDropResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleItemDropResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleItemDropResult(BattleItemDropResult other) : this() {
      itemId_ = other.itemId_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleItemDropResult Clone() {
      return new BattleItemDropResult(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private string itemId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemId {
      get { return itemId_; }
      set {
        itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleItemDropResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleItemDropResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleItemDropResult other) {
      if (other == null) {
        return;
      }
      if (other.ItemId.Length != 0) {
        ItemId = other.ItemId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class BattleCardDropResult : pb::IMessage<BattleCardDropResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BattleCardDropResult> _parser = new pb::MessageParser<BattleCardDropResult>(() => new BattleCardDropResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BattleCardDropResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleCardDropResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleCardDropResult(BattleCardDropResult other) : this() {
      cardId_ = other.cardId_;
      newCard_ = other.newCard_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BattleCardDropResult Clone() {
      return new BattleCardDropResult(this);
    }

    /// <summary>Field number for the "card_id" field.</summary>
    public const int CardIdFieldNumber = 1;
    private string cardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardId {
      get { return cardId_; }
      set {
        cardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_card" field.</summary>
    public const int NewCardFieldNumber = 2;
    private bool newCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NewCard {
      get { return newCard_; }
      set {
        newCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BattleCardDropResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BattleCardDropResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardId != other.CardId) return false;
      if (NewCard != other.NewCard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardId.Length != 0) hash ^= CardId.GetHashCode();
      if (NewCard != false) hash ^= NewCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CardId);
      }
      if (NewCard != false) {
        output.WriteRawTag(16);
        output.WriteBool(NewCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CardId);
      }
      if (NewCard != false) {
        output.WriteRawTag(16);
        output.WriteBool(NewCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardId);
      }
      if (NewCard != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BattleCardDropResult other) {
      if (other == null) {
        return;
      }
      if (other.CardId.Length != 0) {
        CardId = other.CardId;
      }
      if (other.NewCard != false) {
        NewCard = other.NewCard;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CardId = input.ReadString();
            break;
          }
          case 16: {
            NewCard = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CardId = input.ReadString();
            break;
          }
          case 16: {
            NewCard = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoCardFilterSortSet : pb::IMessage<ProtoCardFilterSortSet>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoCardFilterSortSet> _parser = new pb::MessageParser<ProtoCardFilterSortSet>(() => new ProtoCardFilterSortSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoCardFilterSortSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardFilterSortSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardFilterSortSet(ProtoCardFilterSortSet other) : this() {
      view_ = other.view_;
      sets_ = other.sets_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardFilterSortSet Clone() {
      return new ProtoCardFilterSortSet(this);
    }

    /// <summary>Field number for the "view" field.</summary>
    public const int ViewFieldNumber = 1;
    private int view_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int View {
      get { return view_; }
      set {
        view_ = value;
      }
    }

    /// <summary>Field number for the "sets" field.</summary>
    public const int SetsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoCardFilterSort> _repeated_sets_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoCardFilterSort.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardFilterSort> sets_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardFilterSort>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardFilterSort> Sets {
      get { return sets_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoCardFilterSortSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoCardFilterSortSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (View != other.View) return false;
      if(!sets_.Equals(other.sets_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (View != 0) hash ^= View.GetHashCode();
      hash ^= sets_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (View != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(View);
      }
      sets_.WriteTo(output, _repeated_sets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (View != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(View);
      }
      sets_.WriteTo(ref output, _repeated_sets_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (View != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(View);
      }
      size += sets_.CalculateSize(_repeated_sets_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoCardFilterSortSet other) {
      if (other == null) {
        return;
      }
      if (other.View != 0) {
        View = other.View;
      }
      sets_.Add(other.sets_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            View = input.ReadInt32();
            break;
          }
          case 18: {
            sets_.AddEntriesFrom(input, _repeated_sets_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            View = input.ReadInt32();
            break;
          }
          case 18: {
            sets_.AddEntriesFrom(ref input, _repeated_sets_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoCardFilterSort : pb::IMessage<ProtoCardFilterSort>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoCardFilterSort> _parser = new pb::MessageParser<ProtoCardFilterSort>(() => new ProtoCardFilterSort());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoCardFilterSort> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardFilterSort() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardFilterSort(ProtoCardFilterSort other) : this() {
      index_ = other.index_;
      cardTypes_ = other.cardTypes_.Clone();
      cardCategories_ = other.cardCategories_.Clone();
      specialFilters_ = other.specialFilters_.Clone();
      sortSelectors_ = other.sortSelectors_.Clone();
      sortDescending_ = other.sortDescending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoCardFilterSort Clone() {
      return new ProtoCardFilterSort(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "card_types" field.</summary>
    public const int CardTypesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_cardTypes_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> cardTypes_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CardTypes {
      get { return cardTypes_; }
    }

    /// <summary>Field number for the "card_categories" field.</summary>
    public const int CardCategoriesFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_cardCategories_codec
        = pb::FieldCodec.ForInt32(26);
    private readonly pbc::RepeatedField<int> cardCategories_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> CardCategories {
      get { return cardCategories_; }
    }

    /// <summary>Field number for the "special_filters" field.</summary>
    public const int SpecialFiltersFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_specialFilters_codec
        = pb::FieldCodec.ForInt32(34);
    private readonly pbc::RepeatedField<int> specialFilters_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SpecialFilters {
      get { return specialFilters_; }
    }

    /// <summary>Field number for the "sort_selectors" field.</summary>
    public const int SortSelectorsFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_sortSelectors_codec
        = pb::FieldCodec.ForInt32(42);
    private readonly pbc::RepeatedField<int> sortSelectors_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> SortSelectors {
      get { return sortSelectors_; }
    }

    /// <summary>Field number for the "sort_descending" field.</summary>
    public const int SortDescendingFieldNumber = 6;
    private bool sortDescending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool SortDescending {
      get { return sortDescending_; }
      set {
        sortDescending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoCardFilterSort);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoCardFilterSort other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if(!cardTypes_.Equals(other.cardTypes_)) return false;
      if(!cardCategories_.Equals(other.cardCategories_)) return false;
      if(!specialFilters_.Equals(other.specialFilters_)) return false;
      if(!sortSelectors_.Equals(other.sortSelectors_)) return false;
      if (SortDescending != other.SortDescending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      hash ^= cardTypes_.GetHashCode();
      hash ^= cardCategories_.GetHashCode();
      hash ^= specialFilters_.GetHashCode();
      hash ^= sortSelectors_.GetHashCode();
      if (SortDescending != false) hash ^= SortDescending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      cardTypes_.WriteTo(output, _repeated_cardTypes_codec);
      cardCategories_.WriteTo(output, _repeated_cardCategories_codec);
      specialFilters_.WriteTo(output, _repeated_specialFilters_codec);
      sortSelectors_.WriteTo(output, _repeated_sortSelectors_codec);
      if (SortDescending != false) {
        output.WriteRawTag(48);
        output.WriteBool(SortDescending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      cardTypes_.WriteTo(ref output, _repeated_cardTypes_codec);
      cardCategories_.WriteTo(ref output, _repeated_cardCategories_codec);
      specialFilters_.WriteTo(ref output, _repeated_specialFilters_codec);
      sortSelectors_.WriteTo(ref output, _repeated_sortSelectors_codec);
      if (SortDescending != false) {
        output.WriteRawTag(48);
        output.WriteBool(SortDescending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      size += cardTypes_.CalculateSize(_repeated_cardTypes_codec);
      size += cardCategories_.CalculateSize(_repeated_cardCategories_codec);
      size += specialFilters_.CalculateSize(_repeated_specialFilters_codec);
      size += sortSelectors_.CalculateSize(_repeated_sortSelectors_codec);
      if (SortDescending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoCardFilterSort other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      cardTypes_.Add(other.cardTypes_);
      cardCategories_.Add(other.cardCategories_);
      specialFilters_.Add(other.specialFilters_);
      sortSelectors_.Add(other.sortSelectors_);
      if (other.SortDescending != false) {
        SortDescending = other.SortDescending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            cardTypes_.AddEntriesFrom(input, _repeated_cardTypes_codec);
            break;
          }
          case 26:
          case 24: {
            cardCategories_.AddEntriesFrom(input, _repeated_cardCategories_codec);
            break;
          }
          case 34:
          case 32: {
            specialFilters_.AddEntriesFrom(input, _repeated_specialFilters_codec);
            break;
          }
          case 42:
          case 40: {
            sortSelectors_.AddEntriesFrom(input, _repeated_sortSelectors_codec);
            break;
          }
          case 48: {
            SortDescending = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18:
          case 16: {
            cardTypes_.AddEntriesFrom(ref input, _repeated_cardTypes_codec);
            break;
          }
          case 26:
          case 24: {
            cardCategories_.AddEntriesFrom(ref input, _repeated_cardCategories_codec);
            break;
          }
          case 34:
          case 32: {
            specialFilters_.AddEntriesFrom(ref input, _repeated_specialFilters_codec);
            break;
          }
          case 42:
          case 40: {
            sortSelectors_.AddEntriesFrom(ref input, _repeated_sortSelectors_codec);
            break;
          }
          case 48: {
            SortDescending = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoLoginCampaignInstance : pb::IMessage<ProtoLoginCampaignInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoLoginCampaignInstance> _parser = new pb::MessageParser<ProtoLoginCampaignInstance>(() => new ProtoLoginCampaignInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoLoginCampaignInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoLoginCampaignInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoLoginCampaignInstance(ProtoLoginCampaignInstance other) : this() {
      id_ = other.id_;
      claimed_ = other.claimed_.Clone();
      lastClaimIndex_ = other.lastClaimIndex_;
      lastClaimAdded_ = other.lastClaimAdded_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoLoginCampaignInstance Clone() {
      return new ProtoLoginCampaignInstance(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "claimed" field.</summary>
    public const int ClaimedFieldNumber = 2;
    private static readonly pb::FieldCodec<bool> _repeated_claimed_codec
        = pb::FieldCodec.ForBool(18);
    private readonly pbc::RepeatedField<bool> claimed_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Claimed {
      get { return claimed_; }
    }

    /// <summary>Field number for the "last_claim_index" field.</summary>
    public const int LastClaimIndexFieldNumber = 3;
    private int lastClaimIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LastClaimIndex {
      get { return lastClaimIndex_; }
      set {
        lastClaimIndex_ = value;
      }
    }

    /// <summary>Field number for the "last_claim_added" field.</summary>
    public const int LastClaimAddedFieldNumber = 4;
    private long lastClaimAdded_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastClaimAdded {
      get { return lastClaimAdded_; }
      set {
        lastClaimAdded_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoLoginCampaignInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoLoginCampaignInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if(!claimed_.Equals(other.claimed_)) return false;
      if (LastClaimIndex != other.LastClaimIndex) return false;
      if (LastClaimAdded != other.LastClaimAdded) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= claimed_.GetHashCode();
      if (LastClaimIndex != 0) hash ^= LastClaimIndex.GetHashCode();
      if (LastClaimAdded != 0L) hash ^= LastClaimAdded.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      claimed_.WriteTo(output, _repeated_claimed_codec);
      if (LastClaimIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastClaimIndex);
      }
      if (LastClaimAdded != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LastClaimAdded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      claimed_.WriteTo(ref output, _repeated_claimed_codec);
      if (LastClaimIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LastClaimIndex);
      }
      if (LastClaimAdded != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(LastClaimAdded);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += claimed_.CalculateSize(_repeated_claimed_codec);
      if (LastClaimIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LastClaimIndex);
      }
      if (LastClaimAdded != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastClaimAdded);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoLoginCampaignInstance other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      claimed_.Add(other.claimed_);
      if (other.LastClaimIndex != 0) {
        LastClaimIndex = other.LastClaimIndex;
      }
      if (other.LastClaimAdded != 0L) {
        LastClaimAdded = other.LastClaimAdded;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            claimed_.AddEntriesFrom(input, _repeated_claimed_codec);
            break;
          }
          case 24: {
            LastClaimIndex = input.ReadInt32();
            break;
          }
          case 32: {
            LastClaimAdded = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            claimed_.AddEntriesFrom(ref input, _repeated_claimed_codec);
            break;
          }
          case 24: {
            LastClaimIndex = input.ReadInt32();
            break;
          }
          case 32: {
            LastClaimAdded = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoFairyCompanionData : pb::IMessage<ProtoFairyCompanionData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoFairyCompanionData> _parser = new pb::MessageParser<ProtoFairyCompanionData>(() => new ProtoFairyCompanionData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoFairyCompanionData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionData(ProtoFairyCompanionData other) : this() {
      currentCompanionIndex_ = other.currentCompanionIndex_;
      inventory_ = other.inventory_ != null ? other.inventory_.Clone() : null;
      lastPrimaryCompanion_ = other.lastPrimaryCompanion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionData Clone() {
      return new ProtoFairyCompanionData(this);
    }

    /// <summary>Field number for the "current_companion_index" field.</summary>
    public const int CurrentCompanionIndexFieldNumber = 1;
    private int currentCompanionIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentCompanionIndex {
      get { return currentCompanionIndex_; }
      set {
        currentCompanionIndex_ = value;
      }
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 2;
    private global::Mobius.Proto.Game.ProtoFairyCompanionInventory inventory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoFairyCompanionInventory Inventory {
      get { return inventory_; }
      set {
        inventory_ = value;
      }
    }

    /// <summary>Field number for the "last_primary_companion" field.</summary>
    public const int LastPrimaryCompanionFieldNumber = 3;
    private string lastPrimaryCompanion_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastPrimaryCompanion {
      get { return lastPrimaryCompanion_; }
      set {
        lastPrimaryCompanion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoFairyCompanionData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoFairyCompanionData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentCompanionIndex != other.CurrentCompanionIndex) return false;
      if (!object.Equals(Inventory, other.Inventory)) return false;
      if (LastPrimaryCompanion != other.LastPrimaryCompanion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentCompanionIndex != 0) hash ^= CurrentCompanionIndex.GetHashCode();
      if (inventory_ != null) hash ^= Inventory.GetHashCode();
      if (LastPrimaryCompanion.Length != 0) hash ^= LastPrimaryCompanion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentCompanionIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentCompanionIndex);
      }
      if (inventory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Inventory);
      }
      if (LastPrimaryCompanion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastPrimaryCompanion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentCompanionIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentCompanionIndex);
      }
      if (inventory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Inventory);
      }
      if (LastPrimaryCompanion.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastPrimaryCompanion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentCompanionIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentCompanionIndex);
      }
      if (inventory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inventory);
      }
      if (LastPrimaryCompanion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastPrimaryCompanion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoFairyCompanionData other) {
      if (other == null) {
        return;
      }
      if (other.CurrentCompanionIndex != 0) {
        CurrentCompanionIndex = other.CurrentCompanionIndex;
      }
      if (other.inventory_ != null) {
        if (inventory_ == null) {
          Inventory = new global::Mobius.Proto.Game.ProtoFairyCompanionInventory();
        }
        Inventory.MergeFrom(other.Inventory);
      }
      if (other.LastPrimaryCompanion.Length != 0) {
        LastPrimaryCompanion = other.LastPrimaryCompanion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentCompanionIndex = input.ReadInt32();
            break;
          }
          case 18: {
            if (inventory_ == null) {
              Inventory = new global::Mobius.Proto.Game.ProtoFairyCompanionInventory();
            }
            input.ReadMessage(Inventory);
            break;
          }
          case 26: {
            LastPrimaryCompanion = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrentCompanionIndex = input.ReadInt32();
            break;
          }
          case 18: {
            if (inventory_ == null) {
              Inventory = new global::Mobius.Proto.Game.ProtoFairyCompanionInventory();
            }
            input.ReadMessage(Inventory);
            break;
          }
          case 26: {
            LastPrimaryCompanion = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoFairyCompanionInventory : pb::IMessage<ProtoFairyCompanionInventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoFairyCompanionInventory> _parser = new pb::MessageParser<ProtoFairyCompanionInventory>(() => new ProtoFairyCompanionInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoFairyCompanionInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionInventory(ProtoFairyCompanionInventory other) : this() {
      companionList_ = other.companionList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionInventory Clone() {
      return new ProtoFairyCompanionInventory(this);
    }

    /// <summary>Field number for the "companion_list" field.</summary>
    public const int CompanionListFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoFairyCompanionInstance> _repeated_companionList_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoFairyCompanionInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoFairyCompanionInstance> companionList_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoFairyCompanionInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoFairyCompanionInstance> CompanionList {
      get { return companionList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoFairyCompanionInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoFairyCompanionInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!companionList_.Equals(other.companionList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= companionList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      companionList_.WriteTo(output, _repeated_companionList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      companionList_.WriteTo(ref output, _repeated_companionList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += companionList_.CalculateSize(_repeated_companionList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoFairyCompanionInventory other) {
      if (other == null) {
        return;
      }
      companionList_.Add(other.companionList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            companionList_.AddEntriesFrom(input, _repeated_companionList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            companionList_.AddEntriesFrom(ref input, _repeated_companionList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoFairyCompanionInstance : pb::IMessage<ProtoFairyCompanionInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoFairyCompanionInstance> _parser = new pb::MessageParser<ProtoFairyCompanionInstance>(() => new ProtoFairyCompanionInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoFairyCompanionInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionInstance(ProtoFairyCompanionInstance other) : this() {
      sysId_ = other.sysId_;
      baseCompanionId_ = other.baseCompanionId_;
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoFairyCompanionInstance Clone() {
      return new ProtoFairyCompanionInstance(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "base_companion_id" field.</summary>
    public const int BaseCompanionIdFieldNumber = 2;
    private string baseCompanionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseCompanionId {
      get { return baseCompanionId_; }
      set {
        baseCompanionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoFairyCompanionInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoFairyCompanionInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (BaseCompanionId != other.BaseCompanionId) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (BaseCompanionId.Length != 0) hash ^= BaseCompanionId.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (BaseCompanionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseCompanionId);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (BaseCompanionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BaseCompanionId);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (BaseCompanionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseCompanionId);
      }
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoFairyCompanionInstance other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.BaseCompanionId.Length != 0) {
        BaseCompanionId = other.BaseCompanionId;
      }
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            BaseCompanionId = input.ReadString();
            break;
          }
          case 24: {
            CreatedAt = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            BaseCompanionId = input.ReadString();
            break;
          }
          case 24: {
            CreatedAt = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoItemData : pb::IMessage<ProtoItemData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoItemData> _parser = new pb::MessageParser<ProtoItemData>(() => new ProtoItemData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoItemData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemData(ProtoItemData other) : this() {
      inventory_ = other.inventory_ != null ? other.inventory_.Clone() : null;
      limitData_ = other.limitData_.Clone();
      distillers_ = other.distillers_.Clone();
      giftBoxes_ = other.giftBoxes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemData Clone() {
      return new ProtoItemData(this);
    }

    /// <summary>Field number for the "inventory" field.</summary>
    public const int InventoryFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoItemInventory inventory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoItemInventory Inventory {
      get { return inventory_; }
      set {
        inventory_ = value;
      }
    }

    /// <summary>Field number for the "limit_data" field.</summary>
    public const int LimitDataFieldNumber = 2;
    private static readonly pbc::MapField<string, global::Mobius.Proto.Game.ProtoItemDropRecord>.Codec _map_limitData_codec
        = new pbc::MapField<string, global::Mobius.Proto.Game.ProtoItemDropRecord>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoItemDropRecord.Parser), 18);
    private readonly pbc::MapField<string, global::Mobius.Proto.Game.ProtoItemDropRecord> limitData_ = new pbc::MapField<string, global::Mobius.Proto.Game.ProtoItemDropRecord>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Mobius.Proto.Game.ProtoItemDropRecord> LimitData {
      get { return limitData_; }
    }

    /// <summary>Field number for the "distillers" field.</summary>
    public const int DistillersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoItemDistiller> _repeated_distillers_codec
        = pb::FieldCodec.ForMessage(26, global::Mobius.Proto.Game.ProtoItemDistiller.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemDistiller> distillers_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemDistiller>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemDistiller> Distillers {
      get { return distillers_; }
    }

    /// <summary>Field number for the "gift_boxes" field.</summary>
    public const int GiftBoxesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoGiftBoxInstance> _repeated_giftBoxes_codec
        = pb::FieldCodec.ForMessage(34, global::Mobius.Proto.Game.ProtoGiftBoxInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoGiftBoxInstance> giftBoxes_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoGiftBoxInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoGiftBoxInstance> GiftBoxes {
      get { return giftBoxes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoItemData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoItemData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Inventory, other.Inventory)) return false;
      if (!LimitData.Equals(other.LimitData)) return false;
      if(!distillers_.Equals(other.distillers_)) return false;
      if(!giftBoxes_.Equals(other.giftBoxes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (inventory_ != null) hash ^= Inventory.GetHashCode();
      hash ^= LimitData.GetHashCode();
      hash ^= distillers_.GetHashCode();
      hash ^= giftBoxes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (inventory_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Inventory);
      }
      limitData_.WriteTo(output, _map_limitData_codec);
      distillers_.WriteTo(output, _repeated_distillers_codec);
      giftBoxes_.WriteTo(output, _repeated_giftBoxes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (inventory_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Inventory);
      }
      limitData_.WriteTo(ref output, _map_limitData_codec);
      distillers_.WriteTo(ref output, _repeated_distillers_codec);
      giftBoxes_.WriteTo(ref output, _repeated_giftBoxes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (inventory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Inventory);
      }
      size += limitData_.CalculateSize(_map_limitData_codec);
      size += distillers_.CalculateSize(_repeated_distillers_codec);
      size += giftBoxes_.CalculateSize(_repeated_giftBoxes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoItemData other) {
      if (other == null) {
        return;
      }
      if (other.inventory_ != null) {
        if (inventory_ == null) {
          Inventory = new global::Mobius.Proto.Game.ProtoItemInventory();
        }
        Inventory.MergeFrom(other.Inventory);
      }
      limitData_.Add(other.limitData_);
      distillers_.Add(other.distillers_);
      giftBoxes_.Add(other.giftBoxes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (inventory_ == null) {
              Inventory = new global::Mobius.Proto.Game.ProtoItemInventory();
            }
            input.ReadMessage(Inventory);
            break;
          }
          case 18: {
            limitData_.AddEntriesFrom(input, _map_limitData_codec);
            break;
          }
          case 26: {
            distillers_.AddEntriesFrom(input, _repeated_distillers_codec);
            break;
          }
          case 34: {
            giftBoxes_.AddEntriesFrom(input, _repeated_giftBoxes_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (inventory_ == null) {
              Inventory = new global::Mobius.Proto.Game.ProtoItemInventory();
            }
            input.ReadMessage(Inventory);
            break;
          }
          case 18: {
            limitData_.AddEntriesFrom(ref input, _map_limitData_codec);
            break;
          }
          case 26: {
            distillers_.AddEntriesFrom(ref input, _repeated_distillers_codec);
            break;
          }
          case 34: {
            giftBoxes_.AddEntriesFrom(ref input, _repeated_giftBoxes_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoItemDistiller : pb::IMessage<ProtoItemDistiller>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoItemDistiller> _parser = new pb::MessageParser<ProtoItemDistiller>(() => new ProtoItemDistiller());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoItemDistiller> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemDistiller() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemDistiller(ProtoItemDistiller other) : this() {
      itemId_ = other.itemId_;
      decTime_ = other.decTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemDistiller Clone() {
      return new ProtoItemDistiller(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private string itemId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemId {
      get { return itemId_; }
      set {
        itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dec_time" field.</summary>
    public const int DecTimeFieldNumber = 2;
    private long decTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DecTime {
      get { return decTime_; }
      set {
        decTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoItemDistiller);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoItemDistiller other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (DecTime != other.DecTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
      if (DecTime != 0L) hash ^= DecTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (DecTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DecTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (DecTime != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DecTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
      }
      if (DecTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DecTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoItemDistiller other) {
      if (other == null) {
        return;
      }
      if (other.ItemId.Length != 0) {
        ItemId = other.ItemId;
      }
      if (other.DecTime != 0L) {
        DecTime = other.DecTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            DecTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            DecTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoItemDropRecord : pb::IMessage<ProtoItemDropRecord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoItemDropRecord> _parser = new pb::MessageParser<ProtoItemDropRecord>(() => new ProtoItemDropRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoItemDropRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemDropRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemDropRecord(ProtoItemDropRecord other) : this() {
      key_ = other.key_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemDropRecord Clone() {
      return new ProtoItemDropRecord(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private int key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Key {
      get { return key_; }
      set {
        key_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoItemDropRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoItemDropRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key != 0) hash ^= Key.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Key != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Key);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Key);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoItemDropRecord other) {
      if (other == null) {
        return;
      }
      if (other.Key != 0) {
        Key = other.Key;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Key = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoItemInventory : pb::IMessage<ProtoItemInventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoItemInventory> _parser = new pb::MessageParser<ProtoItemInventory>(() => new ProtoItemInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoItemInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemInventory(ProtoItemInventory other) : this() {
      itemList_ = other.itemList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemInventory Clone() {
      return new ProtoItemInventory(this);
    }

    /// <summary>Field number for the "item_list" field.</summary>
    public const int ItemListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoItemInstance> _repeated_itemList_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoItemInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemInstance> itemList_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoItemInstance> ItemList {
      get { return itemList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoItemInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoItemInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!itemList_.Equals(other.itemList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= itemList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      itemList_.WriteTo(output, _repeated_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      itemList_.WriteTo(ref output, _repeated_itemList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += itemList_.CalculateSize(_repeated_itemList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoItemInventory other) {
      if (other == null) {
        return;
      }
      itemList_.Add(other.itemList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            itemList_.AddEntriesFrom(input, _repeated_itemList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            itemList_.AddEntriesFrom(ref input, _repeated_itemList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoGiftBoxInstance : pb::IMessage<ProtoGiftBoxInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoGiftBoxInstance> _parser = new pb::MessageParser<ProtoGiftBoxInstance>(() => new ProtoGiftBoxInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoGiftBoxInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoGiftBoxInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoGiftBoxInstance(ProtoGiftBoxInstance other) : this() {
      id_ = other.id_;
      purchasedAt_ = other.purchasedAt_;
      purchaseCount_ = other.purchaseCount_;
      effectiveDays_ = other.effectiveDays_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoGiftBoxInstance Clone() {
      return new ProtoGiftBoxInstance(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "purchased_at" field.</summary>
    public const int PurchasedAtFieldNumber = 2;
    private long purchasedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PurchasedAt {
      get { return purchasedAt_; }
      set {
        purchasedAt_ = value;
      }
    }

    /// <summary>Field number for the "purchase_count" field.</summary>
    public const int PurchaseCountFieldNumber = 3;
    private int purchaseCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PurchaseCount {
      get { return purchaseCount_; }
      set {
        purchaseCount_ = value;
      }
    }

    /// <summary>Field number for the "effective_days" field.</summary>
    public const int EffectiveDaysFieldNumber = 4;
    private int effectiveDays_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EffectiveDays {
      get { return effectiveDays_; }
      set {
        effectiveDays_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoGiftBoxInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoGiftBoxInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (PurchasedAt != other.PurchasedAt) return false;
      if (PurchaseCount != other.PurchaseCount) return false;
      if (EffectiveDays != other.EffectiveDays) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (PurchasedAt != 0L) hash ^= PurchasedAt.GetHashCode();
      if (PurchaseCount != 0) hash ^= PurchaseCount.GetHashCode();
      if (EffectiveDays != 0) hash ^= EffectiveDays.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PurchasedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PurchasedAt);
      }
      if (PurchaseCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PurchaseCount);
      }
      if (EffectiveDays != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EffectiveDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (PurchasedAt != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PurchasedAt);
      }
      if (PurchaseCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PurchaseCount);
      }
      if (EffectiveDays != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(EffectiveDays);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (PurchasedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PurchasedAt);
      }
      if (PurchaseCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PurchaseCount);
      }
      if (EffectiveDays != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EffectiveDays);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoGiftBoxInstance other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.PurchasedAt != 0L) {
        PurchasedAt = other.PurchasedAt;
      }
      if (other.PurchaseCount != 0) {
        PurchaseCount = other.PurchaseCount;
      }
      if (other.EffectiveDays != 0) {
        EffectiveDays = other.EffectiveDays;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            PurchasedAt = input.ReadInt64();
            break;
          }
          case 24: {
            PurchaseCount = input.ReadInt32();
            break;
          }
          case 32: {
            EffectiveDays = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            PurchasedAt = input.ReadInt64();
            break;
          }
          case 24: {
            PurchaseCount = input.ReadInt32();
            break;
          }
          case 32: {
            EffectiveDays = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoItemInstance : pb::IMessage<ProtoItemInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoItemInstance> _parser = new pb::MessageParser<ProtoItemInstance>(() => new ProtoItemInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoItemInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemInstance(ProtoItemInstance other) : this() {
      sysId_ = other.sysId_;
      quantity_ = other.quantity_;
      itemId_ = other.itemId_;
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemInstance Clone() {
      return new ProtoItemInstance(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 3;
    private string itemId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemId {
      get { return itemId_; }
      set {
        itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 4;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoItemInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoItemInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (Quantity != other.Quantity) return false;
      if (ItemId != other.ItemId) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (ItemId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ItemId);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (ItemId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ItemId);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (ItemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
      }
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoItemInstance other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.ItemId.Length != 0) {
        ItemId = other.ItemId;
      }
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 26: {
            ItemId = input.ReadString();
            break;
          }
          case 32: {
            CreatedAt = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 26: {
            ItemId = input.ReadString();
            break;
          }
          case 32: {
            CreatedAt = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoItemValuePair : pb::IMessage<ProtoItemValuePair>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoItemValuePair> _parser = new pb::MessageParser<ProtoItemValuePair>(() => new ProtoItemValuePair());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoItemValuePair> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemValuePair() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemValuePair(ProtoItemValuePair other) : this() {
      itemId_ = other.itemId_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemValuePair Clone() {
      return new ProtoItemValuePair(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private string itemId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemId {
      get { return itemId_; }
      set {
        itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoItemValuePair);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoItemValuePair other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Value != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoItemValuePair other) {
      if (other == null) {
        return;
      }
      if (other.ItemId.Length != 0) {
        ItemId = other.ItemId;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoJobCardData : pb::IMessage<ProtoJobCardData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoJobCardData> _parser = new pb::MessageParser<ProtoJobCardData>(() => new ProtoJobCardData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoJobCardData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardData(ProtoJobCardData other) : this() {
      jobs_ = other.jobs_ != null ? other.jobs_.Clone() : null;
      weapons_ = other.weapons_ != null ? other.weapons_.Clone() : null;
      skillPanels_ = other.skillPanels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardData Clone() {
      return new ProtoJobCardData(this);
    }

    /// <summary>Field number for the "jobs" field.</summary>
    public const int JobsFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoJobInventory jobs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoJobInventory Jobs {
      get { return jobs_; }
      set {
        jobs_ = value;
      }
    }

    /// <summary>Field number for the "weapons" field.</summary>
    public const int WeaponsFieldNumber = 2;
    private global::Mobius.Proto.Game.ProtoWeaponInventory weapons_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoWeaponInventory Weapons {
      get { return weapons_; }
      set {
        weapons_ = value;
      }
    }

    /// <summary>Field number for the "skill_panels" field.</summary>
    public const int SkillPanelsFieldNumber = 3;
    private static readonly pbc::MapField<string, global::Mobius.Proto.Game.ProtoSkillPanelGroups>.Codec _map_skillPanels_codec
        = new pbc::MapField<string, global::Mobius.Proto.Game.ProtoSkillPanelGroups>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoSkillPanelGroups.Parser), 26);
    private readonly pbc::MapField<string, global::Mobius.Proto.Game.ProtoSkillPanelGroups> skillPanels_ = new pbc::MapField<string, global::Mobius.Proto.Game.ProtoSkillPanelGroups>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Mobius.Proto.Game.ProtoSkillPanelGroups> SkillPanels {
      get { return skillPanels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoJobCardData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoJobCardData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Jobs, other.Jobs)) return false;
      if (!object.Equals(Weapons, other.Weapons)) return false;
      if (!SkillPanels.Equals(other.SkillPanels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jobs_ != null) hash ^= Jobs.GetHashCode();
      if (weapons_ != null) hash ^= Weapons.GetHashCode();
      hash ^= SkillPanels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (jobs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jobs);
      }
      if (weapons_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Weapons);
      }
      skillPanels_.WriteTo(output, _map_skillPanels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (jobs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Jobs);
      }
      if (weapons_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Weapons);
      }
      skillPanels_.WriteTo(ref output, _map_skillPanels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jobs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Jobs);
      }
      if (weapons_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapons);
      }
      size += skillPanels_.CalculateSize(_map_skillPanels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoJobCardData other) {
      if (other == null) {
        return;
      }
      if (other.jobs_ != null) {
        if (jobs_ == null) {
          Jobs = new global::Mobius.Proto.Game.ProtoJobInventory();
        }
        Jobs.MergeFrom(other.Jobs);
      }
      if (other.weapons_ != null) {
        if (weapons_ == null) {
          Weapons = new global::Mobius.Proto.Game.ProtoWeaponInventory();
        }
        Weapons.MergeFrom(other.Weapons);
      }
      skillPanels_.Add(other.skillPanels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (jobs_ == null) {
              Jobs = new global::Mobius.Proto.Game.ProtoJobInventory();
            }
            input.ReadMessage(Jobs);
            break;
          }
          case 18: {
            if (weapons_ == null) {
              Weapons = new global::Mobius.Proto.Game.ProtoWeaponInventory();
            }
            input.ReadMessage(Weapons);
            break;
          }
          case 26: {
            skillPanels_.AddEntriesFrom(input, _map_skillPanels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (jobs_ == null) {
              Jobs = new global::Mobius.Proto.Game.ProtoJobInventory();
            }
            input.ReadMessage(Jobs);
            break;
          }
          case 18: {
            if (weapons_ == null) {
              Weapons = new global::Mobius.Proto.Game.ProtoWeaponInventory();
            }
            input.ReadMessage(Weapons);
            break;
          }
          case 26: {
            skillPanels_.AddEntriesFrom(ref input, _map_skillPanels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoJobInventory : pb::IMessage<ProtoJobInventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoJobInventory> _parser = new pb::MessageParser<ProtoJobInventory>(() => new ProtoJobInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoJobInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobInventory(ProtoJobInventory other) : this() {
      jobList_ = other.jobList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobInventory Clone() {
      return new ProtoJobInventory(this);
    }

    /// <summary>Field number for the "job_list" field.</summary>
    public const int JobListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoJobCardInstance> _repeated_jobList_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoJobCardInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoJobCardInstance> jobList_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoJobCardInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoJobCardInstance> JobList {
      get { return jobList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoJobInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoJobInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!jobList_.Equals(other.jobList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= jobList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      jobList_.WriteTo(output, _repeated_jobList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      jobList_.WriteTo(ref output, _repeated_jobList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += jobList_.CalculateSize(_repeated_jobList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoJobInventory other) {
      if (other == null) {
        return;
      }
      jobList_.Add(other.jobList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            jobList_.AddEntriesFrom(input, _repeated_jobList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            jobList_.AddEntriesFrom(ref input, _repeated_jobList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoJobCardInstance : pb::IMessage<ProtoJobCardInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoJobCardInstance> _parser = new pb::MessageParser<ProtoJobCardInstance>(() => new ProtoJobCardInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoJobCardInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardInstance(ProtoJobCardInstance other) : this() {
      sysId_ = other.sysId_;
      subJobUnlock_ = other.subJobUnlock_;
      overBoostLevel_ = other.overBoostLevel_;
      skillPanelUnlocks_ = other.skillPanelUnlocks_ != null ? other.skillPanelUnlocks_.Clone() : null;
      baseJobId_ = other.baseJobId_;
      createdAt_ = other.createdAt_;
      weaponUnlock_ = other.weaponUnlock_;
      hpStatMod_ = other.hpStatMod_;
      attackStatMod_ = other.attackStatMod_;
      breakStatMod_ = other.breakStatMod_;
      magicStatMod_ = other.magicStatMod_;
      speedStatMod_ = other.speedStatMod_;
      defenseStatMod_ = other.defenseStatMod_;
      critChanceStatMod_ = other.critChanceStatMod_;
      ultimateBoost_ = other.ultimateBoost_;
      autoAbilities_ = other.autoAbilities_.Clone();
      crownLevel_ = other.crownLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardInstance Clone() {
      return new ProtoJobCardInstance(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub_job_unlock" field.</summary>
    public const int SubJobUnlockFieldNumber = 2;
    private int subJobUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubJobUnlock {
      get { return subJobUnlock_; }
      set {
        subJobUnlock_ = value;
      }
    }

    /// <summary>Field number for the "over_boost_level" field.</summary>
    public const int OverBoostLevelFieldNumber = 3;
    private int overBoostLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OverBoostLevel {
      get { return overBoostLevel_; }
      set {
        overBoostLevel_ = value;
      }
    }

    /// <summary>Field number for the "skill_panel_unlocks" field.</summary>
    public const int SkillPanelUnlocksFieldNumber = 4;
    private global::Mobius.Proto.Game.ProtoSkillPanelGroups skillPanelUnlocks_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoSkillPanelGroups SkillPanelUnlocks {
      get { return skillPanelUnlocks_; }
      set {
        skillPanelUnlocks_ = value;
      }
    }

    /// <summary>Field number for the "base_job_id" field.</summary>
    public const int BaseJobIdFieldNumber = 5;
    private string baseJobId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseJobId {
      get { return baseJobId_; }
      set {
        baseJobId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 6;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "weapon_unlock" field.</summary>
    public const int WeaponUnlockFieldNumber = 7;
    private int weaponUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WeaponUnlock {
      get { return weaponUnlock_; }
      set {
        weaponUnlock_ = value;
      }
    }

    /// <summary>Field number for the "hp_stat_mod" field.</summary>
    public const int HpStatModFieldNumber = 8;
    private int hpStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HpStatMod {
      get { return hpStatMod_; }
      set {
        hpStatMod_ = value;
      }
    }

    /// <summary>Field number for the "attack_stat_mod" field.</summary>
    public const int AttackStatModFieldNumber = 9;
    private int attackStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackStatMod {
      get { return attackStatMod_; }
      set {
        attackStatMod_ = value;
      }
    }

    /// <summary>Field number for the "break_stat_mod" field.</summary>
    public const int BreakStatModFieldNumber = 10;
    private int breakStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BreakStatMod {
      get { return breakStatMod_; }
      set {
        breakStatMod_ = value;
      }
    }

    /// <summary>Field number for the "magic_stat_mod" field.</summary>
    public const int MagicStatModFieldNumber = 11;
    private int magicStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicStatMod {
      get { return magicStatMod_; }
      set {
        magicStatMod_ = value;
      }
    }

    /// <summary>Field number for the "speed_stat_mod" field.</summary>
    public const int SpeedStatModFieldNumber = 12;
    private int speedStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedStatMod {
      get { return speedStatMod_; }
      set {
        speedStatMod_ = value;
      }
    }

    /// <summary>Field number for the "defense_stat_mod" field.</summary>
    public const int DefenseStatModFieldNumber = 14;
    private int defenseStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefenseStatMod {
      get { return defenseStatMod_; }
      set {
        defenseStatMod_ = value;
      }
    }

    /// <summary>Field number for the "crit_chance_stat_mod" field.</summary>
    public const int CritChanceStatModFieldNumber = 15;
    private int critChanceStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CritChanceStatMod {
      get { return critChanceStatMod_; }
      set {
        critChanceStatMod_ = value;
      }
    }

    /// <summary>Field number for the "ultimate_boost" field.</summary>
    public const int UltimateBoostFieldNumber = 18;
    private int ultimateBoost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UltimateBoost {
      get { return ultimateBoost_; }
      set {
        ultimateBoost_ = value;
      }
    }

    /// <summary>Field number for the "auto_abilities" field.</summary>
    public const int AutoAbilitiesFieldNumber = 19;
    private static readonly pbc::MapField<string, int>.Codec _map_autoAbilities_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 154);
    private readonly pbc::MapField<string, int> autoAbilities_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> AutoAbilities {
      get { return autoAbilities_; }
    }

    /// <summary>Field number for the "crown_level" field.</summary>
    public const int CrownLevelFieldNumber = 20;
    private int crownLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CrownLevel {
      get { return crownLevel_; }
      set {
        crownLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoJobCardInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoJobCardInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (SubJobUnlock != other.SubJobUnlock) return false;
      if (OverBoostLevel != other.OverBoostLevel) return false;
      if (!object.Equals(SkillPanelUnlocks, other.SkillPanelUnlocks)) return false;
      if (BaseJobId != other.BaseJobId) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (WeaponUnlock != other.WeaponUnlock) return false;
      if (HpStatMod != other.HpStatMod) return false;
      if (AttackStatMod != other.AttackStatMod) return false;
      if (BreakStatMod != other.BreakStatMod) return false;
      if (MagicStatMod != other.MagicStatMod) return false;
      if (SpeedStatMod != other.SpeedStatMod) return false;
      if (DefenseStatMod != other.DefenseStatMod) return false;
      if (CritChanceStatMod != other.CritChanceStatMod) return false;
      if (UltimateBoost != other.UltimateBoost) return false;
      if (!AutoAbilities.Equals(other.AutoAbilities)) return false;
      if (CrownLevel != other.CrownLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (SubJobUnlock != 0) hash ^= SubJobUnlock.GetHashCode();
      if (OverBoostLevel != 0) hash ^= OverBoostLevel.GetHashCode();
      if (skillPanelUnlocks_ != null) hash ^= SkillPanelUnlocks.GetHashCode();
      if (BaseJobId.Length != 0) hash ^= BaseJobId.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (WeaponUnlock != 0) hash ^= WeaponUnlock.GetHashCode();
      if (HpStatMod != 0) hash ^= HpStatMod.GetHashCode();
      if (AttackStatMod != 0) hash ^= AttackStatMod.GetHashCode();
      if (BreakStatMod != 0) hash ^= BreakStatMod.GetHashCode();
      if (MagicStatMod != 0) hash ^= MagicStatMod.GetHashCode();
      if (SpeedStatMod != 0) hash ^= SpeedStatMod.GetHashCode();
      if (DefenseStatMod != 0) hash ^= DefenseStatMod.GetHashCode();
      if (CritChanceStatMod != 0) hash ^= CritChanceStatMod.GetHashCode();
      if (UltimateBoost != 0) hash ^= UltimateBoost.GetHashCode();
      hash ^= AutoAbilities.GetHashCode();
      if (CrownLevel != 0) hash ^= CrownLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (SubJobUnlock != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubJobUnlock);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OverBoostLevel);
      }
      if (skillPanelUnlocks_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SkillPanelUnlocks);
      }
      if (BaseJobId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BaseJobId);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreatedAt);
      }
      if (WeaponUnlock != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(WeaponUnlock);
      }
      if (HpStatMod != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HpStatMod);
      }
      if (AttackStatMod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(UltimateBoost);
      }
      autoAbilities_.WriteTo(output, _map_autoAbilities_codec);
      if (CrownLevel != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(CrownLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (SubJobUnlock != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubJobUnlock);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(OverBoostLevel);
      }
      if (skillPanelUnlocks_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SkillPanelUnlocks);
      }
      if (BaseJobId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BaseJobId);
      }
      if (CreatedAt != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreatedAt);
      }
      if (WeaponUnlock != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(WeaponUnlock);
      }
      if (HpStatMod != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(HpStatMod);
      }
      if (AttackStatMod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        output.WriteRawTag(120);
        output.WriteInt32(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        output.WriteRawTag(144, 1);
        output.WriteInt32(UltimateBoost);
      }
      autoAbilities_.WriteTo(ref output, _map_autoAbilities_codec);
      if (CrownLevel != 0) {
        output.WriteRawTag(160, 1);
        output.WriteInt32(CrownLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (SubJobUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubJobUnlock);
      }
      if (OverBoostLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OverBoostLevel);
      }
      if (skillPanelUnlocks_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkillPanelUnlocks);
      }
      if (BaseJobId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseJobId);
      }
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (WeaponUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeaponUnlock);
      }
      if (HpStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpStatMod);
      }
      if (AttackStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(UltimateBoost);
      }
      size += autoAbilities_.CalculateSize(_map_autoAbilities_codec);
      if (CrownLevel != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(CrownLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoJobCardInstance other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.SubJobUnlock != 0) {
        SubJobUnlock = other.SubJobUnlock;
      }
      if (other.OverBoostLevel != 0) {
        OverBoostLevel = other.OverBoostLevel;
      }
      if (other.skillPanelUnlocks_ != null) {
        if (skillPanelUnlocks_ == null) {
          SkillPanelUnlocks = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
        }
        SkillPanelUnlocks.MergeFrom(other.SkillPanelUnlocks);
      }
      if (other.BaseJobId.Length != 0) {
        BaseJobId = other.BaseJobId;
      }
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      if (other.WeaponUnlock != 0) {
        WeaponUnlock = other.WeaponUnlock;
      }
      if (other.HpStatMod != 0) {
        HpStatMod = other.HpStatMod;
      }
      if (other.AttackStatMod != 0) {
        AttackStatMod = other.AttackStatMod;
      }
      if (other.BreakStatMod != 0) {
        BreakStatMod = other.BreakStatMod;
      }
      if (other.MagicStatMod != 0) {
        MagicStatMod = other.MagicStatMod;
      }
      if (other.SpeedStatMod != 0) {
        SpeedStatMod = other.SpeedStatMod;
      }
      if (other.DefenseStatMod != 0) {
        DefenseStatMod = other.DefenseStatMod;
      }
      if (other.CritChanceStatMod != 0) {
        CritChanceStatMod = other.CritChanceStatMod;
      }
      if (other.UltimateBoost != 0) {
        UltimateBoost = other.UltimateBoost;
      }
      autoAbilities_.Add(other.autoAbilities_);
      if (other.CrownLevel != 0) {
        CrownLevel = other.CrownLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            SubJobUnlock = input.ReadInt32();
            break;
          }
          case 24: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 34: {
            if (skillPanelUnlocks_ == null) {
              SkillPanelUnlocks = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
            }
            input.ReadMessage(SkillPanelUnlocks);
            break;
          }
          case 42: {
            BaseJobId = input.ReadString();
            break;
          }
          case 48: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 56: {
            WeaponUnlock = input.ReadInt32();
            break;
          }
          case 64: {
            HpStatMod = input.ReadInt32();
            break;
          }
          case 72: {
            AttackStatMod = input.ReadInt32();
            break;
          }
          case 80: {
            BreakStatMod = input.ReadInt32();
            break;
          }
          case 88: {
            MagicStatMod = input.ReadInt32();
            break;
          }
          case 96: {
            SpeedStatMod = input.ReadInt32();
            break;
          }
          case 112: {
            DefenseStatMod = input.ReadInt32();
            break;
          }
          case 120: {
            CritChanceStatMod = input.ReadInt32();
            break;
          }
          case 144: {
            UltimateBoost = input.ReadInt32();
            break;
          }
          case 154: {
            autoAbilities_.AddEntriesFrom(input, _map_autoAbilities_codec);
            break;
          }
          case 160: {
            CrownLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            SubJobUnlock = input.ReadInt32();
            break;
          }
          case 24: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 34: {
            if (skillPanelUnlocks_ == null) {
              SkillPanelUnlocks = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
            }
            input.ReadMessage(SkillPanelUnlocks);
            break;
          }
          case 42: {
            BaseJobId = input.ReadString();
            break;
          }
          case 48: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 56: {
            WeaponUnlock = input.ReadInt32();
            break;
          }
          case 64: {
            HpStatMod = input.ReadInt32();
            break;
          }
          case 72: {
            AttackStatMod = input.ReadInt32();
            break;
          }
          case 80: {
            BreakStatMod = input.ReadInt32();
            break;
          }
          case 88: {
            MagicStatMod = input.ReadInt32();
            break;
          }
          case 96: {
            SpeedStatMod = input.ReadInt32();
            break;
          }
          case 112: {
            DefenseStatMod = input.ReadInt32();
            break;
          }
          case 120: {
            CritChanceStatMod = input.ReadInt32();
            break;
          }
          case 144: {
            UltimateBoost = input.ReadInt32();
            break;
          }
          case 154: {
            autoAbilities_.AddEntriesFrom(ref input, _map_autoAbilities_codec);
            break;
          }
          case 160: {
            CrownLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoLastBattleResults : pb::IMessage<ProtoLastBattleResults>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoLastBattleResults> _parser = new pb::MessageParser<ProtoLastBattleResults>(() => new ProtoLastBattleResults());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoLastBattleResults> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoLastBattleResults() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoLastBattleResults(ProtoLastBattleResults other) : this() {
      regionMapId_ = other.regionMapId_;
      regionNodeIndex_ = other.regionNodeIndex_;
      score_ = other.score_;
      totalExp_ = other.totalExp_;
      seedAreaMultiplier_ = other.seedAreaMultiplier_;
      seedBattleMultiplier_ = other.seedBattleMultiplier_;
      progressData_ = other.progressData_ != null ? other.progressData_.Clone() : null;
      cardProgressData_ = other.cardProgressData_.Clone();
      itemRewards_ = other.itemRewards_.Clone();
      cardRewards_ = other.cardRewards_.Clone();
      companionRewards_ = other.companionRewards_.Clone();
      pendingEvents_ = other.pendingEvents_.Clone();
      dailyMissionProgress_ = other.dailyMissionProgress_;
      achievementUnlock_ = other.achievementUnlock_;
      regionMissionProgress_ = other.regionMissionProgress_.Clone();
      wanderingFiendMovements_ = other.wanderingFiendMovements_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoLastBattleResults Clone() {
      return new ProtoLastBattleResults(this);
    }

    /// <summary>Field number for the "region_map_id" field.</summary>
    public const int RegionMapIdFieldNumber = 1;
    private string regionMapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionMapId {
      get { return regionMapId_; }
      set {
        regionMapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_node_index" field.</summary>
    public const int RegionNodeIndexFieldNumber = 2;
    private int regionNodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RegionNodeIndex {
      get { return regionNodeIndex_; }
      set {
        regionNodeIndex_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 3;
    private ulong score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "total_exp" field.</summary>
    public const int TotalExpFieldNumber = 4;
    private int totalExp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalExp {
      get { return totalExp_; }
      set {
        totalExp_ = value;
      }
    }

    /// <summary>Field number for the "seed_area_multiplier" field.</summary>
    public const int SeedAreaMultiplierFieldNumber = 5;
    private float seedAreaMultiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SeedAreaMultiplier {
      get { return seedAreaMultiplier_; }
      set {
        seedAreaMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "seed_battle_multiplier" field.</summary>
    public const int SeedBattleMultiplierFieldNumber = 6;
    private float seedBattleMultiplier_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float SeedBattleMultiplier {
      get { return seedBattleMultiplier_; }
      set {
        seedBattleMultiplier_ = value;
      }
    }

    /// <summary>Field number for the "progress_data" field.</summary>
    public const int ProgressDataFieldNumber = 7;
    private global::Mobius.Proto.Game.ProtoBattleProgressData progressData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoBattleProgressData ProgressData {
      get { return progressData_; }
      set {
        progressData_ = value;
      }
    }

    /// <summary>Field number for the "card_progress_data" field.</summary>
    public const int CardProgressDataFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoCardProgressData> _repeated_cardProgressData_codec
        = pb::FieldCodec.ForMessage(66, global::Mobius.Proto.Game.ProtoCardProgressData.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardProgressData> cardProgressData_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardProgressData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoCardProgressData> CardProgressData {
      get { return cardProgressData_; }
    }

    /// <summary>Field number for the "item_rewards" field.</summary>
    public const int ItemRewardsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.TaggedBattleItemReward> _repeated_itemRewards_codec
        = pb::FieldCodec.ForMessage(74, global::Mobius.Proto.Game.TaggedBattleItemReward.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleItemReward> itemRewards_ = new pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleItemReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleItemReward> ItemRewards {
      get { return itemRewards_; }
    }

    /// <summary>Field number for the "card_rewards" field.</summary>
    public const int CardRewardsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.TaggedBattleCardReward> _repeated_cardRewards_codec
        = pb::FieldCodec.ForMessage(82, global::Mobius.Proto.Game.TaggedBattleCardReward.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleCardReward> cardRewards_ = new pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleCardReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleCardReward> CardRewards {
      get { return cardRewards_; }
    }

    /// <summary>Field number for the "companion_rewards" field.</summary>
    public const int CompanionRewardsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.TaggedBattleCompanionReward> _repeated_companionRewards_codec
        = pb::FieldCodec.ForMessage(122, global::Mobius.Proto.Game.TaggedBattleCompanionReward.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleCompanionReward> companionRewards_ = new pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleCompanionReward>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.TaggedBattleCompanionReward> CompanionRewards {
      get { return companionRewards_; }
    }

    /// <summary>Field number for the "pending_events" field.</summary>
    public const int PendingEventsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionNodeEvent> _repeated_pendingEvents_codec
        = pb::FieldCodec.ForMessage(90, global::Mobius.Proto.Game.ProtoRegionNodeEvent.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent> pendingEvents_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent> PendingEvents {
      get { return pendingEvents_; }
    }

    /// <summary>Field number for the "daily_mission_progress" field.</summary>
    public const int DailyMissionProgressFieldNumber = 12;
    private int dailyMissionProgress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DailyMissionProgress {
      get { return dailyMissionProgress_; }
      set {
        dailyMissionProgress_ = value;
      }
    }

    /// <summary>Field number for the "achievement_unlock" field.</summary>
    public const int AchievementUnlockFieldNumber = 13;
    private int achievementUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AchievementUnlock {
      get { return achievementUnlock_; }
      set {
        achievementUnlock_ = value;
      }
    }

    /// <summary>Field number for the "region_mission_progress" field.</summary>
    public const int RegionMissionProgressFieldNumber = 14;
    private static readonly pbc::MapField<string, int>.Codec _map_regionMissionProgress_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 114);
    private readonly pbc::MapField<string, int> regionMissionProgress_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> RegionMissionProgress {
      get { return regionMissionProgress_; }
    }

    /// <summary>Field number for the "wandering_fiend_movements" field.</summary>
    public const int WanderingFiendMovementsFieldNumber = 16;
    private static readonly pbc::MapField<string, int>.Codec _map_wanderingFiendMovements_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 130);
    private readonly pbc::MapField<string, int> wanderingFiendMovements_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> WanderingFiendMovements {
      get { return wanderingFiendMovements_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoLastBattleResults);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoLastBattleResults other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegionMapId != other.RegionMapId) return false;
      if (RegionNodeIndex != other.RegionNodeIndex) return false;
      if (Score != other.Score) return false;
      if (TotalExp != other.TotalExp) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SeedAreaMultiplier, other.SeedAreaMultiplier)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SeedBattleMultiplier, other.SeedBattleMultiplier)) return false;
      if (!object.Equals(ProgressData, other.ProgressData)) return false;
      if(!cardProgressData_.Equals(other.cardProgressData_)) return false;
      if(!itemRewards_.Equals(other.itemRewards_)) return false;
      if(!cardRewards_.Equals(other.cardRewards_)) return false;
      if(!companionRewards_.Equals(other.companionRewards_)) return false;
      if(!pendingEvents_.Equals(other.pendingEvents_)) return false;
      if (DailyMissionProgress != other.DailyMissionProgress) return false;
      if (AchievementUnlock != other.AchievementUnlock) return false;
      if (!RegionMissionProgress.Equals(other.RegionMissionProgress)) return false;
      if (!WanderingFiendMovements.Equals(other.WanderingFiendMovements)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegionMapId.Length != 0) hash ^= RegionMapId.GetHashCode();
      if (RegionNodeIndex != 0) hash ^= RegionNodeIndex.GetHashCode();
      if (Score != 0UL) hash ^= Score.GetHashCode();
      if (TotalExp != 0) hash ^= TotalExp.GetHashCode();
      if (SeedAreaMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SeedAreaMultiplier);
      if (SeedBattleMultiplier != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SeedBattleMultiplier);
      if (progressData_ != null) hash ^= ProgressData.GetHashCode();
      hash ^= cardProgressData_.GetHashCode();
      hash ^= itemRewards_.GetHashCode();
      hash ^= cardRewards_.GetHashCode();
      hash ^= companionRewards_.GetHashCode();
      hash ^= pendingEvents_.GetHashCode();
      if (DailyMissionProgress != 0) hash ^= DailyMissionProgress.GetHashCode();
      if (AchievementUnlock != 0) hash ^= AchievementUnlock.GetHashCode();
      hash ^= RegionMissionProgress.GetHashCode();
      hash ^= WanderingFiendMovements.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionMapId);
      }
      if (RegionNodeIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RegionNodeIndex);
      }
      if (Score != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Score);
      }
      if (TotalExp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalExp);
      }
      if (SeedAreaMultiplier != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SeedAreaMultiplier);
      }
      if (SeedBattleMultiplier != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(SeedBattleMultiplier);
      }
      if (progressData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ProgressData);
      }
      cardProgressData_.WriteTo(output, _repeated_cardProgressData_codec);
      itemRewards_.WriteTo(output, _repeated_itemRewards_codec);
      cardRewards_.WriteTo(output, _repeated_cardRewards_codec);
      pendingEvents_.WriteTo(output, _repeated_pendingEvents_codec);
      if (DailyMissionProgress != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(DailyMissionProgress);
      }
      if (AchievementUnlock != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AchievementUnlock);
      }
      regionMissionProgress_.WriteTo(output, _map_regionMissionProgress_codec);
      companionRewards_.WriteTo(output, _repeated_companionRewards_codec);
      wanderingFiendMovements_.WriteTo(output, _map_wanderingFiendMovements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegionMapId);
      }
      if (RegionNodeIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RegionNodeIndex);
      }
      if (Score != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Score);
      }
      if (TotalExp != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(TotalExp);
      }
      if (SeedAreaMultiplier != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SeedAreaMultiplier);
      }
      if (SeedBattleMultiplier != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(SeedBattleMultiplier);
      }
      if (progressData_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ProgressData);
      }
      cardProgressData_.WriteTo(ref output, _repeated_cardProgressData_codec);
      itemRewards_.WriteTo(ref output, _repeated_itemRewards_codec);
      cardRewards_.WriteTo(ref output, _repeated_cardRewards_codec);
      pendingEvents_.WriteTo(ref output, _repeated_pendingEvents_codec);
      if (DailyMissionProgress != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(DailyMissionProgress);
      }
      if (AchievementUnlock != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(AchievementUnlock);
      }
      regionMissionProgress_.WriteTo(ref output, _map_regionMissionProgress_codec);
      companionRewards_.WriteTo(ref output, _repeated_companionRewards_codec);
      wanderingFiendMovements_.WriteTo(ref output, _map_wanderingFiendMovements_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegionMapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionMapId);
      }
      if (RegionNodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegionNodeIndex);
      }
      if (Score != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Score);
      }
      if (TotalExp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalExp);
      }
      if (SeedAreaMultiplier != 0F) {
        size += 1 + 4;
      }
      if (SeedBattleMultiplier != 0F) {
        size += 1 + 4;
      }
      if (progressData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ProgressData);
      }
      size += cardProgressData_.CalculateSize(_repeated_cardProgressData_codec);
      size += itemRewards_.CalculateSize(_repeated_itemRewards_codec);
      size += cardRewards_.CalculateSize(_repeated_cardRewards_codec);
      size += companionRewards_.CalculateSize(_repeated_companionRewards_codec);
      size += pendingEvents_.CalculateSize(_repeated_pendingEvents_codec);
      if (DailyMissionProgress != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DailyMissionProgress);
      }
      if (AchievementUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AchievementUnlock);
      }
      size += regionMissionProgress_.CalculateSize(_map_regionMissionProgress_codec);
      size += wanderingFiendMovements_.CalculateSize(_map_wanderingFiendMovements_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoLastBattleResults other) {
      if (other == null) {
        return;
      }
      if (other.RegionMapId.Length != 0) {
        RegionMapId = other.RegionMapId;
      }
      if (other.RegionNodeIndex != 0) {
        RegionNodeIndex = other.RegionNodeIndex;
      }
      if (other.Score != 0UL) {
        Score = other.Score;
      }
      if (other.TotalExp != 0) {
        TotalExp = other.TotalExp;
      }
      if (other.SeedAreaMultiplier != 0F) {
        SeedAreaMultiplier = other.SeedAreaMultiplier;
      }
      if (other.SeedBattleMultiplier != 0F) {
        SeedBattleMultiplier = other.SeedBattleMultiplier;
      }
      if (other.progressData_ != null) {
        if (progressData_ == null) {
          ProgressData = new global::Mobius.Proto.Game.ProtoBattleProgressData();
        }
        ProgressData.MergeFrom(other.ProgressData);
      }
      cardProgressData_.Add(other.cardProgressData_);
      itemRewards_.Add(other.itemRewards_);
      cardRewards_.Add(other.cardRewards_);
      companionRewards_.Add(other.companionRewards_);
      pendingEvents_.Add(other.pendingEvents_);
      if (other.DailyMissionProgress != 0) {
        DailyMissionProgress = other.DailyMissionProgress;
      }
      if (other.AchievementUnlock != 0) {
        AchievementUnlock = other.AchievementUnlock;
      }
      regionMissionProgress_.Add(other.regionMissionProgress_);
      wanderingFiendMovements_.Add(other.wanderingFiendMovements_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RegionMapId = input.ReadString();
            break;
          }
          case 16: {
            RegionNodeIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadUInt64();
            break;
          }
          case 32: {
            TotalExp = input.ReadInt32();
            break;
          }
          case 45: {
            SeedAreaMultiplier = input.ReadFloat();
            break;
          }
          case 53: {
            SeedBattleMultiplier = input.ReadFloat();
            break;
          }
          case 58: {
            if (progressData_ == null) {
              ProgressData = new global::Mobius.Proto.Game.ProtoBattleProgressData();
            }
            input.ReadMessage(ProgressData);
            break;
          }
          case 66: {
            cardProgressData_.AddEntriesFrom(input, _repeated_cardProgressData_codec);
            break;
          }
          case 74: {
            itemRewards_.AddEntriesFrom(input, _repeated_itemRewards_codec);
            break;
          }
          case 82: {
            cardRewards_.AddEntriesFrom(input, _repeated_cardRewards_codec);
            break;
          }
          case 90: {
            pendingEvents_.AddEntriesFrom(input, _repeated_pendingEvents_codec);
            break;
          }
          case 96: {
            DailyMissionProgress = input.ReadInt32();
            break;
          }
          case 104: {
            AchievementUnlock = input.ReadInt32();
            break;
          }
          case 114: {
            regionMissionProgress_.AddEntriesFrom(input, _map_regionMissionProgress_codec);
            break;
          }
          case 122: {
            companionRewards_.AddEntriesFrom(input, _repeated_companionRewards_codec);
            break;
          }
          case 130: {
            wanderingFiendMovements_.AddEntriesFrom(input, _map_wanderingFiendMovements_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            RegionMapId = input.ReadString();
            break;
          }
          case 16: {
            RegionNodeIndex = input.ReadInt32();
            break;
          }
          case 24: {
            Score = input.ReadUInt64();
            break;
          }
          case 32: {
            TotalExp = input.ReadInt32();
            break;
          }
          case 45: {
            SeedAreaMultiplier = input.ReadFloat();
            break;
          }
          case 53: {
            SeedBattleMultiplier = input.ReadFloat();
            break;
          }
          case 58: {
            if (progressData_ == null) {
              ProgressData = new global::Mobius.Proto.Game.ProtoBattleProgressData();
            }
            input.ReadMessage(ProgressData);
            break;
          }
          case 66: {
            cardProgressData_.AddEntriesFrom(ref input, _repeated_cardProgressData_codec);
            break;
          }
          case 74: {
            itemRewards_.AddEntriesFrom(ref input, _repeated_itemRewards_codec);
            break;
          }
          case 82: {
            cardRewards_.AddEntriesFrom(ref input, _repeated_cardRewards_codec);
            break;
          }
          case 90: {
            pendingEvents_.AddEntriesFrom(ref input, _repeated_pendingEvents_codec);
            break;
          }
          case 96: {
            DailyMissionProgress = input.ReadInt32();
            break;
          }
          case 104: {
            AchievementUnlock = input.ReadInt32();
            break;
          }
          case 114: {
            regionMissionProgress_.AddEntriesFrom(ref input, _map_regionMissionProgress_codec);
            break;
          }
          case 122: {
            companionRewards_.AddEntriesFrom(ref input, _repeated_companionRewards_codec);
            break;
          }
          case 130: {
            wanderingFiendMovements_.AddEntriesFrom(ref input, _map_wanderingFiendMovements_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaggedBattleItemReward : pb::IMessage<TaggedBattleItemReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaggedBattleItemReward> _parser = new pb::MessageParser<TaggedBattleItemReward>(() => new TaggedBattleItemReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaggedBattleItemReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleItemReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleItemReward(TaggedBattleItemReward other) : this() {
      itemId_ = other.itemId_;
      quantity_ = other.quantity_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleItemReward Clone() {
      return new TaggedBattleItemReward(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private string itemId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemId {
      get { return itemId_; }
      set {
        itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 3;
    private int tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaggedBattleItemReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaggedBattleItemReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Quantity != other.Quantity) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (Tag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (Tag != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (Tag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaggedBattleItemReward other) {
      if (other == null) {
        return;
      }
      if (other.ItemId.Length != 0) {
        ItemId = other.ItemId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 24: {
            Tag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
          case 24: {
            Tag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaggedBattleCardReward : pb::IMessage<TaggedBattleCardReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaggedBattleCardReward> _parser = new pb::MessageParser<TaggedBattleCardReward>(() => new TaggedBattleCardReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaggedBattleCardReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleCardReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleCardReward(TaggedBattleCardReward other) : this() {
      instanceId_ = other.instanceId_;
      abilityCardId_ = other.abilityCardId_;
      newCard_ = other.newCard_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleCardReward Clone() {
      return new TaggedBattleCardReward(this);
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 1;
    private string instanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_card_id" field.</summary>
    public const int AbilityCardIdFieldNumber = 2;
    private string abilityCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbilityCardId {
      get { return abilityCardId_; }
      set {
        abilityCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "new_card" field.</summary>
    public const int NewCardFieldNumber = 3;
    private bool newCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NewCard {
      get { return newCard_; }
      set {
        newCard_ = value;
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 4;
    private int tag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Tag {
      get { return tag_; }
      set {
        tag_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaggedBattleCardReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaggedBattleCardReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstanceId != other.InstanceId) return false;
      if (AbilityCardId != other.AbilityCardId) return false;
      if (NewCard != other.NewCard) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (AbilityCardId.Length != 0) hash ^= AbilityCardId.GetHashCode();
      if (NewCard != false) hash ^= NewCard.GetHashCode();
      if (Tag != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceId);
      }
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AbilityCardId);
      }
      if (NewCard != false) {
        output.WriteRawTag(24);
        output.WriteBool(NewCard);
      }
      if (Tag != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceId);
      }
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AbilityCardId);
      }
      if (NewCard != false) {
        output.WriteRawTag(24);
        output.WriteBool(NewCard);
      }
      if (Tag != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (AbilityCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityCardId);
      }
      if (NewCard != false) {
        size += 1 + 1;
      }
      if (Tag != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaggedBattleCardReward other) {
      if (other == null) {
        return;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.AbilityCardId.Length != 0) {
        AbilityCardId = other.AbilityCardId;
      }
      if (other.NewCard != false) {
        NewCard = other.NewCard;
      }
      if (other.Tag != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstanceId = input.ReadString();
            break;
          }
          case 18: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 24: {
            NewCard = input.ReadBool();
            break;
          }
          case 32: {
            Tag = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InstanceId = input.ReadString();
            break;
          }
          case 18: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 24: {
            NewCard = input.ReadBool();
            break;
          }
          case 32: {
            Tag = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TaggedBattleCompanionReward : pb::IMessage<TaggedBattleCompanionReward>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TaggedBattleCompanionReward> _parser = new pb::MessageParser<TaggedBattleCompanionReward>(() => new TaggedBattleCompanionReward());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TaggedBattleCompanionReward> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleCompanionReward() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleCompanionReward(TaggedBattleCompanionReward other) : this() {
      companionId_ = other.companionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TaggedBattleCompanionReward Clone() {
      return new TaggedBattleCompanionReward(this);
    }

    /// <summary>Field number for the "companion_id" field.</summary>
    public const int CompanionIdFieldNumber = 1;
    private string companionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanionId {
      get { return companionId_; }
      set {
        companionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TaggedBattleCompanionReward);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TaggedBattleCompanionReward other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CompanionId != other.CompanionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CompanionId.Length != 0) hash ^= CompanionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CompanionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CompanionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CompanionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CompanionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TaggedBattleCompanionReward other) {
      if (other == null) {
        return;
      }
      if (other.CompanionId.Length != 0) {
        CompanionId = other.CompanionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CompanionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CompanionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoMailBox : pb::IMessage<ProtoMailBox>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoMailBox> _parser = new pb::MessageParser<ProtoMailBox>(() => new ProtoMailBox());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoMailBox> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailBox() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailBox(ProtoMailBox other) : this() {
      items_ = other.items_.Clone();
      maxItems_ = other.maxItems_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailBox Clone() {
      return new ProtoMailBox(this);
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoMailBoxItem> _repeated_items_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoMailBoxItem.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoMailBoxItem> items_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoMailBoxItem>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoMailBoxItem> Items {
      get { return items_; }
    }

    /// <summary>Field number for the "max_items" field.</summary>
    public const int MaxItemsFieldNumber = 2;
    private int maxItems_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MaxItems {
      get { return maxItems_; }
      set {
        maxItems_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoMailBox);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoMailBox other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!items_.Equals(other.items_)) return false;
      if (MaxItems != other.MaxItems) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= items_.GetHashCode();
      if (MaxItems != 0) hash ^= MaxItems.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      items_.WriteTo(output, _repeated_items_codec);
      if (MaxItems != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxItems);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      items_.WriteTo(ref output, _repeated_items_codec);
      if (MaxItems != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(MaxItems);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += items_.CalculateSize(_repeated_items_codec);
      if (MaxItems != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MaxItems);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoMailBox other) {
      if (other == null) {
        return;
      }
      items_.Add(other.items_);
      if (other.MaxItems != 0) {
        MaxItems = other.MaxItems;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            items_.AddEntriesFrom(input, _repeated_items_codec);
            break;
          }
          case 16: {
            MaxItems = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            items_.AddEntriesFrom(ref input, _repeated_items_codec);
            break;
          }
          case 16: {
            MaxItems = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoMailBoxItem : pb::IMessage<ProtoMailBoxItem>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoMailBoxItem> _parser = new pb::MessageParser<ProtoMailBoxItem>(() => new ProtoMailBoxItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoMailBoxItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailBoxItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailBoxItem(ProtoMailBoxItem other) : this() {
      id_ = other.id_;
      referenceId_ = other.referenceId_;
      source_ = other.source_;
      quantity_ = other.quantity_;
      receivedAt_ = other.receivedAt_;
      claimSource_ = other.claimSource_;
      confirmed_ = other.confirmed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailBoxItem Clone() {
      return new ProtoMailBoxItem(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reference_id" field.</summary>
    public const int ReferenceIdFieldNumber = 2;
    private string referenceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferenceId {
      get { return referenceId_; }
      set {
        referenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source" field.</summary>
    public const int SourceFieldNumber = 3;
    private global::Mobius.Proto.Game.ReferenceSource source_ = global::Mobius.Proto.Game.ReferenceSource.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ReferenceSource Source {
      get { return source_; }
      set {
        source_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 4;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "received_at" field.</summary>
    public const int ReceivedAtFieldNumber = 5;
    private long receivedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ReceivedAt {
      get { return receivedAt_; }
      set {
        receivedAt_ = value;
      }
    }

    /// <summary>Field number for the "claim_source" field.</summary>
    public const int ClaimSourceFieldNumber = 6;
    private string claimSource_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClaimSource {
      get { return claimSource_; }
      set {
        claimSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "confirmed" field.</summary>
    public const int ConfirmedFieldNumber = 7;
    private bool confirmed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Confirmed {
      get { return confirmed_; }
      set {
        confirmed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoMailBoxItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoMailBoxItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ReferenceId != other.ReferenceId) return false;
      if (Source != other.Source) return false;
      if (Quantity != other.Quantity) return false;
      if (ReceivedAt != other.ReceivedAt) return false;
      if (ClaimSource != other.ClaimSource) return false;
      if (Confirmed != other.Confirmed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ReferenceId.Length != 0) hash ^= ReferenceId.GetHashCode();
      if (Source != global::Mobius.Proto.Game.ReferenceSource.None) hash ^= Source.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (ReceivedAt != 0L) hash ^= ReceivedAt.GetHashCode();
      if (ClaimSource.Length != 0) hash ^= ClaimSource.GetHashCode();
      if (Confirmed != false) hash ^= Confirmed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ReferenceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReferenceId);
      }
      if (Source != global::Mobius.Proto.Game.ReferenceSource.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Source);
      }
      if (Quantity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Quantity);
      }
      if (ReceivedAt != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ReceivedAt);
      }
      if (ClaimSource.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ClaimSource);
      }
      if (Confirmed != false) {
        output.WriteRawTag(56);
        output.WriteBool(Confirmed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ReferenceId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReferenceId);
      }
      if (Source != global::Mobius.Proto.Game.ReferenceSource.None) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Source);
      }
      if (Quantity != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Quantity);
      }
      if (ReceivedAt != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(ReceivedAt);
      }
      if (ClaimSource.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ClaimSource);
      }
      if (Confirmed != false) {
        output.WriteRawTag(56);
        output.WriteBool(Confirmed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ReferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferenceId);
      }
      if (Source != global::Mobius.Proto.Game.ReferenceSource.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Source);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (ReceivedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ReceivedAt);
      }
      if (ClaimSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClaimSource);
      }
      if (Confirmed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoMailBoxItem other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ReferenceId.Length != 0) {
        ReferenceId = other.ReferenceId;
      }
      if (other.Source != global::Mobius.Proto.Game.ReferenceSource.None) {
        Source = other.Source;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      if (other.ReceivedAt != 0L) {
        ReceivedAt = other.ReceivedAt;
      }
      if (other.ClaimSource.Length != 0) {
        ClaimSource = other.ClaimSource;
      }
      if (other.Confirmed != false) {
        Confirmed = other.Confirmed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ReferenceId = input.ReadString();
            break;
          }
          case 24: {
            Source = (global::Mobius.Proto.Game.ReferenceSource) input.ReadEnum();
            break;
          }
          case 32: {
            Quantity = input.ReadInt32();
            break;
          }
          case 40: {
            ReceivedAt = input.ReadInt64();
            break;
          }
          case 50: {
            ClaimSource = input.ReadString();
            break;
          }
          case 56: {
            Confirmed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ReferenceId = input.ReadString();
            break;
          }
          case 24: {
            Source = (global::Mobius.Proto.Game.ReferenceSource) input.ReadEnum();
            break;
          }
          case 32: {
            Quantity = input.ReadInt32();
            break;
          }
          case 40: {
            ReceivedAt = input.ReadInt64();
            break;
          }
          case 50: {
            ClaimSource = input.ReadString();
            break;
          }
          case 56: {
            Confirmed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerDeckCollection : pb::IMessage<ProtoPlayerDeckCollection>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerDeckCollection> _parser = new pb::MessageParser<ProtoPlayerDeckCollection>(() => new ProtoPlayerDeckCollection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerDeckCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeckCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeckCollection(ProtoPlayerDeckCollection other) : this() {
      currentDeckIndex_ = other.currentDeckIndex_;
      decks_ = other.decks_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeckCollection Clone() {
      return new ProtoPlayerDeckCollection(this);
    }

    /// <summary>Field number for the "current_deck_index" field.</summary>
    public const int CurrentDeckIndexFieldNumber = 1;
    private int currentDeckIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentDeckIndex {
      get { return currentDeckIndex_; }
      set {
        currentDeckIndex_ = value;
      }
    }

    /// <summary>Field number for the "decks" field.</summary>
    public const int DecksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoPlayerDeck> _repeated_decks_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoPlayerDeck.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeck> decks_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeck>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeck> Decks {
      get { return decks_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerDeckCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerDeckCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentDeckIndex != other.CurrentDeckIndex) return false;
      if(!decks_.Equals(other.decks_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentDeckIndex != 0) hash ^= CurrentDeckIndex.GetHashCode();
      hash ^= decks_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentDeckIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentDeckIndex);
      }
      decks_.WriteTo(output, _repeated_decks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentDeckIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(CurrentDeckIndex);
      }
      decks_.WriteTo(ref output, _repeated_decks_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentDeckIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentDeckIndex);
      }
      size += decks_.CalculateSize(_repeated_decks_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerDeckCollection other) {
      if (other == null) {
        return;
      }
      if (other.CurrentDeckIndex != 0) {
        CurrentDeckIndex = other.CurrentDeckIndex;
      }
      decks_.Add(other.decks_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentDeckIndex = input.ReadInt32();
            break;
          }
          case 18: {
            decks_.AddEntriesFrom(input, _repeated_decks_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrentDeckIndex = input.ReadInt32();
            break;
          }
          case 18: {
            decks_.AddEntriesFrom(ref input, _repeated_decks_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerDeck : pb::IMessage<ProtoPlayerDeck>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerDeck> _parser = new pb::MessageParser<ProtoPlayerDeck>(() => new ProtoPlayerDeck());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerDeck> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeck() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeck(ProtoPlayerDeck other) : this() {
      jobCardIndex_ = other.jobCardIndex_;
      subJobCardIndex_ = other.subJobCardIndex_;
      abilityCardSlots_ = other.abilityCardSlots_.Clone();
      subAbilityCardSlots_ = other.subAbilityCardSlots_.Clone();
      weaponIndex_ = other.weaponIndex_;
      subWeaponIndex_ = other.subWeaponIndex_;
      deckIndex_ = other.deckIndex_;
      jobCardSubIndex_ = other.jobCardSubIndex_;
      subJobCardSubIndex_ = other.subJobCardSubIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeck Clone() {
      return new ProtoPlayerDeck(this);
    }

    /// <summary>Field number for the "job_card_index" field.</summary>
    public const int JobCardIndexFieldNumber = 1;
    private int jobCardIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JobCardIndex {
      get { return jobCardIndex_; }
      set {
        jobCardIndex_ = value;
      }
    }

    /// <summary>Field number for the "sub_job_card_index" field.</summary>
    public const int SubJobCardIndexFieldNumber = 2;
    private int subJobCardIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubJobCardIndex {
      get { return subJobCardIndex_; }
      set {
        subJobCardIndex_ = value;
      }
    }

    /// <summary>Field number for the "ability_card_slots" field.</summary>
    public const int AbilityCardSlotsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoPlayerDeckSlot> _repeated_abilityCardSlots_codec
        = pb::FieldCodec.ForMessage(26, global::Mobius.Proto.Game.ProtoPlayerDeckSlot.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeckSlot> abilityCardSlots_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeckSlot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeckSlot> AbilityCardSlots {
      get { return abilityCardSlots_; }
    }

    /// <summary>Field number for the "sub_ability_card_slots" field.</summary>
    public const int SubAbilityCardSlotsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoPlayerDeckSlot> _repeated_subAbilityCardSlots_codec
        = pb::FieldCodec.ForMessage(34, global::Mobius.Proto.Game.ProtoPlayerDeckSlot.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeckSlot> subAbilityCardSlots_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeckSlot>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoPlayerDeckSlot> SubAbilityCardSlots {
      get { return subAbilityCardSlots_; }
    }

    /// <summary>Field number for the "weapon_index" field.</summary>
    public const int WeaponIndexFieldNumber = 5;
    private int weaponIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WeaponIndex {
      get { return weaponIndex_; }
      set {
        weaponIndex_ = value;
      }
    }

    /// <summary>Field number for the "sub_weapon_index" field.</summary>
    public const int SubWeaponIndexFieldNumber = 6;
    private int subWeaponIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubWeaponIndex {
      get { return subWeaponIndex_; }
      set {
        subWeaponIndex_ = value;
      }
    }

    /// <summary>Field number for the "deck_index" field.</summary>
    public const int DeckIndexFieldNumber = 7;
    private int deckIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeckIndex {
      get { return deckIndex_; }
      set {
        deckIndex_ = value;
      }
    }

    /// <summary>Field number for the "job_card_sub_index" field.</summary>
    public const int JobCardSubIndexFieldNumber = 8;
    private int jobCardSubIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int JobCardSubIndex {
      get { return jobCardSubIndex_; }
      set {
        jobCardSubIndex_ = value;
      }
    }

    /// <summary>Field number for the "sub_job_card_sub_index" field.</summary>
    public const int SubJobCardSubIndexFieldNumber = 9;
    private int subJobCardSubIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubJobCardSubIndex {
      get { return subJobCardSubIndex_; }
      set {
        subJobCardSubIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerDeck);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerDeck other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobCardIndex != other.JobCardIndex) return false;
      if (SubJobCardIndex != other.SubJobCardIndex) return false;
      if(!abilityCardSlots_.Equals(other.abilityCardSlots_)) return false;
      if(!subAbilityCardSlots_.Equals(other.subAbilityCardSlots_)) return false;
      if (WeaponIndex != other.WeaponIndex) return false;
      if (SubWeaponIndex != other.SubWeaponIndex) return false;
      if (DeckIndex != other.DeckIndex) return false;
      if (JobCardSubIndex != other.JobCardSubIndex) return false;
      if (SubJobCardSubIndex != other.SubJobCardSubIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobCardIndex != 0) hash ^= JobCardIndex.GetHashCode();
      if (SubJobCardIndex != 0) hash ^= SubJobCardIndex.GetHashCode();
      hash ^= abilityCardSlots_.GetHashCode();
      hash ^= subAbilityCardSlots_.GetHashCode();
      if (WeaponIndex != 0) hash ^= WeaponIndex.GetHashCode();
      if (SubWeaponIndex != 0) hash ^= SubWeaponIndex.GetHashCode();
      if (DeckIndex != 0) hash ^= DeckIndex.GetHashCode();
      if (JobCardSubIndex != 0) hash ^= JobCardSubIndex.GetHashCode();
      if (SubJobCardSubIndex != 0) hash ^= SubJobCardSubIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JobCardIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(JobCardIndex);
      }
      if (SubJobCardIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubJobCardIndex);
      }
      abilityCardSlots_.WriteTo(output, _repeated_abilityCardSlots_codec);
      subAbilityCardSlots_.WriteTo(output, _repeated_subAbilityCardSlots_codec);
      if (WeaponIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WeaponIndex);
      }
      if (SubWeaponIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SubWeaponIndex);
      }
      if (DeckIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DeckIndex);
      }
      if (JobCardSubIndex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(JobCardSubIndex);
      }
      if (SubJobCardSubIndex != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SubJobCardSubIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JobCardIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(JobCardIndex);
      }
      if (SubJobCardIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubJobCardIndex);
      }
      abilityCardSlots_.WriteTo(ref output, _repeated_abilityCardSlots_codec);
      subAbilityCardSlots_.WriteTo(ref output, _repeated_subAbilityCardSlots_codec);
      if (WeaponIndex != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(WeaponIndex);
      }
      if (SubWeaponIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SubWeaponIndex);
      }
      if (DeckIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DeckIndex);
      }
      if (JobCardSubIndex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(JobCardSubIndex);
      }
      if (SubJobCardSubIndex != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(SubJobCardSubIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobCardIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JobCardIndex);
      }
      if (SubJobCardIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubJobCardIndex);
      }
      size += abilityCardSlots_.CalculateSize(_repeated_abilityCardSlots_codec);
      size += subAbilityCardSlots_.CalculateSize(_repeated_subAbilityCardSlots_codec);
      if (WeaponIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WeaponIndex);
      }
      if (SubWeaponIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubWeaponIndex);
      }
      if (DeckIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeckIndex);
      }
      if (JobCardSubIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(JobCardSubIndex);
      }
      if (SubJobCardSubIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubJobCardSubIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerDeck other) {
      if (other == null) {
        return;
      }
      if (other.JobCardIndex != 0) {
        JobCardIndex = other.JobCardIndex;
      }
      if (other.SubJobCardIndex != 0) {
        SubJobCardIndex = other.SubJobCardIndex;
      }
      abilityCardSlots_.Add(other.abilityCardSlots_);
      subAbilityCardSlots_.Add(other.subAbilityCardSlots_);
      if (other.WeaponIndex != 0) {
        WeaponIndex = other.WeaponIndex;
      }
      if (other.SubWeaponIndex != 0) {
        SubWeaponIndex = other.SubWeaponIndex;
      }
      if (other.DeckIndex != 0) {
        DeckIndex = other.DeckIndex;
      }
      if (other.JobCardSubIndex != 0) {
        JobCardSubIndex = other.JobCardSubIndex;
      }
      if (other.SubJobCardSubIndex != 0) {
        SubJobCardSubIndex = other.SubJobCardSubIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            JobCardIndex = input.ReadInt32();
            break;
          }
          case 16: {
            SubJobCardIndex = input.ReadInt32();
            break;
          }
          case 26: {
            abilityCardSlots_.AddEntriesFrom(input, _repeated_abilityCardSlots_codec);
            break;
          }
          case 34: {
            subAbilityCardSlots_.AddEntriesFrom(input, _repeated_subAbilityCardSlots_codec);
            break;
          }
          case 40: {
            WeaponIndex = input.ReadInt32();
            break;
          }
          case 48: {
            SubWeaponIndex = input.ReadInt32();
            break;
          }
          case 56: {
            DeckIndex = input.ReadInt32();
            break;
          }
          case 64: {
            JobCardSubIndex = input.ReadInt32();
            break;
          }
          case 72: {
            SubJobCardSubIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            JobCardIndex = input.ReadInt32();
            break;
          }
          case 16: {
            SubJobCardIndex = input.ReadInt32();
            break;
          }
          case 26: {
            abilityCardSlots_.AddEntriesFrom(ref input, _repeated_abilityCardSlots_codec);
            break;
          }
          case 34: {
            subAbilityCardSlots_.AddEntriesFrom(ref input, _repeated_subAbilityCardSlots_codec);
            break;
          }
          case 40: {
            WeaponIndex = input.ReadInt32();
            break;
          }
          case 48: {
            SubWeaponIndex = input.ReadInt32();
            break;
          }
          case 56: {
            DeckIndex = input.ReadInt32();
            break;
          }
          case 64: {
            JobCardSubIndex = input.ReadInt32();
            break;
          }
          case 72: {
            SubJobCardSubIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerDeckSlot : pb::IMessage<ProtoPlayerDeckSlot>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerDeckSlot> _parser = new pb::MessageParser<ProtoPlayerDeckSlot>(() => new ProtoPlayerDeckSlot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerDeckSlot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeckSlot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeckSlot(ProtoPlayerDeckSlot other) : this() {
      abilityCardId_ = other.abilityCardId_;
      slotIndex_ = other.slotIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerDeckSlot Clone() {
      return new ProtoPlayerDeckSlot(this);
    }

    /// <summary>Field number for the "ability_card_id" field.</summary>
    public const int AbilityCardIdFieldNumber = 1;
    private string abilityCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbilityCardId {
      get { return abilityCardId_; }
      set {
        abilityCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slot_index" field.</summary>
    public const int SlotIndexFieldNumber = 2;
    private int slotIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotIndex {
      get { return slotIndex_; }
      set {
        slotIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerDeckSlot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerDeckSlot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityCardId != other.AbilityCardId) return false;
      if (SlotIndex != other.SlotIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AbilityCardId.Length != 0) hash ^= AbilityCardId.GetHashCode();
      if (SlotIndex != 0) hash ^= SlotIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbilityCardId);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SlotIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbilityCardId);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SlotIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AbilityCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityCardId);
      }
      if (SlotIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerDeckSlot other) {
      if (other == null) {
        return;
      }
      if (other.AbilityCardId.Length != 0) {
        AbilityCardId = other.AbilityCardId;
      }
      if (other.SlotIndex != 0) {
        SlotIndex = other.SlotIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 16: {
            SlotIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 16: {
            SlotIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerStamina : pb::IMessage<ProtoPlayerStamina>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerStamina> _parser = new pb::MessageParser<ProtoPlayerStamina>(() => new ProtoPlayerStamina());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerStamina> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerStamina() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerStamina(ProtoPlayerStamina other) : this() {
      currentStamina_ = other.currentStamina_;
      maxStamina_ = other.maxStamina_;
      staminaDec_ = other.staminaDec_;
      currentMpStamina_ = other.currentMpStamina_;
      maxMpStamina_ = other.maxMpStamina_;
      mpStaminaDec_ = other.mpStaminaDec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerStamina Clone() {
      return new ProtoPlayerStamina(this);
    }

    /// <summary>Field number for the "current_stamina" field.</summary>
    public const int CurrentStaminaFieldNumber = 1;
    private uint currentStamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CurrentStamina {
      get { return currentStamina_; }
      set {
        currentStamina_ = value;
      }
    }

    /// <summary>Field number for the "max_stamina" field.</summary>
    public const int MaxStaminaFieldNumber = 2;
    private uint maxStamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxStamina {
      get { return maxStamina_; }
      set {
        maxStamina_ = value;
      }
    }

    /// <summary>Field number for the "stamina_dec" field.</summary>
    public const int StaminaDecFieldNumber = 3;
    private ulong staminaDec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong StaminaDec {
      get { return staminaDec_; }
      set {
        staminaDec_ = value;
      }
    }

    /// <summary>Field number for the "current_mp_stamina" field.</summary>
    public const int CurrentMpStaminaFieldNumber = 4;
    private uint currentMpStamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint CurrentMpStamina {
      get { return currentMpStamina_; }
      set {
        currentMpStamina_ = value;
      }
    }

    /// <summary>Field number for the "max_mp_stamina" field.</summary>
    public const int MaxMpStaminaFieldNumber = 5;
    private uint maxMpStamina_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MaxMpStamina {
      get { return maxMpStamina_; }
      set {
        maxMpStamina_ = value;
      }
    }

    /// <summary>Field number for the "mp_stamina_dec" field.</summary>
    public const int MpStaminaDecFieldNumber = 6;
    private ulong mpStaminaDec_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong MpStaminaDec {
      get { return mpStaminaDec_; }
      set {
        mpStaminaDec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerStamina);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerStamina other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentStamina != other.CurrentStamina) return false;
      if (MaxStamina != other.MaxStamina) return false;
      if (StaminaDec != other.StaminaDec) return false;
      if (CurrentMpStamina != other.CurrentMpStamina) return false;
      if (MaxMpStamina != other.MaxMpStamina) return false;
      if (MpStaminaDec != other.MpStaminaDec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentStamina != 0) hash ^= CurrentStamina.GetHashCode();
      if (MaxStamina != 0) hash ^= MaxStamina.GetHashCode();
      if (StaminaDec != 0UL) hash ^= StaminaDec.GetHashCode();
      if (CurrentMpStamina != 0) hash ^= CurrentMpStamina.GetHashCode();
      if (MaxMpStamina != 0) hash ^= MaxMpStamina.GetHashCode();
      if (MpStaminaDec != 0UL) hash ^= MpStaminaDec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentStamina != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CurrentStamina);
      }
      if (MaxStamina != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxStamina);
      }
      if (StaminaDec != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(StaminaDec);
      }
      if (CurrentMpStamina != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CurrentMpStamina);
      }
      if (MaxMpStamina != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxMpStamina);
      }
      if (MpStaminaDec != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(MpStaminaDec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentStamina != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(CurrentStamina);
      }
      if (MaxStamina != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(MaxStamina);
      }
      if (StaminaDec != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(StaminaDec);
      }
      if (CurrentMpStamina != 0) {
        output.WriteRawTag(32);
        output.WriteUInt32(CurrentMpStamina);
      }
      if (MaxMpStamina != 0) {
        output.WriteRawTag(40);
        output.WriteUInt32(MaxMpStamina);
      }
      if (MpStaminaDec != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(MpStaminaDec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentStamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentStamina);
      }
      if (MaxStamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxStamina);
      }
      if (StaminaDec != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(StaminaDec);
      }
      if (CurrentMpStamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(CurrentMpStamina);
      }
      if (MaxMpStamina != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MaxMpStamina);
      }
      if (MpStaminaDec != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MpStaminaDec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerStamina other) {
      if (other == null) {
        return;
      }
      if (other.CurrentStamina != 0) {
        CurrentStamina = other.CurrentStamina;
      }
      if (other.MaxStamina != 0) {
        MaxStamina = other.MaxStamina;
      }
      if (other.StaminaDec != 0UL) {
        StaminaDec = other.StaminaDec;
      }
      if (other.CurrentMpStamina != 0) {
        CurrentMpStamina = other.CurrentMpStamina;
      }
      if (other.MaxMpStamina != 0) {
        MaxMpStamina = other.MaxMpStamina;
      }
      if (other.MpStaminaDec != 0UL) {
        MpStaminaDec = other.MpStaminaDec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CurrentStamina = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxStamina = input.ReadUInt32();
            break;
          }
          case 24: {
            StaminaDec = input.ReadUInt64();
            break;
          }
          case 32: {
            CurrentMpStamina = input.ReadUInt32();
            break;
          }
          case 40: {
            MaxMpStamina = input.ReadUInt32();
            break;
          }
          case 48: {
            MpStaminaDec = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CurrentStamina = input.ReadUInt32();
            break;
          }
          case 16: {
            MaxStamina = input.ReadUInt32();
            break;
          }
          case 24: {
            StaminaDec = input.ReadUInt64();
            break;
          }
          case 32: {
            CurrentMpStamina = input.ReadUInt32();
            break;
          }
          case 40: {
            MaxMpStamina = input.ReadUInt32();
            break;
          }
          case 48: {
            MpStaminaDec = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionMapData : pb::IMessage<ProtoRegionMapData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionMapData> _parser = new pb::MessageParser<ProtoRegionMapData>(() => new ProtoRegionMapData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionMapData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapData(ProtoRegionMapData other) : this() {
      currentMapId_ = other.currentMapId_;
      regionMaps_ = other.regionMaps_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapData Clone() {
      return new ProtoRegionMapData(this);
    }

    /// <summary>Field number for the "current_map_id" field.</summary>
    public const int CurrentMapIdFieldNumber = 1;
    private string currentMapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentMapId {
      get { return currentMapId_; }
      set {
        currentMapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_maps" field.</summary>
    public const int RegionMapsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionMapInstance> _repeated_regionMaps_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoRegionMapInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMapInstance> regionMaps_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMapInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMapInstance> RegionMaps {
      get { return regionMaps_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionMapData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionMapData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentMapId != other.CurrentMapId) return false;
      if(!regionMaps_.Equals(other.regionMaps_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentMapId.Length != 0) hash ^= CurrentMapId.GetHashCode();
      hash ^= regionMaps_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentMapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrentMapId);
      }
      regionMaps_.WriteTo(output, _repeated_regionMaps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentMapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrentMapId);
      }
      regionMaps_.WriteTo(ref output, _repeated_regionMaps_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentMapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentMapId);
      }
      size += regionMaps_.CalculateSize(_repeated_regionMaps_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionMapData other) {
      if (other == null) {
        return;
      }
      if (other.CurrentMapId.Length != 0) {
        CurrentMapId = other.CurrentMapId;
      }
      regionMaps_.Add(other.regionMaps_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CurrentMapId = input.ReadString();
            break;
          }
          case 18: {
            regionMaps_.AddEntriesFrom(input, _repeated_regionMaps_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CurrentMapId = input.ReadString();
            break;
          }
          case 18: {
            regionMaps_.AddEntriesFrom(ref input, _repeated_regionMaps_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionHeaderData : pb::IMessage<ProtoRegionHeaderData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionHeaderData> _parser = new pb::MessageParser<ProtoRegionHeaderData>(() => new ProtoRegionHeaderData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionHeaderData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionHeaderData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionHeaderData(ProtoRegionHeaderData other) : this() {
      currentMapId_ = other.currentMapId_;
      currentNodeIndex_ = other.currentNodeIndex_;
      headers_ = other.headers_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionHeaderData Clone() {
      return new ProtoRegionHeaderData(this);
    }

    /// <summary>Field number for the "current_map_id" field.</summary>
    public const int CurrentMapIdFieldNumber = 1;
    private string currentMapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CurrentMapId {
      get { return currentMapId_; }
      set {
        currentMapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "current_node_index" field.</summary>
    public const int CurrentNodeIndexFieldNumber = 2;
    private int currentNodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentNodeIndex {
      get { return currentNodeIndex_; }
      set {
        currentNodeIndex_ = value;
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionMapHeader> _repeated_headers_codec
        = pb::FieldCodec.ForMessage(26, global::Mobius.Proto.Game.ProtoRegionMapHeader.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMapHeader> headers_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMapHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMapHeader> Headers {
      get { return headers_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionHeaderData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionHeaderData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CurrentMapId != other.CurrentMapId) return false;
      if (CurrentNodeIndex != other.CurrentNodeIndex) return false;
      if(!headers_.Equals(other.headers_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CurrentMapId.Length != 0) hash ^= CurrentMapId.GetHashCode();
      if (CurrentNodeIndex != 0) hash ^= CurrentNodeIndex.GetHashCode();
      hash ^= headers_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CurrentMapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrentMapId);
      }
      if (CurrentNodeIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentNodeIndex);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CurrentMapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CurrentMapId);
      }
      if (CurrentNodeIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CurrentNodeIndex);
      }
      headers_.WriteTo(ref output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CurrentMapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CurrentMapId);
      }
      if (CurrentNodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentNodeIndex);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionHeaderData other) {
      if (other == null) {
        return;
      }
      if (other.CurrentMapId.Length != 0) {
        CurrentMapId = other.CurrentMapId;
      }
      if (other.CurrentNodeIndex != 0) {
        CurrentNodeIndex = other.CurrentNodeIndex;
      }
      headers_.Add(other.headers_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CurrentMapId = input.ReadString();
            break;
          }
          case 16: {
            CurrentNodeIndex = input.ReadInt32();
            break;
          }
          case 26: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            CurrentMapId = input.ReadString();
            break;
          }
          case 16: {
            CurrentNodeIndex = input.ReadInt32();
            break;
          }
          case 26: {
            headers_.AddEntriesFrom(ref input, _repeated_headers_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionMapHeader : pb::IMessage<ProtoRegionMapHeader>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionMapHeader> _parser = new pb::MessageParser<ProtoRegionMapHeader>(() => new ProtoRegionMapHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionMapHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapHeader(ProtoRegionMapHeader other) : this() {
      mapId_ = other.mapId_;
      cleared_ = other.cleared_;
      completedCount_ = other.completedCount_;
      currentNodeIndex_ = other.currentNodeIndex_;
      visited_ = other.visited_;
      unlockTime_ = other.unlockTime_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapHeader Clone() {
      return new ProtoRegionMapHeader(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private string mapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapId {
      get { return mapId_; }
      set {
        mapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cleared" field.</summary>
    public const int ClearedFieldNumber = 2;
    private bool cleared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Cleared {
      get { return cleared_; }
      set {
        cleared_ = value;
      }
    }

    /// <summary>Field number for the "completed_count" field.</summary>
    public const int CompletedCountFieldNumber = 3;
    private int completedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompletedCount {
      get { return completedCount_; }
      set {
        completedCount_ = value;
      }
    }

    /// <summary>Field number for the "current_node_index" field.</summary>
    public const int CurrentNodeIndexFieldNumber = 4;
    private int currentNodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentNodeIndex {
      get { return currentNodeIndex_; }
      set {
        currentNodeIndex_ = value;
      }
    }

    /// <summary>Field number for the "visited" field.</summary>
    public const int VisitedFieldNumber = 5;
    private bool visited_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Visited {
      get { return visited_; }
      set {
        visited_ = value;
      }
    }

    /// <summary>Field number for the "unlock_time" field.</summary>
    public const int UnlockTimeFieldNumber = 6;
    private long unlockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnlockTime {
      get { return unlockTime_; }
      set {
        unlockTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionMapHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionMapHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if (Cleared != other.Cleared) return false;
      if (CompletedCount != other.CompletedCount) return false;
      if (CurrentNodeIndex != other.CurrentNodeIndex) return false;
      if (Visited != other.Visited) return false;
      if (UnlockTime != other.UnlockTime) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId.Length != 0) hash ^= MapId.GetHashCode();
      if (Cleared != false) hash ^= Cleared.GetHashCode();
      if (CompletedCount != 0) hash ^= CompletedCount.GetHashCode();
      if (CurrentNodeIndex != 0) hash ^= CurrentNodeIndex.GetHashCode();
      if (Visited != false) hash ^= Visited.GetHashCode();
      if (UnlockTime != 0L) hash ^= UnlockTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      if (Cleared != false) {
        output.WriteRawTag(16);
        output.WriteBool(Cleared);
      }
      if (CompletedCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CompletedCount);
      }
      if (CurrentNodeIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrentNodeIndex);
      }
      if (Visited != false) {
        output.WriteRawTag(40);
        output.WriteBool(Visited);
      }
      if (UnlockTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(UnlockTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      if (Cleared != false) {
        output.WriteRawTag(16);
        output.WriteBool(Cleared);
      }
      if (CompletedCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CompletedCount);
      }
      if (CurrentNodeIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(CurrentNodeIndex);
      }
      if (Visited != false) {
        output.WriteRawTag(40);
        output.WriteBool(Visited);
      }
      if (UnlockTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(UnlockTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapId);
      }
      if (Cleared != false) {
        size += 1 + 1;
      }
      if (CompletedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompletedCount);
      }
      if (CurrentNodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentNodeIndex);
      }
      if (Visited != false) {
        size += 1 + 1;
      }
      if (UnlockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionMapHeader other) {
      if (other == null) {
        return;
      }
      if (other.MapId.Length != 0) {
        MapId = other.MapId;
      }
      if (other.Cleared != false) {
        Cleared = other.Cleared;
      }
      if (other.CompletedCount != 0) {
        CompletedCount = other.CompletedCount;
      }
      if (other.CurrentNodeIndex != 0) {
        CurrentNodeIndex = other.CurrentNodeIndex;
      }
      if (other.Visited != false) {
        Visited = other.Visited;
      }
      if (other.UnlockTime != 0L) {
        UnlockTime = other.UnlockTime;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 16: {
            Cleared = input.ReadBool();
            break;
          }
          case 24: {
            CompletedCount = input.ReadInt32();
            break;
          }
          case 32: {
            CurrentNodeIndex = input.ReadInt32();
            break;
          }
          case 40: {
            Visited = input.ReadBool();
            break;
          }
          case 48: {
            UnlockTime = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 16: {
            Cleared = input.ReadBool();
            break;
          }
          case 24: {
            CompletedCount = input.ReadInt32();
            break;
          }
          case 32: {
            CurrentNodeIndex = input.ReadInt32();
            break;
          }
          case 40: {
            Visited = input.ReadBool();
            break;
          }
          case 48: {
            UnlockTime = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionMapInstance : pb::IMessage<ProtoRegionMapInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionMapInstance> _parser = new pb::MessageParser<ProtoRegionMapInstance>(() => new ProtoRegionMapInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionMapInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapInstance(ProtoRegionMapInstance other) : this() {
      mapId_ = other.mapId_;
      nodeData_ = other.nodeData_.Clone();
      currentNodeIndex_ = other.currentNodeIndex_;
      lockData_ = other.lockData_.Clone();
      enemiesDefeated_ = other.enemiesDefeated_;
      highScore_ = other.highScore_;
      pendingEvents_ = other.pendingEvents_.Clone();
      persistedEvents_ = other.persistedEvents_.Clone();
      visited_ = other.visited_;
      pendingRegionEvents_ = other.pendingRegionEvents_.Clone();
      persistedRegionEvents_ = other.persistedRegionEvents_.Clone();
      missionData_ = other.missionData_.Clone();
      unlockTime_ = other.unlockTime_;
      progress_ = other.progress_ != null ? other.progress_.Clone() : null;
      wanderingFiends_ = other.wanderingFiends_ != null ? other.wanderingFiends_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMapInstance Clone() {
      return new ProtoRegionMapInstance(this);
    }

    /// <summary>Field number for the "map_id" field.</summary>
    public const int MapIdFieldNumber = 1;
    private string mapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MapId {
      get { return mapId_; }
      set {
        mapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_data" field.</summary>
    public const int NodeDataFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionNodeData> _repeated_nodeData_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoRegionNodeData.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeData> nodeData_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeData> NodeData {
      get { return nodeData_; }
    }

    /// <summary>Field number for the "current_node_index" field.</summary>
    public const int CurrentNodeIndexFieldNumber = 3;
    private int currentNodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CurrentNodeIndex {
      get { return currentNodeIndex_; }
      set {
        currentNodeIndex_ = value;
      }
    }

    /// <summary>Field number for the "lock_data" field.</summary>
    public const int LockDataFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionLockData> _repeated_lockData_codec
        = pb::FieldCodec.ForMessage(34, global::Mobius.Proto.Game.ProtoRegionLockData.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionLockData> lockData_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionLockData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionLockData> LockData {
      get { return lockData_; }
    }

    /// <summary>Field number for the "enemies_defeated" field.</summary>
    public const int EnemiesDefeatedFieldNumber = 5;
    private ulong enemiesDefeated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong EnemiesDefeated {
      get { return enemiesDefeated_; }
      set {
        enemiesDefeated_ = value;
      }
    }

    /// <summary>Field number for the "high_score" field.</summary>
    public const int HighScoreFieldNumber = 6;
    private ulong highScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong HighScore {
      get { return highScore_; }
      set {
        highScore_ = value;
      }
    }

    /// <summary>Field number for the "pending_events" field.</summary>
    public const int PendingEventsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionNodeEvent> _repeated_pendingEvents_codec
        = pb::FieldCodec.ForMessage(66, global::Mobius.Proto.Game.ProtoRegionNodeEvent.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent> pendingEvents_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent> PendingEvents {
      get { return pendingEvents_; }
    }

    /// <summary>Field number for the "persisted_events" field.</summary>
    public const int PersistedEventsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionNodeEvent> _repeated_persistedEvents_codec
        = pb::FieldCodec.ForMessage(74, global::Mobius.Proto.Game.ProtoRegionNodeEvent.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent> persistedEvents_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionNodeEvent> PersistedEvents {
      get { return persistedEvents_; }
    }

    /// <summary>Field number for the "visited" field.</summary>
    public const int VisitedFieldNumber = 10;
    private bool visited_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Visited {
      get { return visited_; }
      set {
        visited_ = value;
      }
    }

    /// <summary>Field number for the "pending_region_events" field.</summary>
    public const int PendingRegionEventsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionEvent> _repeated_pendingRegionEvents_codec
        = pb::FieldCodec.ForMessage(90, global::Mobius.Proto.Game.ProtoRegionEvent.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionEvent> pendingRegionEvents_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionEvent> PendingRegionEvents {
      get { return pendingRegionEvents_; }
    }

    /// <summary>Field number for the "persisted_region_events" field.</summary>
    public const int PersistedRegionEventsFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionEvent> _repeated_persistedRegionEvents_codec
        = pb::FieldCodec.ForMessage(98, global::Mobius.Proto.Game.ProtoRegionEvent.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionEvent> persistedRegionEvents_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionEvent>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionEvent> PersistedRegionEvents {
      get { return persistedRegionEvents_; }
    }

    /// <summary>Field number for the "mission_data" field.</summary>
    public const int MissionDataFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionMissionInstance> _repeated_missionData_codec
        = pb::FieldCodec.ForMessage(106, global::Mobius.Proto.Game.ProtoRegionMissionInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMissionInstance> missionData_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMissionInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionMissionInstance> MissionData {
      get { return missionData_; }
    }

    /// <summary>Field number for the "unlock_time" field.</summary>
    public const int UnlockTimeFieldNumber = 14;
    private long unlockTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnlockTime {
      get { return unlockTime_; }
      set {
        unlockTime_ = value;
      }
    }

    /// <summary>Field number for the "progress" field.</summary>
    public const int ProgressFieldNumber = 15;
    private global::Mobius.Proto.Game.ProtoRegionProgressData progress_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoRegionProgressData Progress {
      get { return progress_; }
      set {
        progress_ = value;
      }
    }

    /// <summary>Field number for the "wandering_fiends" field.</summary>
    public const int WanderingFiendsFieldNumber = 16;
    private global::Mobius.Proto.Game.ProtoWanderingFiendData wanderingFiends_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoWanderingFiendData WanderingFiends {
      get { return wanderingFiends_; }
      set {
        wanderingFiends_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionMapInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionMapInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MapId != other.MapId) return false;
      if(!nodeData_.Equals(other.nodeData_)) return false;
      if (CurrentNodeIndex != other.CurrentNodeIndex) return false;
      if(!lockData_.Equals(other.lockData_)) return false;
      if (EnemiesDefeated != other.EnemiesDefeated) return false;
      if (HighScore != other.HighScore) return false;
      if(!pendingEvents_.Equals(other.pendingEvents_)) return false;
      if(!persistedEvents_.Equals(other.persistedEvents_)) return false;
      if (Visited != other.Visited) return false;
      if(!pendingRegionEvents_.Equals(other.pendingRegionEvents_)) return false;
      if(!persistedRegionEvents_.Equals(other.persistedRegionEvents_)) return false;
      if(!missionData_.Equals(other.missionData_)) return false;
      if (UnlockTime != other.UnlockTime) return false;
      if (!object.Equals(Progress, other.Progress)) return false;
      if (!object.Equals(WanderingFiends, other.WanderingFiends)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MapId.Length != 0) hash ^= MapId.GetHashCode();
      hash ^= nodeData_.GetHashCode();
      if (CurrentNodeIndex != 0) hash ^= CurrentNodeIndex.GetHashCode();
      hash ^= lockData_.GetHashCode();
      if (EnemiesDefeated != 0UL) hash ^= EnemiesDefeated.GetHashCode();
      if (HighScore != 0UL) hash ^= HighScore.GetHashCode();
      hash ^= pendingEvents_.GetHashCode();
      hash ^= persistedEvents_.GetHashCode();
      if (Visited != false) hash ^= Visited.GetHashCode();
      hash ^= pendingRegionEvents_.GetHashCode();
      hash ^= persistedRegionEvents_.GetHashCode();
      hash ^= missionData_.GetHashCode();
      if (UnlockTime != 0L) hash ^= UnlockTime.GetHashCode();
      if (progress_ != null) hash ^= Progress.GetHashCode();
      if (wanderingFiends_ != null) hash ^= WanderingFiends.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      nodeData_.WriteTo(output, _repeated_nodeData_codec);
      if (CurrentNodeIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentNodeIndex);
      }
      lockData_.WriteTo(output, _repeated_lockData_codec);
      if (EnemiesDefeated != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(EnemiesDefeated);
      }
      if (HighScore != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(HighScore);
      }
      pendingEvents_.WriteTo(output, _repeated_pendingEvents_codec);
      persistedEvents_.WriteTo(output, _repeated_persistedEvents_codec);
      if (Visited != false) {
        output.WriteRawTag(80);
        output.WriteBool(Visited);
      }
      pendingRegionEvents_.WriteTo(output, _repeated_pendingRegionEvents_codec);
      persistedRegionEvents_.WriteTo(output, _repeated_persistedRegionEvents_codec);
      missionData_.WriteTo(output, _repeated_missionData_codec);
      if (UnlockTime != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(UnlockTime);
      }
      if (progress_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Progress);
      }
      if (wanderingFiends_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(WanderingFiends);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MapId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MapId);
      }
      nodeData_.WriteTo(ref output, _repeated_nodeData_codec);
      if (CurrentNodeIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CurrentNodeIndex);
      }
      lockData_.WriteTo(ref output, _repeated_lockData_codec);
      if (EnemiesDefeated != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(EnemiesDefeated);
      }
      if (HighScore != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(HighScore);
      }
      pendingEvents_.WriteTo(ref output, _repeated_pendingEvents_codec);
      persistedEvents_.WriteTo(ref output, _repeated_persistedEvents_codec);
      if (Visited != false) {
        output.WriteRawTag(80);
        output.WriteBool(Visited);
      }
      pendingRegionEvents_.WriteTo(ref output, _repeated_pendingRegionEvents_codec);
      persistedRegionEvents_.WriteTo(ref output, _repeated_persistedRegionEvents_codec);
      missionData_.WriteTo(ref output, _repeated_missionData_codec);
      if (UnlockTime != 0L) {
        output.WriteRawTag(112);
        output.WriteInt64(UnlockTime);
      }
      if (progress_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Progress);
      }
      if (wanderingFiends_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(WanderingFiends);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MapId);
      }
      size += nodeData_.CalculateSize(_repeated_nodeData_codec);
      if (CurrentNodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentNodeIndex);
      }
      size += lockData_.CalculateSize(_repeated_lockData_codec);
      if (EnemiesDefeated != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EnemiesDefeated);
      }
      if (HighScore != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(HighScore);
      }
      size += pendingEvents_.CalculateSize(_repeated_pendingEvents_codec);
      size += persistedEvents_.CalculateSize(_repeated_persistedEvents_codec);
      if (Visited != false) {
        size += 1 + 1;
      }
      size += pendingRegionEvents_.CalculateSize(_repeated_pendingRegionEvents_codec);
      size += persistedRegionEvents_.CalculateSize(_repeated_persistedRegionEvents_codec);
      size += missionData_.CalculateSize(_repeated_missionData_codec);
      if (UnlockTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(UnlockTime);
      }
      if (progress_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Progress);
      }
      if (wanderingFiends_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(WanderingFiends);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionMapInstance other) {
      if (other == null) {
        return;
      }
      if (other.MapId.Length != 0) {
        MapId = other.MapId;
      }
      nodeData_.Add(other.nodeData_);
      if (other.CurrentNodeIndex != 0) {
        CurrentNodeIndex = other.CurrentNodeIndex;
      }
      lockData_.Add(other.lockData_);
      if (other.EnemiesDefeated != 0UL) {
        EnemiesDefeated = other.EnemiesDefeated;
      }
      if (other.HighScore != 0UL) {
        HighScore = other.HighScore;
      }
      pendingEvents_.Add(other.pendingEvents_);
      persistedEvents_.Add(other.persistedEvents_);
      if (other.Visited != false) {
        Visited = other.Visited;
      }
      pendingRegionEvents_.Add(other.pendingRegionEvents_);
      persistedRegionEvents_.Add(other.persistedRegionEvents_);
      missionData_.Add(other.missionData_);
      if (other.UnlockTime != 0L) {
        UnlockTime = other.UnlockTime;
      }
      if (other.progress_ != null) {
        if (progress_ == null) {
          Progress = new global::Mobius.Proto.Game.ProtoRegionProgressData();
        }
        Progress.MergeFrom(other.Progress);
      }
      if (other.wanderingFiends_ != null) {
        if (wanderingFiends_ == null) {
          WanderingFiends = new global::Mobius.Proto.Game.ProtoWanderingFiendData();
        }
        WanderingFiends.MergeFrom(other.WanderingFiends);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 18: {
            nodeData_.AddEntriesFrom(input, _repeated_nodeData_codec);
            break;
          }
          case 24: {
            CurrentNodeIndex = input.ReadInt32();
            break;
          }
          case 34: {
            lockData_.AddEntriesFrom(input, _repeated_lockData_codec);
            break;
          }
          case 40: {
            EnemiesDefeated = input.ReadUInt64();
            break;
          }
          case 48: {
            HighScore = input.ReadUInt64();
            break;
          }
          case 66: {
            pendingEvents_.AddEntriesFrom(input, _repeated_pendingEvents_codec);
            break;
          }
          case 74: {
            persistedEvents_.AddEntriesFrom(input, _repeated_persistedEvents_codec);
            break;
          }
          case 80: {
            Visited = input.ReadBool();
            break;
          }
          case 90: {
            pendingRegionEvents_.AddEntriesFrom(input, _repeated_pendingRegionEvents_codec);
            break;
          }
          case 98: {
            persistedRegionEvents_.AddEntriesFrom(input, _repeated_persistedRegionEvents_codec);
            break;
          }
          case 106: {
            missionData_.AddEntriesFrom(input, _repeated_missionData_codec);
            break;
          }
          case 112: {
            UnlockTime = input.ReadInt64();
            break;
          }
          case 122: {
            if (progress_ == null) {
              Progress = new global::Mobius.Proto.Game.ProtoRegionProgressData();
            }
            input.ReadMessage(Progress);
            break;
          }
          case 130: {
            if (wanderingFiends_ == null) {
              WanderingFiends = new global::Mobius.Proto.Game.ProtoWanderingFiendData();
            }
            input.ReadMessage(WanderingFiends);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MapId = input.ReadString();
            break;
          }
          case 18: {
            nodeData_.AddEntriesFrom(ref input, _repeated_nodeData_codec);
            break;
          }
          case 24: {
            CurrentNodeIndex = input.ReadInt32();
            break;
          }
          case 34: {
            lockData_.AddEntriesFrom(ref input, _repeated_lockData_codec);
            break;
          }
          case 40: {
            EnemiesDefeated = input.ReadUInt64();
            break;
          }
          case 48: {
            HighScore = input.ReadUInt64();
            break;
          }
          case 66: {
            pendingEvents_.AddEntriesFrom(ref input, _repeated_pendingEvents_codec);
            break;
          }
          case 74: {
            persistedEvents_.AddEntriesFrom(ref input, _repeated_persistedEvents_codec);
            break;
          }
          case 80: {
            Visited = input.ReadBool();
            break;
          }
          case 90: {
            pendingRegionEvents_.AddEntriesFrom(ref input, _repeated_pendingRegionEvents_codec);
            break;
          }
          case 98: {
            persistedRegionEvents_.AddEntriesFrom(ref input, _repeated_persistedRegionEvents_codec);
            break;
          }
          case 106: {
            missionData_.AddEntriesFrom(ref input, _repeated_missionData_codec);
            break;
          }
          case 112: {
            UnlockTime = input.ReadInt64();
            break;
          }
          case 122: {
            if (progress_ == null) {
              Progress = new global::Mobius.Proto.Game.ProtoRegionProgressData();
            }
            input.ReadMessage(Progress);
            break;
          }
          case 130: {
            if (wanderingFiends_ == null) {
              WanderingFiends = new global::Mobius.Proto.Game.ProtoWanderingFiendData();
            }
            input.ReadMessage(WanderingFiends);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionProgressData : pb::IMessage<ProtoRegionProgressData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionProgressData> _parser = new pb::MessageParser<ProtoRegionProgressData>(() => new ProtoRegionProgressData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionProgressData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionProgressData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionProgressData(ProtoRegionProgressData other) : this() {
      dialogues_ = other.dialogues_.Clone();
      dungeons_ = other.dungeons_.Clone();
      cleared_ = other.cleared_;
      completed_ = other.completed_;
      clearClaimed_ = other.clearClaimed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionProgressData Clone() {
      return new ProtoRegionProgressData(this);
    }

    /// <summary>Field number for the "dialogues" field.</summary>
    public const int DialoguesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionDialogueData> _repeated_dialogues_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoRegionDialogueData.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionDialogueData> dialogues_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionDialogueData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionDialogueData> Dialogues {
      get { return dialogues_; }
    }

    /// <summary>Field number for the "dungeons" field.</summary>
    public const int DungeonsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoRegionDungeonData> _repeated_dungeons_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoRegionDungeonData.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionDungeonData> dungeons_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionDungeonData>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoRegionDungeonData> Dungeons {
      get { return dungeons_; }
    }

    /// <summary>Field number for the "cleared" field.</summary>
    public const int ClearedFieldNumber = 3;
    private bool cleared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Cleared {
      get { return cleared_; }
      set {
        cleared_ = value;
      }
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    /// <summary>Field number for the "clear_claimed" field.</summary>
    public const int ClearClaimedFieldNumber = 5;
    private bool clearClaimed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ClearClaimed {
      get { return clearClaimed_; }
      set {
        clearClaimed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionProgressData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionProgressData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dialogues_.Equals(other.dialogues_)) return false;
      if(!dungeons_.Equals(other.dungeons_)) return false;
      if (Cleared != other.Cleared) return false;
      if (Completed != other.Completed) return false;
      if (ClearClaimed != other.ClearClaimed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dialogues_.GetHashCode();
      hash ^= dungeons_.GetHashCode();
      if (Cleared != false) hash ^= Cleared.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (ClearClaimed != false) hash ^= ClearClaimed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dialogues_.WriteTo(output, _repeated_dialogues_codec);
      dungeons_.WriteTo(output, _repeated_dungeons_codec);
      if (Cleared != false) {
        output.WriteRawTag(24);
        output.WriteBool(Cleared);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (ClearClaimed != false) {
        output.WriteRawTag(40);
        output.WriteBool(ClearClaimed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dialogues_.WriteTo(ref output, _repeated_dialogues_codec);
      dungeons_.WriteTo(ref output, _repeated_dungeons_codec);
      if (Cleared != false) {
        output.WriteRawTag(24);
        output.WriteBool(Cleared);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (ClearClaimed != false) {
        output.WriteRawTag(40);
        output.WriteBool(ClearClaimed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dialogues_.CalculateSize(_repeated_dialogues_codec);
      size += dungeons_.CalculateSize(_repeated_dungeons_codec);
      if (Cleared != false) {
        size += 1 + 1;
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (ClearClaimed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionProgressData other) {
      if (other == null) {
        return;
      }
      dialogues_.Add(other.dialogues_);
      dungeons_.Add(other.dungeons_);
      if (other.Cleared != false) {
        Cleared = other.Cleared;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      if (other.ClearClaimed != false) {
        ClearClaimed = other.ClearClaimed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dialogues_.AddEntriesFrom(input, _repeated_dialogues_codec);
            break;
          }
          case 18: {
            dungeons_.AddEntriesFrom(input, _repeated_dungeons_codec);
            break;
          }
          case 24: {
            Cleared = input.ReadBool();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
          case 40: {
            ClearClaimed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dialogues_.AddEntriesFrom(ref input, _repeated_dialogues_codec);
            break;
          }
          case 18: {
            dungeons_.AddEntriesFrom(ref input, _repeated_dungeons_codec);
            break;
          }
          case 24: {
            Cleared = input.ReadBool();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
          case 40: {
            ClearClaimed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoWanderingFiendData : pb::IMessage<ProtoWanderingFiendData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoWanderingFiendData> _parser = new pb::MessageParser<ProtoWanderingFiendData>(() => new ProtoWanderingFiendData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoWanderingFiendData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWanderingFiendData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWanderingFiendData(ProtoWanderingFiendData other) : this() {
      fiends_ = other.fiends_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWanderingFiendData Clone() {
      return new ProtoWanderingFiendData(this);
    }

    /// <summary>Field number for the "fiends" field.</summary>
    public const int FiendsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoWanderingFiendInstance> _repeated_fiends_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoWanderingFiendInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoWanderingFiendInstance> fiends_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoWanderingFiendInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoWanderingFiendInstance> Fiends {
      get { return fiends_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoWanderingFiendData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoWanderingFiendData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!fiends_.Equals(other.fiends_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= fiends_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      fiends_.WriteTo(output, _repeated_fiends_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      fiends_.WriteTo(ref output, _repeated_fiends_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += fiends_.CalculateSize(_repeated_fiends_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoWanderingFiendData other) {
      if (other == null) {
        return;
      }
      fiends_.Add(other.fiends_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            fiends_.AddEntriesFrom(input, _repeated_fiends_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            fiends_.AddEntriesFrom(ref input, _repeated_fiends_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoWanderingFiendInstance : pb::IMessage<ProtoWanderingFiendInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoWanderingFiendInstance> _parser = new pb::MessageParser<ProtoWanderingFiendInstance>(() => new ProtoWanderingFiendInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoWanderingFiendInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWanderingFiendInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWanderingFiendInstance(ProtoWanderingFiendInstance other) : this() {
      sysId_ = other.sysId_;
      started_ = other.started_;
      released_ = other.released_;
      nodeIndex_ = other.nodeIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWanderingFiendInstance Clone() {
      return new ProtoWanderingFiendInstance(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "started" field.</summary>
    public const int StartedFieldNumber = 2;
    private bool started_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Started {
      get { return started_; }
      set {
        started_ = value;
      }
    }

    /// <summary>Field number for the "released" field.</summary>
    public const int ReleasedFieldNumber = 3;
    private bool released_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Released {
      get { return released_; }
      set {
        released_ = value;
      }
    }

    /// <summary>Field number for the "node_index" field.</summary>
    public const int NodeIndexFieldNumber = 4;
    private int nodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeIndex {
      get { return nodeIndex_; }
      set {
        nodeIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoWanderingFiendInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoWanderingFiendInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (Started != other.Started) return false;
      if (Released != other.Released) return false;
      if (NodeIndex != other.NodeIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (Started != false) hash ^= Started.GetHashCode();
      if (Released != false) hash ^= Released.GetHashCode();
      if (NodeIndex != 0) hash ^= NodeIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (Started != false) {
        output.WriteRawTag(16);
        output.WriteBool(Started);
      }
      if (Released != false) {
        output.WriteRawTag(24);
        output.WriteBool(Released);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (Started != false) {
        output.WriteRawTag(16);
        output.WriteBool(Started);
      }
      if (Released != false) {
        output.WriteRawTag(24);
        output.WriteBool(Released);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (Started != false) {
        size += 1 + 1;
      }
      if (Released != false) {
        size += 1 + 1;
      }
      if (NodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoWanderingFiendInstance other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.Started != false) {
        Started = other.Started;
      }
      if (other.Released != false) {
        Released = other.Released;
      }
      if (other.NodeIndex != 0) {
        NodeIndex = other.NodeIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            Started = input.ReadBool();
            break;
          }
          case 24: {
            Released = input.ReadBool();
            break;
          }
          case 32: {
            NodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            Started = input.ReadBool();
            break;
          }
          case 24: {
            Released = input.ReadBool();
            break;
          }
          case 32: {
            NodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionDialogueData : pb::IMessage<ProtoRegionDialogueData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionDialogueData> _parser = new pb::MessageParser<ProtoRegionDialogueData>(() => new ProtoRegionDialogueData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionDialogueData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionDialogueData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionDialogueData(ProtoRegionDialogueData other) : this() {
      sysId_ = other.sysId_;
      pending_ = other.pending_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionDialogueData Clone() {
      return new ProtoRegionDialogueData(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pending" field.</summary>
    public const int PendingFieldNumber = 2;
    private bool pending_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Pending {
      get { return pending_; }
      set {
        pending_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionDialogueData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionDialogueData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (Pending != other.Pending) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (Pending != false) hash ^= Pending.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (Pending != false) {
        output.WriteRawTag(16);
        output.WriteBool(Pending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (Pending != false) {
        output.WriteRawTag(16);
        output.WriteBool(Pending);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (Pending != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionDialogueData other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.Pending != false) {
        Pending = other.Pending;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            Pending = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            Pending = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionDungeonData : pb::IMessage<ProtoRegionDungeonData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionDungeonData> _parser = new pb::MessageParser<ProtoRegionDungeonData>(() => new ProtoRegionDungeonData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionDungeonData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionDungeonData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionDungeonData(ProtoRegionDungeonData other) : this() {
      sysId_ = other.sysId_;
      claimed_ = other.claimed_;
      clearCount_ = other.clearCount_;
      cleared_ = other.cleared_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionDungeonData Clone() {
      return new ProtoRegionDungeonData(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "claimed" field.</summary>
    public const int ClaimedFieldNumber = 2;
    private bool claimed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Claimed {
      get { return claimed_; }
      set {
        claimed_ = value;
      }
    }

    /// <summary>Field number for the "clear_count" field.</summary>
    public const int ClearCountFieldNumber = 3;
    private int clearCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ClearCount {
      get { return clearCount_; }
      set {
        clearCount_ = value;
      }
    }

    /// <summary>Field number for the "cleared" field.</summary>
    public const int ClearedFieldNumber = 4;
    private bool cleared_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Cleared {
      get { return cleared_; }
      set {
        cleared_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionDungeonData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionDungeonData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (Claimed != other.Claimed) return false;
      if (ClearCount != other.ClearCount) return false;
      if (Cleared != other.Cleared) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (Claimed != false) hash ^= Claimed.GetHashCode();
      if (ClearCount != 0) hash ^= ClearCount.GetHashCode();
      if (Cleared != false) hash ^= Cleared.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (Claimed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Claimed);
      }
      if (ClearCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ClearCount);
      }
      if (Cleared != false) {
        output.WriteRawTag(32);
        output.WriteBool(Cleared);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (Claimed != false) {
        output.WriteRawTag(16);
        output.WriteBool(Claimed);
      }
      if (ClearCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ClearCount);
      }
      if (Cleared != false) {
        output.WriteRawTag(32);
        output.WriteBool(Cleared);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (Claimed != false) {
        size += 1 + 1;
      }
      if (ClearCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ClearCount);
      }
      if (Cleared != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionDungeonData other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.Claimed != false) {
        Claimed = other.Claimed;
      }
      if (other.ClearCount != 0) {
        ClearCount = other.ClearCount;
      }
      if (other.Cleared != false) {
        Cleared = other.Cleared;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            Claimed = input.ReadBool();
            break;
          }
          case 24: {
            ClearCount = input.ReadInt32();
            break;
          }
          case 32: {
            Cleared = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 16: {
            Claimed = input.ReadBool();
            break;
          }
          case 24: {
            ClearCount = input.ReadInt32();
            break;
          }
          case 32: {
            Cleared = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionNodeData : pb::IMessage<ProtoRegionNodeData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionNodeData> _parser = new pb::MessageParser<ProtoRegionNodeData>(() => new ProtoRegionNodeData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionNodeData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionNodeData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionNodeData(ProtoRegionNodeData other) : this() {
      nodeId_ = other.nodeId_;
      visible_ = other.visible_;
      locked_ = other.locked_;
      completed_ = other.completed_;
      completedCount_ = other.completedCount_;
      opened_ = other.opened_;
      waveIndex_ = other.waveIndex_;
      foothold_ = other.foothold_;
      seed_ = other.seed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionNodeData Clone() {
      return new ProtoRegionNodeData(this);
    }

    /// <summary>Field number for the "node_id" field.</summary>
    public const int NodeIdFieldNumber = 1;
    private string nodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NodeId {
      get { return nodeId_; }
      set {
        nodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Visible {
      get { return visible_; }
      set {
        visible_ = value;
      }
    }

    /// <summary>Field number for the "locked" field.</summary>
    public const int LockedFieldNumber = 3;
    private bool locked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Locked {
      get { return locked_; }
      set {
        locked_ = value;
      }
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    /// <summary>Field number for the "completed_count" field.</summary>
    public const int CompletedCountFieldNumber = 5;
    private ulong completedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong CompletedCount {
      get { return completedCount_; }
      set {
        completedCount_ = value;
      }
    }

    /// <summary>Field number for the "opened" field.</summary>
    public const int OpenedFieldNumber = 6;
    private bool opened_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Opened {
      get { return opened_; }
      set {
        opened_ = value;
      }
    }

    /// <summary>Field number for the "wave_index" field.</summary>
    public const int WaveIndexFieldNumber = 7;
    private int waveIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WaveIndex {
      get { return waveIndex_; }
      set {
        waveIndex_ = value;
      }
    }

    /// <summary>Field number for the "foothold" field.</summary>
    public const int FootholdFieldNumber = 8;
    private bool foothold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Foothold {
      get { return foothold_; }
      set {
        foothold_ = value;
      }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 9;
    private long seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionNodeData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionNodeData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NodeId != other.NodeId) return false;
      if (Visible != other.Visible) return false;
      if (Locked != other.Locked) return false;
      if (Completed != other.Completed) return false;
      if (CompletedCount != other.CompletedCount) return false;
      if (Opened != other.Opened) return false;
      if (WaveIndex != other.WaveIndex) return false;
      if (Foothold != other.Foothold) return false;
      if (Seed != other.Seed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NodeId.Length != 0) hash ^= NodeId.GetHashCode();
      if (Visible != false) hash ^= Visible.GetHashCode();
      if (Locked != false) hash ^= Locked.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (CompletedCount != 0UL) hash ^= CompletedCount.GetHashCode();
      if (Opened != false) hash ^= Opened.GetHashCode();
      if (WaveIndex != 0) hash ^= WaveIndex.GetHashCode();
      if (Foothold != false) hash ^= Foothold.GetHashCode();
      if (Seed != 0L) hash ^= Seed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (Visible != false) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (Locked != false) {
        output.WriteRawTag(24);
        output.WriteBool(Locked);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (CompletedCount != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CompletedCount);
      }
      if (Opened != false) {
        output.WriteRawTag(48);
        output.WriteBool(Opened);
      }
      if (WaveIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(WaveIndex);
      }
      if (Foothold != false) {
        output.WriteRawTag(64);
        output.WriteBool(Foothold);
      }
      if (Seed != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Seed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (NodeId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NodeId);
      }
      if (Visible != false) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (Locked != false) {
        output.WriteRawTag(24);
        output.WriteBool(Locked);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (CompletedCount != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(CompletedCount);
      }
      if (Opened != false) {
        output.WriteRawTag(48);
        output.WriteBool(Opened);
      }
      if (WaveIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(WaveIndex);
      }
      if (Foothold != false) {
        output.WriteRawTag(64);
        output.WriteBool(Foothold);
      }
      if (Seed != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Seed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NodeId);
      }
      if (Visible != false) {
        size += 1 + 1;
      }
      if (Locked != false) {
        size += 1 + 1;
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (CompletedCount != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(CompletedCount);
      }
      if (Opened != false) {
        size += 1 + 1;
      }
      if (WaveIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaveIndex);
      }
      if (Foothold != false) {
        size += 1 + 1;
      }
      if (Seed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionNodeData other) {
      if (other == null) {
        return;
      }
      if (other.NodeId.Length != 0) {
        NodeId = other.NodeId;
      }
      if (other.Visible != false) {
        Visible = other.Visible;
      }
      if (other.Locked != false) {
        Locked = other.Locked;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      if (other.CompletedCount != 0UL) {
        CompletedCount = other.CompletedCount;
      }
      if (other.Opened != false) {
        Opened = other.Opened;
      }
      if (other.WaveIndex != 0) {
        WaveIndex = other.WaveIndex;
      }
      if (other.Foothold != false) {
        Foothold = other.Foothold;
      }
      if (other.Seed != 0L) {
        Seed = other.Seed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 24: {
            Locked = input.ReadBool();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
          case 40: {
            CompletedCount = input.ReadUInt64();
            break;
          }
          case 48: {
            Opened = input.ReadBool();
            break;
          }
          case 56: {
            WaveIndex = input.ReadInt32();
            break;
          }
          case 64: {
            Foothold = input.ReadBool();
            break;
          }
          case 72: {
            Seed = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            NodeId = input.ReadString();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 24: {
            Locked = input.ReadBool();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
          case 40: {
            CompletedCount = input.ReadUInt64();
            break;
          }
          case 48: {
            Opened = input.ReadBool();
            break;
          }
          case 56: {
            WaveIndex = input.ReadInt32();
            break;
          }
          case 64: {
            Foothold = input.ReadBool();
            break;
          }
          case 72: {
            Seed = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionLockData : pb::IMessage<ProtoRegionLockData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionLockData> _parser = new pb::MessageParser<ProtoRegionLockData>(() => new ProtoRegionLockData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionLockData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionLockData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionLockData(ProtoRegionLockData other) : this() {
      lockId_ = other.lockId_;
      parentNodeId_ = other.parentNodeId_;
      targetNodeId_ = other.targetNodeId_;
      unlocked_ = other.unlocked_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionLockData Clone() {
      return new ProtoRegionLockData(this);
    }

    /// <summary>Field number for the "lock_id" field.</summary>
    public const int LockIdFieldNumber = 1;
    private string lockId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LockId {
      get { return lockId_; }
      set {
        lockId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parent_node_id" field.</summary>
    public const int ParentNodeIdFieldNumber = 2;
    private string parentNodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ParentNodeId {
      get { return parentNodeId_; }
      set {
        parentNodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_node_id" field.</summary>
    public const int TargetNodeIdFieldNumber = 3;
    private string targetNodeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetNodeId {
      get { return targetNodeId_; }
      set {
        targetNodeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "unlocked" field.</summary>
    public const int UnlockedFieldNumber = 4;
    private bool unlocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unlocked {
      get { return unlocked_; }
      set {
        unlocked_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionLockData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionLockData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LockId != other.LockId) return false;
      if (ParentNodeId != other.ParentNodeId) return false;
      if (TargetNodeId != other.TargetNodeId) return false;
      if (Unlocked != other.Unlocked) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LockId.Length != 0) hash ^= LockId.GetHashCode();
      if (ParentNodeId.Length != 0) hash ^= ParentNodeId.GetHashCode();
      if (TargetNodeId.Length != 0) hash ^= TargetNodeId.GetHashCode();
      if (Unlocked != false) hash ^= Unlocked.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LockId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LockId);
      }
      if (ParentNodeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParentNodeId);
      }
      if (TargetNodeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TargetNodeId);
      }
      if (Unlocked != false) {
        output.WriteRawTag(32);
        output.WriteBool(Unlocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LockId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LockId);
      }
      if (ParentNodeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ParentNodeId);
      }
      if (TargetNodeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TargetNodeId);
      }
      if (Unlocked != false) {
        output.WriteRawTag(32);
        output.WriteBool(Unlocked);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LockId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LockId);
      }
      if (ParentNodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ParentNodeId);
      }
      if (TargetNodeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetNodeId);
      }
      if (Unlocked != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionLockData other) {
      if (other == null) {
        return;
      }
      if (other.LockId.Length != 0) {
        LockId = other.LockId;
      }
      if (other.ParentNodeId.Length != 0) {
        ParentNodeId = other.ParentNodeId;
      }
      if (other.TargetNodeId.Length != 0) {
        TargetNodeId = other.TargetNodeId;
      }
      if (other.Unlocked != false) {
        Unlocked = other.Unlocked;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LockId = input.ReadString();
            break;
          }
          case 18: {
            ParentNodeId = input.ReadString();
            break;
          }
          case 26: {
            TargetNodeId = input.ReadString();
            break;
          }
          case 32: {
            Unlocked = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LockId = input.ReadString();
            break;
          }
          case 18: {
            ParentNodeId = input.ReadString();
            break;
          }
          case 26: {
            TargetNodeId = input.ReadString();
            break;
          }
          case 32: {
            Unlocked = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionEvent : pb::IMessage<ProtoRegionEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionEvent> _parser = new pb::MessageParser<ProtoRegionEvent>(() => new ProtoRegionEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionEvent(ProtoRegionEvent other) : this() {
      sysId_ = other.sysId_;
      regionMapId_ = other.regionMapId_;
      definitionValue_ = other.definitionValue_;
      target_ = other.target_;
      order_ = other.order_;
      repeatable_ = other.repeatable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionEvent Clone() {
      return new ProtoRegionEvent(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_map_id" field.</summary>
    public const int RegionMapIdFieldNumber = 2;
    private string regionMapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionMapId {
      get { return regionMapId_; }
      set {
        regionMapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "definition_value" field.</summary>
    public const int DefinitionValueFieldNumber = 3;
    private int definitionValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefinitionValue {
      get { return definitionValue_; }
      set {
        definitionValue_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 4;
    private int target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 5;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "repeatable" field.</summary>
    public const int RepeatableFieldNumber = 6;
    private bool repeatable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Repeatable {
      get { return repeatable_; }
      set {
        repeatable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (RegionMapId != other.RegionMapId) return false;
      if (DefinitionValue != other.DefinitionValue) return false;
      if (Target != other.Target) return false;
      if (Order != other.Order) return false;
      if (Repeatable != other.Repeatable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (RegionMapId.Length != 0) hash ^= RegionMapId.GetHashCode();
      if (DefinitionValue != 0) hash ^= DefinitionValue.GetHashCode();
      if (Target != 0) hash ^= Target.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (Repeatable != false) hash ^= Repeatable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionMapId);
      }
      if (DefinitionValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefinitionValue);
      }
      if (Target != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Target);
      }
      if (Order != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Order);
      }
      if (Repeatable != false) {
        output.WriteRawTag(48);
        output.WriteBool(Repeatable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionMapId);
      }
      if (DefinitionValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefinitionValue);
      }
      if (Target != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Target);
      }
      if (Order != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Order);
      }
      if (Repeatable != false) {
        output.WriteRawTag(48);
        output.WriteBool(Repeatable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (RegionMapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionMapId);
      }
      if (DefinitionValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefinitionValue);
      }
      if (Target != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Target);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (Repeatable != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionEvent other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.RegionMapId.Length != 0) {
        RegionMapId = other.RegionMapId;
      }
      if (other.DefinitionValue != 0) {
        DefinitionValue = other.DefinitionValue;
      }
      if (other.Target != 0) {
        Target = other.Target;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.Repeatable != false) {
        Repeatable = other.Repeatable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            RegionMapId = input.ReadString();
            break;
          }
          case 24: {
            DefinitionValue = input.ReadInt32();
            break;
          }
          case 32: {
            Target = input.ReadInt32();
            break;
          }
          case 40: {
            Order = input.ReadInt32();
            break;
          }
          case 48: {
            Repeatable = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            RegionMapId = input.ReadString();
            break;
          }
          case 24: {
            DefinitionValue = input.ReadInt32();
            break;
          }
          case 32: {
            Target = input.ReadInt32();
            break;
          }
          case 40: {
            Order = input.ReadInt32();
            break;
          }
          case 48: {
            Repeatable = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionNodeEvent : pb::IMessage<ProtoRegionNodeEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionNodeEvent> _parser = new pb::MessageParser<ProtoRegionNodeEvent>(() => new ProtoRegionNodeEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionNodeEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionNodeEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionNodeEvent(ProtoRegionNodeEvent other) : this() {
      sysId_ = other.sysId_;
      regionMapId_ = other.regionMapId_;
      nodeIndex_ = other.nodeIndex_;
      definitionValue_ = other.definitionValue_;
      target_ = other.target_;
      order_ = other.order_;
      repeatable_ = other.repeatable_;
      targetIndex_ = other.targetIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionNodeEvent Clone() {
      return new ProtoRegionNodeEvent(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_map_id" field.</summary>
    public const int RegionMapIdFieldNumber = 2;
    private string regionMapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionMapId {
      get { return regionMapId_; }
      set {
        regionMapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "node_index" field.</summary>
    public const int NodeIndexFieldNumber = 3;
    private int nodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeIndex {
      get { return nodeIndex_; }
      set {
        nodeIndex_ = value;
      }
    }

    /// <summary>Field number for the "definition_value" field.</summary>
    public const int DefinitionValueFieldNumber = 4;
    private int definitionValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefinitionValue {
      get { return definitionValue_; }
      set {
        definitionValue_ = value;
      }
    }

    /// <summary>Field number for the "target" field.</summary>
    public const int TargetFieldNumber = 5;
    private int target_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Target {
      get { return target_; }
      set {
        target_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 6;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "repeatable" field.</summary>
    public const int RepeatableFieldNumber = 7;
    private bool repeatable_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Repeatable {
      get { return repeatable_; }
      set {
        repeatable_ = value;
      }
    }

    /// <summary>Field number for the "target_index" field.</summary>
    public const int TargetIndexFieldNumber = 8;
    private int targetIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetIndex {
      get { return targetIndex_; }
      set {
        targetIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionNodeEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionNodeEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (RegionMapId != other.RegionMapId) return false;
      if (NodeIndex != other.NodeIndex) return false;
      if (DefinitionValue != other.DefinitionValue) return false;
      if (Target != other.Target) return false;
      if (Order != other.Order) return false;
      if (Repeatable != other.Repeatable) return false;
      if (TargetIndex != other.TargetIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (RegionMapId.Length != 0) hash ^= RegionMapId.GetHashCode();
      if (NodeIndex != 0) hash ^= NodeIndex.GetHashCode();
      if (DefinitionValue != 0) hash ^= DefinitionValue.GetHashCode();
      if (Target != 0) hash ^= Target.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (Repeatable != false) hash ^= Repeatable.GetHashCode();
      if (TargetIndex != 0) hash ^= TargetIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionMapId);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NodeIndex);
      }
      if (DefinitionValue != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DefinitionValue);
      }
      if (Target != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Target);
      }
      if (Order != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Order);
      }
      if (Repeatable != false) {
        output.WriteRawTag(56);
        output.WriteBool(Repeatable);
      }
      if (TargetIndex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TargetIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RegionMapId);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(NodeIndex);
      }
      if (DefinitionValue != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DefinitionValue);
      }
      if (Target != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Target);
      }
      if (Order != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(Order);
      }
      if (Repeatable != false) {
        output.WriteRawTag(56);
        output.WriteBool(Repeatable);
      }
      if (TargetIndex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(TargetIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (RegionMapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionMapId);
      }
      if (NodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeIndex);
      }
      if (DefinitionValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefinitionValue);
      }
      if (Target != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Target);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (Repeatable != false) {
        size += 1 + 1;
      }
      if (TargetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionNodeEvent other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.RegionMapId.Length != 0) {
        RegionMapId = other.RegionMapId;
      }
      if (other.NodeIndex != 0) {
        NodeIndex = other.NodeIndex;
      }
      if (other.DefinitionValue != 0) {
        DefinitionValue = other.DefinitionValue;
      }
      if (other.Target != 0) {
        Target = other.Target;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.Repeatable != false) {
        Repeatable = other.Repeatable;
      }
      if (other.TargetIndex != 0) {
        TargetIndex = other.TargetIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            RegionMapId = input.ReadString();
            break;
          }
          case 24: {
            NodeIndex = input.ReadInt32();
            break;
          }
          case 32: {
            DefinitionValue = input.ReadInt32();
            break;
          }
          case 40: {
            Target = input.ReadInt32();
            break;
          }
          case 48: {
            Order = input.ReadInt32();
            break;
          }
          case 56: {
            Repeatable = input.ReadBool();
            break;
          }
          case 64: {
            TargetIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            RegionMapId = input.ReadString();
            break;
          }
          case 24: {
            NodeIndex = input.ReadInt32();
            break;
          }
          case 32: {
            DefinitionValue = input.ReadInt32();
            break;
          }
          case 40: {
            Target = input.ReadInt32();
            break;
          }
          case 48: {
            Order = input.ReadInt32();
            break;
          }
          case 56: {
            Repeatable = input.ReadBool();
            break;
          }
          case 64: {
            TargetIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionEventData : pb::IMessage<ProtoRegionEventData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionEventData> _parser = new pb::MessageParser<ProtoRegionEventData>(() => new ProtoRegionEventData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionEventData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionEventData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionEventData(ProtoRegionEventData other) : this() {
      sourceIndex_ = other.sourceIndex_;
      targetIndex_ = other.targetIndex_;
      definitionValue_ = other.definitionValue_;
      order_ = other.order_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionEventData Clone() {
      return new ProtoRegionEventData(this);
    }

    /// <summary>Field number for the "source_index" field.</summary>
    public const int SourceIndexFieldNumber = 1;
    private int sourceIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SourceIndex {
      get { return sourceIndex_; }
      set {
        sourceIndex_ = value;
      }
    }

    /// <summary>Field number for the "target_index" field.</summary>
    public const int TargetIndexFieldNumber = 2;
    private int targetIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TargetIndex {
      get { return targetIndex_; }
      set {
        targetIndex_ = value;
      }
    }

    /// <summary>Field number for the "definition_value" field.</summary>
    public const int DefinitionValueFieldNumber = 3;
    private int definitionValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefinitionValue {
      get { return definitionValue_; }
      set {
        definitionValue_ = value;
      }
    }

    /// <summary>Field number for the "order" field.</summary>
    public const int OrderFieldNumber = 4;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionEventData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionEventData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SourceIndex != other.SourceIndex) return false;
      if (TargetIndex != other.TargetIndex) return false;
      if (DefinitionValue != other.DefinitionValue) return false;
      if (Order != other.Order) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SourceIndex != 0) hash ^= SourceIndex.GetHashCode();
      if (TargetIndex != 0) hash ^= TargetIndex.GetHashCode();
      if (DefinitionValue != 0) hash ^= DefinitionValue.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SourceIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SourceIndex);
      }
      if (TargetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetIndex);
      }
      if (DefinitionValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefinitionValue);
      }
      if (Order != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SourceIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SourceIndex);
      }
      if (TargetIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(TargetIndex);
      }
      if (DefinitionValue != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DefinitionValue);
      }
      if (Order != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SourceIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SourceIndex);
      }
      if (TargetIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TargetIndex);
      }
      if (DefinitionValue != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefinitionValue);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionEventData other) {
      if (other == null) {
        return;
      }
      if (other.SourceIndex != 0) {
        SourceIndex = other.SourceIndex;
      }
      if (other.TargetIndex != 0) {
        TargetIndex = other.TargetIndex;
      }
      if (other.DefinitionValue != 0) {
        DefinitionValue = other.DefinitionValue;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SourceIndex = input.ReadInt32();
            break;
          }
          case 16: {
            TargetIndex = input.ReadInt32();
            break;
          }
          case 24: {
            DefinitionValue = input.ReadInt32();
            break;
          }
          case 32: {
            Order = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SourceIndex = input.ReadInt32();
            break;
          }
          case 16: {
            TargetIndex = input.ReadInt32();
            break;
          }
          case 24: {
            DefinitionValue = input.ReadInt32();
            break;
          }
          case 32: {
            Order = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoRegionMissionInstance : pb::IMessage<ProtoRegionMissionInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoRegionMissionInstance> _parser = new pb::MessageParser<ProtoRegionMissionInstance>(() => new ProtoRegionMissionInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoRegionMissionInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMissionInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMissionInstance(ProtoRegionMissionInstance other) : this() {
      missionId_ = other.missionId_;
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      applyToNode_ = other.applyToNode_;
      nodeIndex_ = other.nodeIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoRegionMissionInstance Clone() {
      return new ProtoRegionMissionInstance(this);
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 1;
    private string missionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MissionId {
      get { return missionId_; }
      set {
        missionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 2;
    private global::Mobius.Proto.Game.ProtoMissionInstance instance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoMissionInstance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    /// <summary>Field number for the "apply_to_node" field.</summary>
    public const int ApplyToNodeFieldNumber = 3;
    private bool applyToNode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ApplyToNode {
      get { return applyToNode_; }
      set {
        applyToNode_ = value;
      }
    }

    /// <summary>Field number for the "node_index" field.</summary>
    public const int NodeIndexFieldNumber = 4;
    private int nodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NodeIndex {
      get { return nodeIndex_; }
      set {
        nodeIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoRegionMissionInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoRegionMissionInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MissionId != other.MissionId) return false;
      if (!object.Equals(Instance, other.Instance)) return false;
      if (ApplyToNode != other.ApplyToNode) return false;
      if (NodeIndex != other.NodeIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MissionId.Length != 0) hash ^= MissionId.GetHashCode();
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (ApplyToNode != false) hash ^= ApplyToNode.GetHashCode();
      if (NodeIndex != 0) hash ^= NodeIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MissionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MissionId);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      if (ApplyToNode != false) {
        output.WriteRawTag(24);
        output.WriteBool(ApplyToNode);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MissionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(MissionId);
      }
      if (instance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Instance);
      }
      if (ApplyToNode != false) {
        output.WriteRawTag(24);
        output.WriteBool(ApplyToNode);
      }
      if (NodeIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MissionId);
      }
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (ApplyToNode != false) {
        size += 1 + 1;
      }
      if (NodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NodeIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoRegionMissionInstance other) {
      if (other == null) {
        return;
      }
      if (other.MissionId.Length != 0) {
        MissionId = other.MissionId;
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Mobius.Proto.Game.ProtoMissionInstance();
        }
        Instance.MergeFrom(other.Instance);
      }
      if (other.ApplyToNode != false) {
        ApplyToNode = other.ApplyToNode;
      }
      if (other.NodeIndex != 0) {
        NodeIndex = other.NodeIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            MissionId = input.ReadString();
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoMissionInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 24: {
            ApplyToNode = input.ReadBool();
            break;
          }
          case 32: {
            NodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            MissionId = input.ReadString();
            break;
          }
          case 18: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoMissionInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 24: {
            ApplyToNode = input.ReadBool();
            break;
          }
          case 32: {
            NodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoSkillPanelGroups : pb::IMessage<ProtoSkillPanelGroups>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoSkillPanelGroups> _parser = new pb::MessageParser<ProtoSkillPanelGroups>(() => new ProtoSkillPanelGroups());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoSkillPanelGroups> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanelGroups() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanelGroups(ProtoSkillPanelGroups other) : this() {
      panelPages_ = other.panelPages_.Clone();
      completedCount_ = other.completedCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanelGroups Clone() {
      return new ProtoSkillPanelGroups(this);
    }

    /// <summary>Field number for the "panel_pages" field.</summary>
    public const int PanelPagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoSkillPanelPage> _repeated_panelPages_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoSkillPanelPage.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoSkillPanelPage> panelPages_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoSkillPanelPage>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoSkillPanelPage> PanelPages {
      get { return panelPages_; }
    }

    /// <summary>Field number for the "completed_count" field.</summary>
    public const int CompletedCountFieldNumber = 2;
    private int completedCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CompletedCount {
      get { return completedCount_; }
      set {
        completedCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoSkillPanelGroups);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoSkillPanelGroups other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!panelPages_.Equals(other.panelPages_)) return false;
      if (CompletedCount != other.CompletedCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= panelPages_.GetHashCode();
      if (CompletedCount != 0) hash ^= CompletedCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      panelPages_.WriteTo(output, _repeated_panelPages_codec);
      if (CompletedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CompletedCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      panelPages_.WriteTo(ref output, _repeated_panelPages_codec);
      if (CompletedCount != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(CompletedCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += panelPages_.CalculateSize(_repeated_panelPages_codec);
      if (CompletedCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CompletedCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoSkillPanelGroups other) {
      if (other == null) {
        return;
      }
      panelPages_.Add(other.panelPages_);
      if (other.CompletedCount != 0) {
        CompletedCount = other.CompletedCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            panelPages_.AddEntriesFrom(input, _repeated_panelPages_codec);
            break;
          }
          case 16: {
            CompletedCount = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            panelPages_.AddEntriesFrom(ref input, _repeated_panelPages_codec);
            break;
          }
          case 16: {
            CompletedCount = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoSkillPanelPage : pb::IMessage<ProtoSkillPanelPage>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoSkillPanelPage> _parser = new pb::MessageParser<ProtoSkillPanelPage>(() => new ProtoSkillPanelPage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoSkillPanelPage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanelPage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanelPage(ProtoSkillPanelPage other) : this() {
      index_ = other.index_;
      visible_ = other.visible_;
      unlocked_ = other.unlocked_;
      completed_ = other.completed_;
      skillPanels_ = other.skillPanels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanelPage Clone() {
      return new ProtoSkillPanelPage(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "visible" field.</summary>
    public const int VisibleFieldNumber = 2;
    private bool visible_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Visible {
      get { return visible_; }
      set {
        visible_ = value;
      }
    }

    /// <summary>Field number for the "unlocked" field.</summary>
    public const int UnlockedFieldNumber = 3;
    private bool unlocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unlocked {
      get { return unlocked_; }
      set {
        unlocked_ = value;
      }
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    /// <summary>Field number for the "skill_panels" field.</summary>
    public const int SkillPanelsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoSkillPanel> _repeated_skillPanels_codec
        = pb::FieldCodec.ForMessage(42, global::Mobius.Proto.Game.ProtoSkillPanel.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoSkillPanel> skillPanels_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoSkillPanel>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoSkillPanel> SkillPanels {
      get { return skillPanels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoSkillPanelPage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoSkillPanelPage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Visible != other.Visible) return false;
      if (Unlocked != other.Unlocked) return false;
      if (Completed != other.Completed) return false;
      if(!skillPanels_.Equals(other.skillPanels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Visible != false) hash ^= Visible.GetHashCode();
      if (Unlocked != false) hash ^= Unlocked.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      hash ^= skillPanels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Visible != false) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (Unlocked != false) {
        output.WriteRawTag(24);
        output.WriteBool(Unlocked);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      skillPanels_.WriteTo(output, _repeated_skillPanels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Visible != false) {
        output.WriteRawTag(16);
        output.WriteBool(Visible);
      }
      if (Unlocked != false) {
        output.WriteRawTag(24);
        output.WriteBool(Unlocked);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      skillPanels_.WriteTo(ref output, _repeated_skillPanels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Visible != false) {
        size += 1 + 1;
      }
      if (Unlocked != false) {
        size += 1 + 1;
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      size += skillPanels_.CalculateSize(_repeated_skillPanels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoSkillPanelPage other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Visible != false) {
        Visible = other.Visible;
      }
      if (other.Unlocked != false) {
        Unlocked = other.Unlocked;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      skillPanels_.Add(other.skillPanels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 24: {
            Unlocked = input.ReadBool();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
          case 42: {
            skillPanels_.AddEntriesFrom(input, _repeated_skillPanels_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Visible = input.ReadBool();
            break;
          }
          case 24: {
            Unlocked = input.ReadBool();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
          case 42: {
            skillPanels_.AddEntriesFrom(ref input, _repeated_skillPanels_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoSkillPanel : pb::IMessage<ProtoSkillPanel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoSkillPanel> _parser = new pb::MessageParser<ProtoSkillPanel>(() => new ProtoSkillPanel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoSkillPanel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanel(ProtoSkillPanel other) : this() {
      index_ = other.index_;
      unlocked_ = other.unlocked_;
      completed_ = other.completed_;
      capItem_ = other.capItem_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSkillPanel Clone() {
      return new ProtoSkillPanel(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "unlocked" field.</summary>
    public const int UnlockedFieldNumber = 2;
    private bool unlocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Unlocked {
      get { return unlocked_; }
      set {
        unlocked_ = value;
      }
    }

    /// <summary>Field number for the "completed" field.</summary>
    public const int CompletedFieldNumber = 3;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    /// <summary>Field number for the "cap_item" field.</summary>
    public const int CapItemFieldNumber = 4;
    private bool capItem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool CapItem {
      get { return capItem_; }
      set {
        capItem_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoSkillPanel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoSkillPanel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Unlocked != other.Unlocked) return false;
      if (Completed != other.Completed) return false;
      if (CapItem != other.CapItem) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Unlocked != false) hash ^= Unlocked.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (CapItem != false) hash ^= CapItem.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Unlocked != false) {
        output.WriteRawTag(16);
        output.WriteBool(Unlocked);
      }
      if (Completed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Completed);
      }
      if (CapItem != false) {
        output.WriteRawTag(32);
        output.WriteBool(CapItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Unlocked != false) {
        output.WriteRawTag(16);
        output.WriteBool(Unlocked);
      }
      if (Completed != false) {
        output.WriteRawTag(24);
        output.WriteBool(Completed);
      }
      if (CapItem != false) {
        output.WriteRawTag(32);
        output.WriteBool(CapItem);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Unlocked != false) {
        size += 1 + 1;
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (CapItem != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoSkillPanel other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Unlocked != false) {
        Unlocked = other.Unlocked;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      if (other.CapItem != false) {
        CapItem = other.CapItem;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Unlocked = input.ReadBool();
            break;
          }
          case 24: {
            Completed = input.ReadBool();
            break;
          }
          case 32: {
            CapItem = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Unlocked = input.ReadBool();
            break;
          }
          case 24: {
            Completed = input.ReadBool();
            break;
          }
          case 32: {
            CapItem = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoWeaponInventory : pb::IMessage<ProtoWeaponInventory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoWeaponInventory> _parser = new pb::MessageParser<ProtoWeaponInventory>(() => new ProtoWeaponInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoWeaponInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponInventory(ProtoWeaponInventory other) : this() {
      weaponList_ = other.weaponList_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponInventory Clone() {
      return new ProtoWeaponInventory(this);
    }

    /// <summary>Field number for the "weapon_list" field.</summary>
    public const int WeaponListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoWeaponInstance> _repeated_weaponList_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoWeaponInstance.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoWeaponInstance> weaponList_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoWeaponInstance>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoWeaponInstance> WeaponList {
      get { return weaponList_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoWeaponInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoWeaponInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!weaponList_.Equals(other.weaponList_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= weaponList_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      weaponList_.WriteTo(output, _repeated_weaponList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      weaponList_.WriteTo(ref output, _repeated_weaponList_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += weaponList_.CalculateSize(_repeated_weaponList_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoWeaponInventory other) {
      if (other == null) {
        return;
      }
      weaponList_.Add(other.weaponList_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            weaponList_.AddEntriesFrom(input, _repeated_weaponList_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            weaponList_.AddEntriesFrom(ref input, _repeated_weaponList_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoWeaponInstance : pb::IMessage<ProtoWeaponInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoWeaponInstance> _parser = new pb::MessageParser<ProtoWeaponInstance>(() => new ProtoWeaponInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoWeaponInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponInstance(ProtoWeaponInstance other) : this() {
      baseWeaponId_ = other.baseWeaponId_;
      subWeaponUnlock_ = other.subWeaponUnlock_;
      hpStatMod_ = other.hpStatMod_;
      attackStatMod_ = other.attackStatMod_;
      breakStatMod_ = other.breakStatMod_;
      magicStatMod_ = other.magicStatMod_;
      speedStatMod_ = other.speedStatMod_;
      defenseStatMod_ = other.defenseStatMod_;
      critChanceStatMod_ = other.critChanceStatMod_;
      ultimateBoost_ = other.ultimateBoost_;
      autoAbilities_ = other.autoAbilities_.Clone();
      createdAt_ = other.createdAt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponInstance Clone() {
      return new ProtoWeaponInstance(this);
    }

    /// <summary>Field number for the "base_weapon_id" field.</summary>
    public const int BaseWeaponIdFieldNumber = 1;
    private string baseWeaponId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BaseWeaponId {
      get { return baseWeaponId_; }
      set {
        baseWeaponId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub_weapon_unlock" field.</summary>
    public const int SubWeaponUnlockFieldNumber = 2;
    private int subWeaponUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubWeaponUnlock {
      get { return subWeaponUnlock_; }
      set {
        subWeaponUnlock_ = value;
      }
    }

    /// <summary>Field number for the "hp_stat_mod" field.</summary>
    public const int HpStatModFieldNumber = 3;
    private int hpStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HpStatMod {
      get { return hpStatMod_; }
      set {
        hpStatMod_ = value;
      }
    }

    /// <summary>Field number for the "attack_stat_mod" field.</summary>
    public const int AttackStatModFieldNumber = 4;
    private int attackStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackStatMod {
      get { return attackStatMod_; }
      set {
        attackStatMod_ = value;
      }
    }

    /// <summary>Field number for the "break_stat_mod" field.</summary>
    public const int BreakStatModFieldNumber = 5;
    private int breakStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BreakStatMod {
      get { return breakStatMod_; }
      set {
        breakStatMod_ = value;
      }
    }

    /// <summary>Field number for the "magic_stat_mod" field.</summary>
    public const int MagicStatModFieldNumber = 6;
    private int magicStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicStatMod {
      get { return magicStatMod_; }
      set {
        magicStatMod_ = value;
      }
    }

    /// <summary>Field number for the "speed_stat_mod" field.</summary>
    public const int SpeedStatModFieldNumber = 7;
    private int speedStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedStatMod {
      get { return speedStatMod_; }
      set {
        speedStatMod_ = value;
      }
    }

    /// <summary>Field number for the "defense_stat_mod" field.</summary>
    public const int DefenseStatModFieldNumber = 8;
    private int defenseStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefenseStatMod {
      get { return defenseStatMod_; }
      set {
        defenseStatMod_ = value;
      }
    }

    /// <summary>Field number for the "crit_chance_stat_mod" field.</summary>
    public const int CritChanceStatModFieldNumber = 9;
    private int critChanceStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CritChanceStatMod {
      get { return critChanceStatMod_; }
      set {
        critChanceStatMod_ = value;
      }
    }

    /// <summary>Field number for the "ultimate_boost" field.</summary>
    public const int UltimateBoostFieldNumber = 10;
    private int ultimateBoost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UltimateBoost {
      get { return ultimateBoost_; }
      set {
        ultimateBoost_ = value;
      }
    }

    /// <summary>Field number for the "auto_abilities" field.</summary>
    public const int AutoAbilitiesFieldNumber = 11;
    private static readonly pbc::MapField<string, int>.Codec _map_autoAbilities_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 90);
    private readonly pbc::MapField<string, int> autoAbilities_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> AutoAbilities {
      get { return autoAbilities_; }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 12;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoWeaponInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoWeaponInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BaseWeaponId != other.BaseWeaponId) return false;
      if (SubWeaponUnlock != other.SubWeaponUnlock) return false;
      if (HpStatMod != other.HpStatMod) return false;
      if (AttackStatMod != other.AttackStatMod) return false;
      if (BreakStatMod != other.BreakStatMod) return false;
      if (MagicStatMod != other.MagicStatMod) return false;
      if (SpeedStatMod != other.SpeedStatMod) return false;
      if (DefenseStatMod != other.DefenseStatMod) return false;
      if (CritChanceStatMod != other.CritChanceStatMod) return false;
      if (UltimateBoost != other.UltimateBoost) return false;
      if (!AutoAbilities.Equals(other.AutoAbilities)) return false;
      if (CreatedAt != other.CreatedAt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BaseWeaponId.Length != 0) hash ^= BaseWeaponId.GetHashCode();
      if (SubWeaponUnlock != 0) hash ^= SubWeaponUnlock.GetHashCode();
      if (HpStatMod != 0) hash ^= HpStatMod.GetHashCode();
      if (AttackStatMod != 0) hash ^= AttackStatMod.GetHashCode();
      if (BreakStatMod != 0) hash ^= BreakStatMod.GetHashCode();
      if (MagicStatMod != 0) hash ^= MagicStatMod.GetHashCode();
      if (SpeedStatMod != 0) hash ^= SpeedStatMod.GetHashCode();
      if (DefenseStatMod != 0) hash ^= DefenseStatMod.GetHashCode();
      if (CritChanceStatMod != 0) hash ^= CritChanceStatMod.GetHashCode();
      if (UltimateBoost != 0) hash ^= UltimateBoost.GetHashCode();
      hash ^= AutoAbilities.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BaseWeaponId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BaseWeaponId);
      }
      if (SubWeaponUnlock != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubWeaponUnlock);
      }
      if (HpStatMod != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HpStatMod);
      }
      if (AttackStatMod != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(UltimateBoost);
      }
      autoAbilities_.WriteTo(output, _map_autoAbilities_codec);
      if (CreatedAt != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BaseWeaponId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BaseWeaponId);
      }
      if (SubWeaponUnlock != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubWeaponUnlock);
      }
      if (HpStatMod != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HpStatMod);
      }
      if (AttackStatMod != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(UltimateBoost);
      }
      autoAbilities_.WriteTo(ref output, _map_autoAbilities_codec);
      if (CreatedAt != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(CreatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BaseWeaponId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BaseWeaponId);
      }
      if (SubWeaponUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubWeaponUnlock);
      }
      if (HpStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpStatMod);
      }
      if (AttackStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UltimateBoost);
      }
      size += autoAbilities_.CalculateSize(_map_autoAbilities_codec);
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoWeaponInstance other) {
      if (other == null) {
        return;
      }
      if (other.BaseWeaponId.Length != 0) {
        BaseWeaponId = other.BaseWeaponId;
      }
      if (other.SubWeaponUnlock != 0) {
        SubWeaponUnlock = other.SubWeaponUnlock;
      }
      if (other.HpStatMod != 0) {
        HpStatMod = other.HpStatMod;
      }
      if (other.AttackStatMod != 0) {
        AttackStatMod = other.AttackStatMod;
      }
      if (other.BreakStatMod != 0) {
        BreakStatMod = other.BreakStatMod;
      }
      if (other.MagicStatMod != 0) {
        MagicStatMod = other.MagicStatMod;
      }
      if (other.SpeedStatMod != 0) {
        SpeedStatMod = other.SpeedStatMod;
      }
      if (other.DefenseStatMod != 0) {
        DefenseStatMod = other.DefenseStatMod;
      }
      if (other.CritChanceStatMod != 0) {
        CritChanceStatMod = other.CritChanceStatMod;
      }
      if (other.UltimateBoost != 0) {
        UltimateBoost = other.UltimateBoost;
      }
      autoAbilities_.Add(other.autoAbilities_);
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BaseWeaponId = input.ReadString();
            break;
          }
          case 16: {
            SubWeaponUnlock = input.ReadInt32();
            break;
          }
          case 24: {
            HpStatMod = input.ReadInt32();
            break;
          }
          case 32: {
            AttackStatMod = input.ReadInt32();
            break;
          }
          case 40: {
            BreakStatMod = input.ReadInt32();
            break;
          }
          case 48: {
            MagicStatMod = input.ReadInt32();
            break;
          }
          case 56: {
            SpeedStatMod = input.ReadInt32();
            break;
          }
          case 64: {
            DefenseStatMod = input.ReadInt32();
            break;
          }
          case 72: {
            CritChanceStatMod = input.ReadInt32();
            break;
          }
          case 80: {
            UltimateBoost = input.ReadInt32();
            break;
          }
          case 90: {
            autoAbilities_.AddEntriesFrom(input, _map_autoAbilities_codec);
            break;
          }
          case 96: {
            CreatedAt = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            BaseWeaponId = input.ReadString();
            break;
          }
          case 16: {
            SubWeaponUnlock = input.ReadInt32();
            break;
          }
          case 24: {
            HpStatMod = input.ReadInt32();
            break;
          }
          case 32: {
            AttackStatMod = input.ReadInt32();
            break;
          }
          case 40: {
            BreakStatMod = input.ReadInt32();
            break;
          }
          case 48: {
            MagicStatMod = input.ReadInt32();
            break;
          }
          case 56: {
            SpeedStatMod = input.ReadInt32();
            break;
          }
          case 64: {
            DefenseStatMod = input.ReadInt32();
            break;
          }
          case 72: {
            CritChanceStatMod = input.ReadInt32();
            break;
          }
          case 80: {
            UltimateBoost = input.ReadInt32();
            break;
          }
          case 90: {
            autoAbilities_.AddEntriesFrom(ref input, _map_autoAbilities_codec);
            break;
          }
          case 96: {
            CreatedAt = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBattleStatistics : pb::IMessage<ProtoBattleStatistics>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBattleStatistics> _parser = new pb::MessageParser<ProtoBattleStatistics>(() => new ProtoBattleStatistics());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBattleStatistics> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleStatistics() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleStatistics(ProtoBattleStatistics other) : this() {
      totalScore_ = other.totalScore_;
      battleTurns_ = other.battleTurns_;
      abilitiesUsed_ = other.abilitiesUsed_;
      totalHpRegen_ = other.totalHpRegen_;
      totalDamageTaken_ = other.totalDamageTaken_;
      enemiesBroken_ = other.enemiesBroken_;
      elementOrbDraws_ = other.elementOrbDraws_.Clone();
      elementOrbUsage_ = other.elementOrbUsage_.Clone();
      enemyDefeats_ = other.enemyDefeats_.Clone();
      abilityCardUsage_ = other.abilityCardUsage_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleStatistics Clone() {
      return new ProtoBattleStatistics(this);
    }

    /// <summary>Field number for the "total_score" field.</summary>
    public const int TotalScoreFieldNumber = 1;
    private int totalScore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalScore {
      get { return totalScore_; }
      set {
        totalScore_ = value;
      }
    }

    /// <summary>Field number for the "battle_turns" field.</summary>
    public const int BattleTurnsFieldNumber = 2;
    private int battleTurns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BattleTurns {
      get { return battleTurns_; }
      set {
        battleTurns_ = value;
      }
    }

    /// <summary>Field number for the "abilities_used" field.</summary>
    public const int AbilitiesUsedFieldNumber = 4;
    private int abilitiesUsed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AbilitiesUsed {
      get { return abilitiesUsed_; }
      set {
        abilitiesUsed_ = value;
      }
    }

    /// <summary>Field number for the "total_hp_regen" field.</summary>
    public const int TotalHpRegenFieldNumber = 5;
    private int totalHpRegen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalHpRegen {
      get { return totalHpRegen_; }
      set {
        totalHpRegen_ = value;
      }
    }

    /// <summary>Field number for the "total_damage_taken" field.</summary>
    public const int TotalDamageTakenFieldNumber = 6;
    private int totalDamageTaken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TotalDamageTaken {
      get { return totalDamageTaken_; }
      set {
        totalDamageTaken_ = value;
      }
    }

    /// <summary>Field number for the "enemies_broken" field.</summary>
    public const int EnemiesBrokenFieldNumber = 8;
    private int enemiesBroken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int EnemiesBroken {
      get { return enemiesBroken_; }
      set {
        enemiesBroken_ = value;
      }
    }

    /// <summary>Field number for the "element_orb_draws" field.</summary>
    public const int ElementOrbDrawsFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ElementUsageStatistic> _repeated_elementOrbDraws_codec
        = pb::FieldCodec.ForMessage(90, global::Mobius.Proto.Game.ElementUsageStatistic.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ElementUsageStatistic> elementOrbDraws_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ElementUsageStatistic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ElementUsageStatistic> ElementOrbDraws {
      get { return elementOrbDraws_; }
    }

    /// <summary>Field number for the "element_orb_usage" field.</summary>
    public const int ElementOrbUsageFieldNumber = 12;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ElementUsageStatistic> _repeated_elementOrbUsage_codec
        = pb::FieldCodec.ForMessage(98, global::Mobius.Proto.Game.ElementUsageStatistic.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ElementUsageStatistic> elementOrbUsage_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ElementUsageStatistic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ElementUsageStatistic> ElementOrbUsage {
      get { return elementOrbUsage_; }
    }

    /// <summary>Field number for the "enemy_defeats" field.</summary>
    public const int EnemyDefeatsFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoEnemyDeathStatistic> _repeated_enemyDefeats_codec
        = pb::FieldCodec.ForMessage(114, global::Mobius.Proto.Game.ProtoEnemyDeathStatistic.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoEnemyDeathStatistic> enemyDefeats_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoEnemyDeathStatistic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoEnemyDeathStatistic> EnemyDefeats {
      get { return enemyDefeats_; }
    }

    /// <summary>Field number for the "ability_card_usage" field.</summary>
    public const int AbilityCardUsageFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.AbilityCardUsageStatistic> _repeated_abilityCardUsage_codec
        = pb::FieldCodec.ForMessage(122, global::Mobius.Proto.Game.AbilityCardUsageStatistic.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.AbilityCardUsageStatistic> abilityCardUsage_ = new pbc::RepeatedField<global::Mobius.Proto.Game.AbilityCardUsageStatistic>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.AbilityCardUsageStatistic> AbilityCardUsage {
      get { return abilityCardUsage_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBattleStatistics);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBattleStatistics other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TotalScore != other.TotalScore) return false;
      if (BattleTurns != other.BattleTurns) return false;
      if (AbilitiesUsed != other.AbilitiesUsed) return false;
      if (TotalHpRegen != other.TotalHpRegen) return false;
      if (TotalDamageTaken != other.TotalDamageTaken) return false;
      if (EnemiesBroken != other.EnemiesBroken) return false;
      if(!elementOrbDraws_.Equals(other.elementOrbDraws_)) return false;
      if(!elementOrbUsage_.Equals(other.elementOrbUsage_)) return false;
      if(!enemyDefeats_.Equals(other.enemyDefeats_)) return false;
      if(!abilityCardUsage_.Equals(other.abilityCardUsage_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TotalScore != 0) hash ^= TotalScore.GetHashCode();
      if (BattleTurns != 0) hash ^= BattleTurns.GetHashCode();
      if (AbilitiesUsed != 0) hash ^= AbilitiesUsed.GetHashCode();
      if (TotalHpRegen != 0) hash ^= TotalHpRegen.GetHashCode();
      if (TotalDamageTaken != 0) hash ^= TotalDamageTaken.GetHashCode();
      if (EnemiesBroken != 0) hash ^= EnemiesBroken.GetHashCode();
      hash ^= elementOrbDraws_.GetHashCode();
      hash ^= elementOrbUsage_.GetHashCode();
      hash ^= enemyDefeats_.GetHashCode();
      hash ^= abilityCardUsage_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TotalScore != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalScore);
      }
      if (BattleTurns != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BattleTurns);
      }
      if (AbilitiesUsed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AbilitiesUsed);
      }
      if (TotalHpRegen != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalHpRegen);
      }
      if (TotalDamageTaken != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalDamageTaken);
      }
      if (EnemiesBroken != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EnemiesBroken);
      }
      elementOrbDraws_.WriteTo(output, _repeated_elementOrbDraws_codec);
      elementOrbUsage_.WriteTo(output, _repeated_elementOrbUsage_codec);
      enemyDefeats_.WriteTo(output, _repeated_enemyDefeats_codec);
      abilityCardUsage_.WriteTo(output, _repeated_abilityCardUsage_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TotalScore != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TotalScore);
      }
      if (BattleTurns != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(BattleTurns);
      }
      if (AbilitiesUsed != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AbilitiesUsed);
      }
      if (TotalHpRegen != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TotalHpRegen);
      }
      if (TotalDamageTaken != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(TotalDamageTaken);
      }
      if (EnemiesBroken != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(EnemiesBroken);
      }
      elementOrbDraws_.WriteTo(ref output, _repeated_elementOrbDraws_codec);
      elementOrbUsage_.WriteTo(ref output, _repeated_elementOrbUsage_codec);
      enemyDefeats_.WriteTo(ref output, _repeated_enemyDefeats_codec);
      abilityCardUsage_.WriteTo(ref output, _repeated_abilityCardUsage_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TotalScore != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalScore);
      }
      if (BattleTurns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BattleTurns);
      }
      if (AbilitiesUsed != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilitiesUsed);
      }
      if (TotalHpRegen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalHpRegen);
      }
      if (TotalDamageTaken != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TotalDamageTaken);
      }
      if (EnemiesBroken != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(EnemiesBroken);
      }
      size += elementOrbDraws_.CalculateSize(_repeated_elementOrbDraws_codec);
      size += elementOrbUsage_.CalculateSize(_repeated_elementOrbUsage_codec);
      size += enemyDefeats_.CalculateSize(_repeated_enemyDefeats_codec);
      size += abilityCardUsage_.CalculateSize(_repeated_abilityCardUsage_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBattleStatistics other) {
      if (other == null) {
        return;
      }
      if (other.TotalScore != 0) {
        TotalScore = other.TotalScore;
      }
      if (other.BattleTurns != 0) {
        BattleTurns = other.BattleTurns;
      }
      if (other.AbilitiesUsed != 0) {
        AbilitiesUsed = other.AbilitiesUsed;
      }
      if (other.TotalHpRegen != 0) {
        TotalHpRegen = other.TotalHpRegen;
      }
      if (other.TotalDamageTaken != 0) {
        TotalDamageTaken = other.TotalDamageTaken;
      }
      if (other.EnemiesBroken != 0) {
        EnemiesBroken = other.EnemiesBroken;
      }
      elementOrbDraws_.Add(other.elementOrbDraws_);
      elementOrbUsage_.Add(other.elementOrbUsage_);
      enemyDefeats_.Add(other.enemyDefeats_);
      abilityCardUsage_.Add(other.abilityCardUsage_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TotalScore = input.ReadInt32();
            break;
          }
          case 16: {
            BattleTurns = input.ReadInt32();
            break;
          }
          case 32: {
            AbilitiesUsed = input.ReadInt32();
            break;
          }
          case 40: {
            TotalHpRegen = input.ReadInt32();
            break;
          }
          case 48: {
            TotalDamageTaken = input.ReadInt32();
            break;
          }
          case 64: {
            EnemiesBroken = input.ReadInt32();
            break;
          }
          case 90: {
            elementOrbDraws_.AddEntriesFrom(input, _repeated_elementOrbDraws_codec);
            break;
          }
          case 98: {
            elementOrbUsage_.AddEntriesFrom(input, _repeated_elementOrbUsage_codec);
            break;
          }
          case 114: {
            enemyDefeats_.AddEntriesFrom(input, _repeated_enemyDefeats_codec);
            break;
          }
          case 122: {
            abilityCardUsage_.AddEntriesFrom(input, _repeated_abilityCardUsage_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            TotalScore = input.ReadInt32();
            break;
          }
          case 16: {
            BattleTurns = input.ReadInt32();
            break;
          }
          case 32: {
            AbilitiesUsed = input.ReadInt32();
            break;
          }
          case 40: {
            TotalHpRegen = input.ReadInt32();
            break;
          }
          case 48: {
            TotalDamageTaken = input.ReadInt32();
            break;
          }
          case 64: {
            EnemiesBroken = input.ReadInt32();
            break;
          }
          case 90: {
            elementOrbDraws_.AddEntriesFrom(ref input, _repeated_elementOrbDraws_codec);
            break;
          }
          case 98: {
            elementOrbUsage_.AddEntriesFrom(ref input, _repeated_elementOrbUsage_codec);
            break;
          }
          case 114: {
            enemyDefeats_.AddEntriesFrom(ref input, _repeated_enemyDefeats_codec);
            break;
          }
          case 122: {
            abilityCardUsage_.AddEntriesFrom(ref input, _repeated_abilityCardUsage_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AbilityCardUsageStatistic : pb::IMessage<AbilityCardUsageStatistic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AbilityCardUsageStatistic> _parser = new pb::MessageParser<AbilityCardUsageStatistic>(() => new AbilityCardUsageStatistic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AbilityCardUsageStatistic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityCardUsageStatistic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityCardUsageStatistic(AbilityCardUsageStatistic other) : this() {
      instanceId_ = other.instanceId_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AbilityCardUsageStatistic Clone() {
      return new AbilityCardUsageStatistic(this);
    }

    /// <summary>Field number for the "instance_id" field.</summary>
    public const int InstanceIdFieldNumber = 1;
    private string instanceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceId {
      get { return instanceId_; }
      set {
        instanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AbilityCardUsageStatistic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AbilityCardUsageStatistic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstanceId != other.InstanceId) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (InstanceId.Length != 0) hash ^= InstanceId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceId);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstanceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstanceId);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (InstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AbilityCardUsageStatistic other) {
      if (other == null) {
        return;
      }
      if (other.InstanceId.Length != 0) {
        InstanceId = other.InstanceId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstanceId = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InstanceId = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ElementUsageStatistic : pb::IMessage<ElementUsageStatistic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ElementUsageStatistic> _parser = new pb::MessageParser<ElementUsageStatistic>(() => new ElementUsageStatistic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ElementUsageStatistic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElementUsageStatistic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElementUsageStatistic(ElementUsageStatistic other) : this() {
      elementId_ = other.elementId_;
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ElementUsageStatistic Clone() {
      return new ElementUsageStatistic(this);
    }

    /// <summary>Field number for the "element_id" field.</summary>
    public const int ElementIdFieldNumber = 1;
    private string elementId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ElementId {
      get { return elementId_; }
      set {
        elementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ElementUsageStatistic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ElementUsageStatistic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ElementId != other.ElementId) return false;
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ElementId.Length != 0) hash ^= ElementId.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ElementId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ElementId);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ElementId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ElementId);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ElementId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ElementId);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ElementUsageStatistic other) {
      if (other == null) {
        return;
      }
      if (other.ElementId.Length != 0) {
        ElementId = other.ElementId;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ElementId = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ElementId = input.ReadString();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoEnemyDeathStatistic : pb::IMessage<ProtoEnemyDeathStatistic>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoEnemyDeathStatistic> _parser = new pb::MessageParser<ProtoEnemyDeathStatistic>(() => new ProtoEnemyDeathStatistic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoEnemyDeathStatistic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoEnemyDeathStatistic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoEnemyDeathStatistic(ProtoEnemyDeathStatistic other) : this() {
      fiendId_ = other.fiendId_;
      elementId_ = other.elementId_;
      jobTypeId_ = other.jobTypeId_;
      fromWeakness_ = other.fromWeakness_;
      fromNormal_ = other.fromNormal_;
      fromUltimate_ = other.fromUltimate_;
      actionCount_ = other.actionCount_;
      waveIndex_ = other.waveIndex_;
      fiendIndex_ = other.fiendIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoEnemyDeathStatistic Clone() {
      return new ProtoEnemyDeathStatistic(this);
    }

    /// <summary>Field number for the "fiend_id" field.</summary>
    public const int FiendIdFieldNumber = 1;
    private string fiendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FiendId {
      get { return fiendId_; }
      set {
        fiendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "element_id" field.</summary>
    public const int ElementIdFieldNumber = 2;
    private string elementId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ElementId {
      get { return elementId_; }
      set {
        elementId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "job_type_id" field.</summary>
    public const int JobTypeIdFieldNumber = 3;
    private string jobTypeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobTypeId {
      get { return jobTypeId_; }
      set {
        jobTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_weakness" field.</summary>
    public const int FromWeaknessFieldNumber = 4;
    private bool fromWeakness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FromWeakness {
      get { return fromWeakness_; }
      set {
        fromWeakness_ = value;
      }
    }

    /// <summary>Field number for the "from_normal" field.</summary>
    public const int FromNormalFieldNumber = 5;
    private bool fromNormal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FromNormal {
      get { return fromNormal_; }
      set {
        fromNormal_ = value;
      }
    }

    /// <summary>Field number for the "from_ultimate" field.</summary>
    public const int FromUltimateFieldNumber = 6;
    private bool fromUltimate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool FromUltimate {
      get { return fromUltimate_; }
      set {
        fromUltimate_ = value;
      }
    }

    /// <summary>Field number for the "action_count" field.</summary>
    public const int ActionCountFieldNumber = 7;
    private int actionCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ActionCount {
      get { return actionCount_; }
      set {
        actionCount_ = value;
      }
    }

    /// <summary>Field number for the "wave_index" field.</summary>
    public const int WaveIndexFieldNumber = 8;
    private int waveIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int WaveIndex {
      get { return waveIndex_; }
      set {
        waveIndex_ = value;
      }
    }

    /// <summary>Field number for the "fiend_index" field.</summary>
    public const int FiendIndexFieldNumber = 9;
    private int fiendIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int FiendIndex {
      get { return fiendIndex_; }
      set {
        fiendIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoEnemyDeathStatistic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoEnemyDeathStatistic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FiendId != other.FiendId) return false;
      if (ElementId != other.ElementId) return false;
      if (JobTypeId != other.JobTypeId) return false;
      if (FromWeakness != other.FromWeakness) return false;
      if (FromNormal != other.FromNormal) return false;
      if (FromUltimate != other.FromUltimate) return false;
      if (ActionCount != other.ActionCount) return false;
      if (WaveIndex != other.WaveIndex) return false;
      if (FiendIndex != other.FiendIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FiendId.Length != 0) hash ^= FiendId.GetHashCode();
      if (ElementId.Length != 0) hash ^= ElementId.GetHashCode();
      if (JobTypeId.Length != 0) hash ^= JobTypeId.GetHashCode();
      if (FromWeakness != false) hash ^= FromWeakness.GetHashCode();
      if (FromNormal != false) hash ^= FromNormal.GetHashCode();
      if (FromUltimate != false) hash ^= FromUltimate.GetHashCode();
      if (ActionCount != 0) hash ^= ActionCount.GetHashCode();
      if (WaveIndex != 0) hash ^= WaveIndex.GetHashCode();
      if (FiendIndex != 0) hash ^= FiendIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (FiendId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FiendId);
      }
      if (ElementId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ElementId);
      }
      if (JobTypeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JobTypeId);
      }
      if (FromWeakness != false) {
        output.WriteRawTag(32);
        output.WriteBool(FromWeakness);
      }
      if (FromNormal != false) {
        output.WriteRawTag(40);
        output.WriteBool(FromNormal);
      }
      if (FromUltimate != false) {
        output.WriteRawTag(48);
        output.WriteBool(FromUltimate);
      }
      if (ActionCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ActionCount);
      }
      if (WaveIndex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(WaveIndex);
      }
      if (FiendIndex != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FiendIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (FiendId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FiendId);
      }
      if (ElementId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ElementId);
      }
      if (JobTypeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(JobTypeId);
      }
      if (FromWeakness != false) {
        output.WriteRawTag(32);
        output.WriteBool(FromWeakness);
      }
      if (FromNormal != false) {
        output.WriteRawTag(40);
        output.WriteBool(FromNormal);
      }
      if (FromUltimate != false) {
        output.WriteRawTag(48);
        output.WriteBool(FromUltimate);
      }
      if (ActionCount != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(ActionCount);
      }
      if (WaveIndex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(WaveIndex);
      }
      if (FiendIndex != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(FiendIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FiendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FiendId);
      }
      if (ElementId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ElementId);
      }
      if (JobTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobTypeId);
      }
      if (FromWeakness != false) {
        size += 1 + 1;
      }
      if (FromNormal != false) {
        size += 1 + 1;
      }
      if (FromUltimate != false) {
        size += 1 + 1;
      }
      if (ActionCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ActionCount);
      }
      if (WaveIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(WaveIndex);
      }
      if (FiendIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(FiendIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoEnemyDeathStatistic other) {
      if (other == null) {
        return;
      }
      if (other.FiendId.Length != 0) {
        FiendId = other.FiendId;
      }
      if (other.ElementId.Length != 0) {
        ElementId = other.ElementId;
      }
      if (other.JobTypeId.Length != 0) {
        JobTypeId = other.JobTypeId;
      }
      if (other.FromWeakness != false) {
        FromWeakness = other.FromWeakness;
      }
      if (other.FromNormal != false) {
        FromNormal = other.FromNormal;
      }
      if (other.FromUltimate != false) {
        FromUltimate = other.FromUltimate;
      }
      if (other.ActionCount != 0) {
        ActionCount = other.ActionCount;
      }
      if (other.WaveIndex != 0) {
        WaveIndex = other.WaveIndex;
      }
      if (other.FiendIndex != 0) {
        FiendIndex = other.FiendIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FiendId = input.ReadString();
            break;
          }
          case 18: {
            ElementId = input.ReadString();
            break;
          }
          case 26: {
            JobTypeId = input.ReadString();
            break;
          }
          case 32: {
            FromWeakness = input.ReadBool();
            break;
          }
          case 40: {
            FromNormal = input.ReadBool();
            break;
          }
          case 48: {
            FromUltimate = input.ReadBool();
            break;
          }
          case 56: {
            ActionCount = input.ReadInt32();
            break;
          }
          case 64: {
            WaveIndex = input.ReadInt32();
            break;
          }
          case 72: {
            FiendIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            FiendId = input.ReadString();
            break;
          }
          case 18: {
            ElementId = input.ReadString();
            break;
          }
          case 26: {
            JobTypeId = input.ReadString();
            break;
          }
          case 32: {
            FromWeakness = input.ReadBool();
            break;
          }
          case 40: {
            FromNormal = input.ReadBool();
            break;
          }
          case 48: {
            FromUltimate = input.ReadBool();
            break;
          }
          case 56: {
            ActionCount = input.ReadInt32();
            break;
          }
          case 64: {
            WaveIndex = input.ReadInt32();
            break;
          }
          case 72: {
            FiendIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardSummonDrawResult : pb::IMessage<ProtoAbilityCardSummonDrawResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardSummonDrawResult> _parser = new pb::MessageParser<ProtoAbilityCardSummonDrawResult>(() => new ProtoAbilityCardSummonDrawResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardSummonDrawResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardSummonDrawResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardSummonDrawResult(ProtoAbilityCardSummonDrawResult other) : this() {
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      index_ = other.index_;
      newCard_ = other.newCard_;
      upgradeCard_ = other.upgradeCard_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardSummonDrawResult Clone() {
      return new ProtoAbilityCardSummonDrawResult(this);
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoAbilityCardInstance instance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoAbilityCardInstance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 2;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "new_card" field.</summary>
    public const int NewCardFieldNumber = 3;
    private bool newCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool NewCard {
      get { return newCard_; }
      set {
        newCard_ = value;
      }
    }

    /// <summary>Field number for the "upgrade_card" field.</summary>
    public const int UpgradeCardFieldNumber = 4;
    private bool upgradeCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UpgradeCard {
      get { return upgradeCard_; }
      set {
        upgradeCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardSummonDrawResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardSummonDrawResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Instance, other.Instance)) return false;
      if (Index != other.Index) return false;
      if (NewCard != other.NewCard) return false;
      if (UpgradeCard != other.UpgradeCard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (NewCard != false) hash ^= NewCard.GetHashCode();
      if (UpgradeCard != false) hash ^= UpgradeCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (instance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instance);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (NewCard != false) {
        output.WriteRawTag(24);
        output.WriteBool(NewCard);
      }
      if (UpgradeCard != false) {
        output.WriteRawTag(32);
        output.WriteBool(UpgradeCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (instance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instance);
      }
      if (Index != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Index);
      }
      if (NewCard != false) {
        output.WriteRawTag(24);
        output.WriteBool(NewCard);
      }
      if (UpgradeCard != false) {
        output.WriteRawTag(32);
        output.WriteBool(UpgradeCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (NewCard != false) {
        size += 1 + 1;
      }
      if (UpgradeCard != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardSummonDrawResult other) {
      if (other == null) {
        return;
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Mobius.Proto.Game.ProtoAbilityCardInstance();
        }
        Instance.MergeFrom(other.Instance);
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.NewCard != false) {
        NewCard = other.NewCard;
      }
      if (other.UpgradeCard != false) {
        UpgradeCard = other.UpgradeCard;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoAbilityCardInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 24: {
            NewCard = input.ReadBool();
            break;
          }
          case 32: {
            UpgradeCard = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoAbilityCardInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 16: {
            Index = input.ReadInt32();
            break;
          }
          case 24: {
            NewCard = input.ReadBool();
            break;
          }
          case 32: {
            UpgradeCard = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoJobCardSummonDrawResult : pb::IMessage<ProtoJobCardSummonDrawResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoJobCardSummonDrawResult> _parser = new pb::MessageParser<ProtoJobCardSummonDrawResult>(() => new ProtoJobCardSummonDrawResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoJobCardSummonDrawResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardSummonDrawResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardSummonDrawResult(ProtoJobCardSummonDrawResult other) : this() {
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      skillPanelGroups_ = other.skillPanelGroups_ != null ? other.skillPanelGroups_.Clone() : null;
      index_ = other.index_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardSummonDrawResult Clone() {
      return new ProtoJobCardSummonDrawResult(this);
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoJobCardInstance instance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoJobCardInstance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    /// <summary>Field number for the "skill_panel_groups" field.</summary>
    public const int SkillPanelGroupsFieldNumber = 2;
    private global::Mobius.Proto.Game.ProtoSkillPanelGroups skillPanelGroups_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoSkillPanelGroups SkillPanelGroups {
      get { return skillPanelGroups_; }
      set {
        skillPanelGroups_ = value;
      }
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 3;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoJobCardSummonDrawResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoJobCardSummonDrawResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Instance, other.Instance)) return false;
      if (!object.Equals(SkillPanelGroups, other.SkillPanelGroups)) return false;
      if (Index != other.Index) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (skillPanelGroups_ != null) hash ^= SkillPanelGroups.GetHashCode();
      if (Index != 0) hash ^= Index.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (instance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instance);
      }
      if (skillPanelGroups_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SkillPanelGroups);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (instance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instance);
      }
      if (skillPanelGroups_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SkillPanelGroups);
      }
      if (Index != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Index);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (skillPanelGroups_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkillPanelGroups);
      }
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoJobCardSummonDrawResult other) {
      if (other == null) {
        return;
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Mobius.Proto.Game.ProtoJobCardInstance();
        }
        Instance.MergeFrom(other.Instance);
      }
      if (other.skillPanelGroups_ != null) {
        if (skillPanelGroups_ == null) {
          SkillPanelGroups = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
        }
        SkillPanelGroups.MergeFrom(other.SkillPanelGroups);
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoJobCardInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 18: {
            if (skillPanelGroups_ == null) {
              SkillPanelGroups = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
            }
            input.ReadMessage(SkillPanelGroups);
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoJobCardInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 18: {
            if (skillPanelGroups_ == null) {
              SkillPanelGroups = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
            }
            input.ReadMessage(SkillPanelGroups);
            break;
          }
          case 24: {
            Index = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoMailboxClaimResult : pb::IMessage<ProtoMailboxClaimResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoMailboxClaimResult> _parser = new pb::MessageParser<ProtoMailboxClaimResult>(() => new ProtoMailboxClaimResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoMailboxClaimResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailboxClaimResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailboxClaimResult(ProtoMailboxClaimResult other) : this() {
      item_ = other.item_ != null ? other.item_.Clone() : null;
      abilityCard_ = other.abilityCard_ != null ? other.abilityCard_.Clone() : null;
      jobCard_ = other.jobCard_ != null ? other.jobCard_.Clone() : null;
      weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoMailboxClaimResult Clone() {
      return new ProtoMailboxClaimResult(this);
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoItemClaimResult item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoItemClaimResult Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    /// <summary>Field number for the "ability_card" field.</summary>
    public const int AbilityCardFieldNumber = 2;
    private global::Mobius.Proto.Game.ProtoAbilityCardClaimResult abilityCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoAbilityCardClaimResult AbilityCard {
      get { return abilityCard_; }
      set {
        abilityCard_ = value;
      }
    }

    /// <summary>Field number for the "job_card" field.</summary>
    public const int JobCardFieldNumber = 3;
    private global::Mobius.Proto.Game.ProtoJobCardClaimResult jobCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoJobCardClaimResult JobCard {
      get { return jobCard_; }
      set {
        jobCard_ = value;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 4;
    private global::Mobius.Proto.Game.ProtoWeaponClaimResult weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoWeaponClaimResult Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoMailboxClaimResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoMailboxClaimResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Item, other.Item)) return false;
      if (!object.Equals(AbilityCard, other.AbilityCard)) return false;
      if (!object.Equals(JobCard, other.JobCard)) return false;
      if (!object.Equals(Weapon, other.Weapon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (item_ != null) hash ^= Item.GetHashCode();
      if (abilityCard_ != null) hash ^= AbilityCard.GetHashCode();
      if (jobCard_ != null) hash ^= JobCard.GetHashCode();
      if (weapon_ != null) hash ^= Weapon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (abilityCard_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AbilityCard);
      }
      if (jobCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(JobCard);
      }
      if (weapon_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Weapon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (item_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Item);
      }
      if (abilityCard_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AbilityCard);
      }
      if (jobCard_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(JobCard);
      }
      if (weapon_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Weapon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (abilityCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AbilityCard);
      }
      if (jobCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobCard);
      }
      if (weapon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoMailboxClaimResult other) {
      if (other == null) {
        return;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          Item = new global::Mobius.Proto.Game.ProtoItemClaimResult();
        }
        Item.MergeFrom(other.Item);
      }
      if (other.abilityCard_ != null) {
        if (abilityCard_ == null) {
          AbilityCard = new global::Mobius.Proto.Game.ProtoAbilityCardClaimResult();
        }
        AbilityCard.MergeFrom(other.AbilityCard);
      }
      if (other.jobCard_ != null) {
        if (jobCard_ == null) {
          JobCard = new global::Mobius.Proto.Game.ProtoJobCardClaimResult();
        }
        JobCard.MergeFrom(other.JobCard);
      }
      if (other.weapon_ != null) {
        if (weapon_ == null) {
          Weapon = new global::Mobius.Proto.Game.ProtoWeaponClaimResult();
        }
        Weapon.MergeFrom(other.Weapon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Mobius.Proto.Game.ProtoItemClaimResult();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            if (abilityCard_ == null) {
              AbilityCard = new global::Mobius.Proto.Game.ProtoAbilityCardClaimResult();
            }
            input.ReadMessage(AbilityCard);
            break;
          }
          case 26: {
            if (jobCard_ == null) {
              JobCard = new global::Mobius.Proto.Game.ProtoJobCardClaimResult();
            }
            input.ReadMessage(JobCard);
            break;
          }
          case 34: {
            if (weapon_ == null) {
              Weapon = new global::Mobius.Proto.Game.ProtoWeaponClaimResult();
            }
            input.ReadMessage(Weapon);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (item_ == null) {
              Item = new global::Mobius.Proto.Game.ProtoItemClaimResult();
            }
            input.ReadMessage(Item);
            break;
          }
          case 18: {
            if (abilityCard_ == null) {
              AbilityCard = new global::Mobius.Proto.Game.ProtoAbilityCardClaimResult();
            }
            input.ReadMessage(AbilityCard);
            break;
          }
          case 26: {
            if (jobCard_ == null) {
              JobCard = new global::Mobius.Proto.Game.ProtoJobCardClaimResult();
            }
            input.ReadMessage(JobCard);
            break;
          }
          case 34: {
            if (weapon_ == null) {
              Weapon = new global::Mobius.Proto.Game.ProtoWeaponClaimResult();
            }
            input.ReadMessage(Weapon);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoItemClaimResult : pb::IMessage<ProtoItemClaimResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoItemClaimResult> _parser = new pb::MessageParser<ProtoItemClaimResult>(() => new ProtoItemClaimResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoItemClaimResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemClaimResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemClaimResult(ProtoItemClaimResult other) : this() {
      itemId_ = other.itemId_;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoItemClaimResult Clone() {
      return new ProtoItemClaimResult(this);
    }

    /// <summary>Field number for the "item_id" field.</summary>
    public const int ItemIdFieldNumber = 1;
    private string itemId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ItemId {
      get { return itemId_; }
      set {
        itemId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private int quantity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoItemClaimResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoItemClaimResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ItemId != other.ItemId) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ItemId.Length != 0) hash ^= ItemId.GetHashCode();
      if (Quantity != 0) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ItemId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ItemId);
      }
      if (Quantity != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ItemId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ItemId);
      }
      if (Quantity != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoItemClaimResult other) {
      if (other == null) {
        return;
      }
      if (other.ItemId.Length != 0) {
        ItemId = other.ItemId;
      }
      if (other.Quantity != 0) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ItemId = input.ReadString();
            break;
          }
          case 16: {
            Quantity = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardClaimResult : pb::IMessage<ProtoAbilityCardClaimResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardClaimResult> _parser = new pb::MessageParser<ProtoAbilityCardClaimResult>(() => new ProtoAbilityCardClaimResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardClaimResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardClaimResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardClaimResult(ProtoAbilityCardClaimResult other) : this() {
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardClaimResult Clone() {
      return new ProtoAbilityCardClaimResult(this);
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoAbilityCardInstance instance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoAbilityCardInstance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardClaimResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardClaimResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Instance, other.Instance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (instance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (instance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardClaimResult other) {
      if (other == null) {
        return;
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Mobius.Proto.Game.ProtoAbilityCardInstance();
        }
        Instance.MergeFrom(other.Instance);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoAbilityCardInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoAbilityCardInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoJobCardClaimResult : pb::IMessage<ProtoJobCardClaimResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoJobCardClaimResult> _parser = new pb::MessageParser<ProtoJobCardClaimResult>(() => new ProtoJobCardClaimResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoJobCardClaimResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardClaimResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardClaimResult(ProtoJobCardClaimResult other) : this() {
      instance_ = other.instance_ != null ? other.instance_.Clone() : null;
      skillPanelGroups_ = other.skillPanelGroups_ != null ? other.skillPanelGroups_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoJobCardClaimResult Clone() {
      return new ProtoJobCardClaimResult(this);
    }

    /// <summary>Field number for the "instance" field.</summary>
    public const int InstanceFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoJobCardInstance instance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoJobCardInstance Instance {
      get { return instance_; }
      set {
        instance_ = value;
      }
    }

    /// <summary>Field number for the "skill_panel_groups" field.</summary>
    public const int SkillPanelGroupsFieldNumber = 2;
    private global::Mobius.Proto.Game.ProtoSkillPanelGroups skillPanelGroups_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoSkillPanelGroups SkillPanelGroups {
      get { return skillPanelGroups_; }
      set {
        skillPanelGroups_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoJobCardClaimResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoJobCardClaimResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Instance, other.Instance)) return false;
      if (!object.Equals(SkillPanelGroups, other.SkillPanelGroups)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (instance_ != null) hash ^= Instance.GetHashCode();
      if (skillPanelGroups_ != null) hash ^= SkillPanelGroups.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (instance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instance);
      }
      if (skillPanelGroups_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SkillPanelGroups);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (instance_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Instance);
      }
      if (skillPanelGroups_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SkillPanelGroups);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (instance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Instance);
      }
      if (skillPanelGroups_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SkillPanelGroups);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoJobCardClaimResult other) {
      if (other == null) {
        return;
      }
      if (other.instance_ != null) {
        if (instance_ == null) {
          Instance = new global::Mobius.Proto.Game.ProtoJobCardInstance();
        }
        Instance.MergeFrom(other.Instance);
      }
      if (other.skillPanelGroups_ != null) {
        if (skillPanelGroups_ == null) {
          SkillPanelGroups = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
        }
        SkillPanelGroups.MergeFrom(other.SkillPanelGroups);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoJobCardInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 18: {
            if (skillPanelGroups_ == null) {
              SkillPanelGroups = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
            }
            input.ReadMessage(SkillPanelGroups);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (instance_ == null) {
              Instance = new global::Mobius.Proto.Game.ProtoJobCardInstance();
            }
            input.ReadMessage(Instance);
            break;
          }
          case 18: {
            if (skillPanelGroups_ == null) {
              SkillPanelGroups = new global::Mobius.Proto.Game.ProtoSkillPanelGroups();
            }
            input.ReadMessage(SkillPanelGroups);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoWeaponClaimResult : pb::IMessage<ProtoWeaponClaimResult>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoWeaponClaimResult> _parser = new pb::MessageParser<ProtoWeaponClaimResult>(() => new ProtoWeaponClaimResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoWeaponClaimResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponClaimResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponClaimResult(ProtoWeaponClaimResult other) : this() {
      weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoWeaponClaimResult Clone() {
      return new ProtoWeaponClaimResult(this);
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 1;
    private global::Mobius.Proto.Game.ProtoWeaponInstance weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Game.ProtoWeaponInstance Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoWeaponClaimResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoWeaponClaimResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Weapon, other.Weapon)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (weapon_ != null) hash ^= Weapon.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (weapon_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Weapon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (weapon_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Weapon);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (weapon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoWeaponClaimResult other) {
      if (other == null) {
        return;
      }
      if (other.weapon_ != null) {
        if (weapon_ == null) {
          Weapon = new global::Mobius.Proto.Game.ProtoWeaponInstance();
        }
        Weapon.MergeFrom(other.Weapon);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (weapon_ == null) {
              Weapon = new global::Mobius.Proto.Game.ProtoWeaponInstance();
            }
            input.ReadMessage(Weapon);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (weapon_ == null) {
              Weapon = new global::Mobius.Proto.Game.ProtoWeaponInstance();
            }
            input.ReadMessage(Weapon);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBattleSelection : pb::IMessage<ProtoBattleSelection>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBattleSelection> _parser = new pb::MessageParser<ProtoBattleSelection>(() => new ProtoBattleSelection());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBattleSelection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleSelection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleSelection(ProtoBattleSelection other) : this() {
      waves_ = other.waves_.Clone();
      seed_ = other.seed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleSelection Clone() {
      return new ProtoBattleSelection(this);
    }

    /// <summary>Field number for the "waves" field.</summary>
    public const int WavesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoBattleWave> _repeated_waves_codec
        = pb::FieldCodec.ForMessage(10, global::Mobius.Proto.Game.ProtoBattleWave.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleWave> waves_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleWave>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleWave> Waves {
      get { return waves_; }
    }

    /// <summary>Field number for the "seed" field.</summary>
    public const int SeedFieldNumber = 2;
    private long seed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Seed {
      get { return seed_; }
      set {
        seed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBattleSelection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBattleSelection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!waves_.Equals(other.waves_)) return false;
      if (Seed != other.Seed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= waves_.GetHashCode();
      if (Seed != 0L) hash ^= Seed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      waves_.WriteTo(output, _repeated_waves_codec);
      if (Seed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Seed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      waves_.WriteTo(ref output, _repeated_waves_codec);
      if (Seed != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Seed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += waves_.CalculateSize(_repeated_waves_codec);
      if (Seed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Seed);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBattleSelection other) {
      if (other == null) {
        return;
      }
      waves_.Add(other.waves_);
      if (other.Seed != 0L) {
        Seed = other.Seed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            waves_.AddEntriesFrom(input, _repeated_waves_codec);
            break;
          }
          case 16: {
            Seed = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            waves_.AddEntriesFrom(ref input, _repeated_waves_codec);
            break;
          }
          case 16: {
            Seed = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBattleWave : pb::IMessage<ProtoBattleWave>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBattleWave> _parser = new pb::MessageParser<ProtoBattleWave>(() => new ProtoBattleWave());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBattleWave> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleWave() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleWave(ProtoBattleWave other) : this() {
      index_ = other.index_;
      groups_ = other.groups_.Clone();
      levelOverride_ = other.levelOverride_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleWave Clone() {
      return new ProtoBattleWave(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "groups" field.</summary>
    public const int GroupsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Game.ProtoBattleWaveGroup> _repeated_groups_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Game.ProtoBattleWaveGroup.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleWaveGroup> groups_ = new pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleWaveGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Game.ProtoBattleWaveGroup> Groups {
      get { return groups_; }
    }

    /// <summary>Field number for the "level_override" field.</summary>
    public const int LevelOverrideFieldNumber = 3;
    private int levelOverride_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LevelOverride {
      get { return levelOverride_; }
      set {
        levelOverride_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBattleWave);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBattleWave other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if(!groups_.Equals(other.groups_)) return false;
      if (LevelOverride != other.LevelOverride) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      hash ^= groups_.GetHashCode();
      if (LevelOverride != 0) hash ^= LevelOverride.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      groups_.WriteTo(output, _repeated_groups_codec);
      if (LevelOverride != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LevelOverride);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      groups_.WriteTo(ref output, _repeated_groups_codec);
      if (LevelOverride != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(LevelOverride);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      size += groups_.CalculateSize(_repeated_groups_codec);
      if (LevelOverride != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LevelOverride);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBattleWave other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      groups_.Add(other.groups_);
      if (other.LevelOverride != 0) {
        LevelOverride = other.LevelOverride;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            groups_.AddEntriesFrom(input, _repeated_groups_codec);
            break;
          }
          case 24: {
            LevelOverride = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 18: {
            groups_.AddEntriesFrom(ref input, _repeated_groups_codec);
            break;
          }
          case 24: {
            LevelOverride = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoBattleWaveGroup : pb::IMessage<ProtoBattleWaveGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoBattleWaveGroup> _parser = new pb::MessageParser<ProtoBattleWaveGroup>(() => new ProtoBattleWaveGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoBattleWaveGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Game.DataReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleWaveGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleWaveGroup(ProtoBattleWaveGroup other) : this() {
      index_ = other.index_;
      count_ = other.count_;
      fiendId_ = other.fiendId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoBattleWaveGroup Clone() {
      return new ProtoBattleWaveGroup(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private int index_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Index {
      get { return index_; }
      set {
        index_ = value;
      }
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 2;
    private int count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "fiend_id" field.</summary>
    public const int FiendIdFieldNumber = 3;
    private string fiendId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FiendId {
      get { return fiendId_; }
      set {
        fiendId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoBattleWaveGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoBattleWaveGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (Count != other.Count) return false;
      if (FiendId != other.FiendId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index != 0) hash ^= Index.GetHashCode();
      if (Count != 0) hash ^= Count.GetHashCode();
      if (FiendId.Length != 0) hash ^= FiendId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (FiendId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FiendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Index != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Index);
      }
      if (Count != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Count);
      }
      if (FiendId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FiendId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Index);
      }
      if (Count != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Count);
      }
      if (FiendId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FiendId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoBattleWaveGroup other) {
      if (other == null) {
        return;
      }
      if (other.Index != 0) {
        Index = other.Index;
      }
      if (other.Count != 0) {
        Count = other.Count;
      }
      if (other.FiendId.Length != 0) {
        FiendId = other.FiendId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 26: {
            FiendId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Index = input.ReadInt32();
            break;
          }
          case 16: {
            Count = input.ReadInt32();
            break;
          }
          case 26: {
            FiendId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
