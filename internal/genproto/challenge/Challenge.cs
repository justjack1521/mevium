// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protochallenge/challenge.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mobius.Proto.Challenge {

  /// <summary>Holder for reflection information generated from protochallenge/challenge.proto</summary>
  public static partial class ChallengeReflection {

    #region Descriptor
    /// <summary>File descriptor for protochallenge/challenge.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChallengeReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch5wcm90b2NoYWxsZW5nZS9jaGFsbGVuZ2UucHJvdG8SCWNoYWxsZW5nZRoY",
            "cHJvdG9zb2NpYWwvc29jaWFsLnByb3RvIugBChxQcm90b1NvY2lhbENoYWxs",
            "ZW5nZUluc3RhbmNlEg4KBnN5c19pZBgBIAEoCRIUCgxjaGFsbGVuZ2VfaWQY",
            "AiABKAkSEgoKbWlzc2lvbl9pZBgDIAEoCRIVCg1yZWdpc3Rlcl90aW1lGAQg",
            "ASgDEhIKCnN0YXJ0X3RpbWUYBSABKAMSEAoIZW5kX3RpbWUYBiABKAMSDQoF",
            "c3RhdGUYByABKAUSQgoOcGxheWVyX2VudHJpZXMYCCADKAsyKi5jaGFsbGVu",
            "Z2UuUHJvdG9QbGF5ZXJTb2NpYWxDaGFsbGVuZ2VFbnRyeSLGAQofUHJvdG9Q",
            "bGF5ZXJTb2NpYWxDaGFsbGVuZ2VFbnRyeRIRCglwbGF5ZXJfaWQYASABKAkS",
            "EwoLcGxheWVyX25hbWUYAiABKAkSFAoMcGxheWVyX2xldmVsGAMgASgFEg0K",
            "BXNjb3JlGAQgASgDEgwKBHJhbmsYBSABKAMSNQoPcHJpbWFyeV9sb2Fkb3V0",
            "GAYgASgLMhwucHJlc2VuY2UuUHJvdG9QbGF5ZXJMb2Fkb3V0EhEKCWlzX3Bs",
            "YXllchgHIAEoCEJVWjpnaXRodWIuY29tL2p1c3RqYWNrMTUyMS9tZXZpdW0v",
            "cGtnL2dlbnByb3RvL3Byb3RvY2hhbGxlbmdlqgIWTW9iaXVzLlByb3RvLkNo",
            "YWxsZW5nZWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mobius.Proto.Social.SocialReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Challenge.ProtoSocialChallengeInstance), global::Mobius.Proto.Challenge.ProtoSocialChallengeInstance.Parser, new[]{ "SysId", "ChallengeId", "MissionId", "RegisterTime", "StartTime", "EndTime", "State", "PlayerEntries" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Challenge.ProtoPlayerSocialChallengeEntry), global::Mobius.Proto.Challenge.ProtoPlayerSocialChallengeEntry.Parser, new[]{ "PlayerId", "PlayerName", "PlayerLevel", "Score", "Rank", "PrimaryLoadout", "IsPlayer" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProtoSocialChallengeInstance : pb::IMessage<ProtoSocialChallengeInstance>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoSocialChallengeInstance> _parser = new pb::MessageParser<ProtoSocialChallengeInstance>(() => new ProtoSocialChallengeInstance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoSocialChallengeInstance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Challenge.ChallengeReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSocialChallengeInstance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSocialChallengeInstance(ProtoSocialChallengeInstance other) : this() {
      sysId_ = other.sysId_;
      challengeId_ = other.challengeId_;
      missionId_ = other.missionId_;
      registerTime_ = other.registerTime_;
      startTime_ = other.startTime_;
      endTime_ = other.endTime_;
      state_ = other.state_;
      playerEntries_ = other.playerEntries_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoSocialChallengeInstance Clone() {
      return new ProtoSocialChallengeInstance(this);
    }

    /// <summary>Field number for the "sys_id" field.</summary>
    public const int SysIdFieldNumber = 1;
    private string sysId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SysId {
      get { return sysId_; }
      set {
        sysId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "challenge_id" field.</summary>
    public const int ChallengeIdFieldNumber = 2;
    private string challengeId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChallengeId {
      get { return challengeId_; }
      set {
        challengeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mission_id" field.</summary>
    public const int MissionIdFieldNumber = 3;
    private string missionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MissionId {
      get { return missionId_; }
      set {
        missionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "register_time" field.</summary>
    public const int RegisterTimeFieldNumber = 4;
    private long registerTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RegisterTime {
      get { return registerTime_; }
      set {
        registerTime_ = value;
      }
    }

    /// <summary>Field number for the "start_time" field.</summary>
    public const int StartTimeFieldNumber = 5;
    private long startTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StartTime {
      get { return startTime_; }
      set {
        startTime_ = value;
      }
    }

    /// <summary>Field number for the "end_time" field.</summary>
    public const int EndTimeFieldNumber = 6;
    private long endTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EndTime {
      get { return endTime_; }
      set {
        endTime_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 7;
    private int state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "player_entries" field.</summary>
    public const int PlayerEntriesFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Challenge.ProtoPlayerSocialChallengeEntry> _repeated_playerEntries_codec
        = pb::FieldCodec.ForMessage(66, global::Mobius.Proto.Challenge.ProtoPlayerSocialChallengeEntry.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Challenge.ProtoPlayerSocialChallengeEntry> playerEntries_ = new pbc::RepeatedField<global::Mobius.Proto.Challenge.ProtoPlayerSocialChallengeEntry>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Challenge.ProtoPlayerSocialChallengeEntry> PlayerEntries {
      get { return playerEntries_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoSocialChallengeInstance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoSocialChallengeInstance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SysId != other.SysId) return false;
      if (ChallengeId != other.ChallengeId) return false;
      if (MissionId != other.MissionId) return false;
      if (RegisterTime != other.RegisterTime) return false;
      if (StartTime != other.StartTime) return false;
      if (EndTime != other.EndTime) return false;
      if (State != other.State) return false;
      if(!playerEntries_.Equals(other.playerEntries_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SysId.Length != 0) hash ^= SysId.GetHashCode();
      if (ChallengeId.Length != 0) hash ^= ChallengeId.GetHashCode();
      if (MissionId.Length != 0) hash ^= MissionId.GetHashCode();
      if (RegisterTime != 0L) hash ^= RegisterTime.GetHashCode();
      if (StartTime != 0L) hash ^= StartTime.GetHashCode();
      if (EndTime != 0L) hash ^= EndTime.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      hash ^= playerEntries_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (ChallengeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChallengeId);
      }
      if (MissionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MissionId);
      }
      if (RegisterTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RegisterTime);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(EndTime);
      }
      if (State != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(State);
      }
      playerEntries_.WriteTo(output, _repeated_playerEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SysId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SysId);
      }
      if (ChallengeId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ChallengeId);
      }
      if (MissionId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MissionId);
      }
      if (RegisterTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(RegisterTime);
      }
      if (StartTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StartTime);
      }
      if (EndTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(EndTime);
      }
      if (State != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(State);
      }
      playerEntries_.WriteTo(ref output, _repeated_playerEntries_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SysId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SysId);
      }
      if (ChallengeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChallengeId);
      }
      if (MissionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MissionId);
      }
      if (RegisterTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RegisterTime);
      }
      if (StartTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StartTime);
      }
      if (EndTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EndTime);
      }
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(State);
      }
      size += playerEntries_.CalculateSize(_repeated_playerEntries_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoSocialChallengeInstance other) {
      if (other == null) {
        return;
      }
      if (other.SysId.Length != 0) {
        SysId = other.SysId;
      }
      if (other.ChallengeId.Length != 0) {
        ChallengeId = other.ChallengeId;
      }
      if (other.MissionId.Length != 0) {
        MissionId = other.MissionId;
      }
      if (other.RegisterTime != 0L) {
        RegisterTime = other.RegisterTime;
      }
      if (other.StartTime != 0L) {
        StartTime = other.StartTime;
      }
      if (other.EndTime != 0L) {
        EndTime = other.EndTime;
      }
      if (other.State != 0) {
        State = other.State;
      }
      playerEntries_.Add(other.playerEntries_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            ChallengeId = input.ReadString();
            break;
          }
          case 26: {
            MissionId = input.ReadString();
            break;
          }
          case 32: {
            RegisterTime = input.ReadInt64();
            break;
          }
          case 40: {
            StartTime = input.ReadInt64();
            break;
          }
          case 48: {
            EndTime = input.ReadInt64();
            break;
          }
          case 56: {
            State = input.ReadInt32();
            break;
          }
          case 66: {
            playerEntries_.AddEntriesFrom(input, _repeated_playerEntries_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            SysId = input.ReadString();
            break;
          }
          case 18: {
            ChallengeId = input.ReadString();
            break;
          }
          case 26: {
            MissionId = input.ReadString();
            break;
          }
          case 32: {
            RegisterTime = input.ReadInt64();
            break;
          }
          case 40: {
            StartTime = input.ReadInt64();
            break;
          }
          case 48: {
            EndTime = input.ReadInt64();
            break;
          }
          case 56: {
            State = input.ReadInt32();
            break;
          }
          case 66: {
            playerEntries_.AddEntriesFrom(ref input, _repeated_playerEntries_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerSocialChallengeEntry : pb::IMessage<ProtoPlayerSocialChallengeEntry>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerSocialChallengeEntry> _parser = new pb::MessageParser<ProtoPlayerSocialChallengeEntry>(() => new ProtoPlayerSocialChallengeEntry());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerSocialChallengeEntry> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Challenge.ChallengeReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerSocialChallengeEntry() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerSocialChallengeEntry(ProtoPlayerSocialChallengeEntry other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerLevel_ = other.playerLevel_;
      score_ = other.score_;
      rank_ = other.rank_;
      primaryLoadout_ = other.primaryLoadout_ != null ? other.primaryLoadout_.Clone() : null;
      isPlayer_ = other.isPlayer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerSocialChallengeEntry Clone() {
      return new ProtoPlayerSocialChallengeEntry(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 3;
    private int playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private long score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "rank" field.</summary>
    public const int RankFieldNumber = 5;
    private long rank_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Rank {
      get { return rank_; }
      set {
        rank_ = value;
      }
    }

    /// <summary>Field number for the "primary_loadout" field.</summary>
    public const int PrimaryLoadoutFieldNumber = 6;
    private global::Mobius.Proto.Social.ProtoPlayerLoadout primaryLoadout_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Social.ProtoPlayerLoadout PrimaryLoadout {
      get { return primaryLoadout_; }
      set {
        primaryLoadout_ = value;
      }
    }

    /// <summary>Field number for the "is_player" field.</summary>
    public const int IsPlayerFieldNumber = 7;
    private bool isPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPlayer {
      get { return isPlayer_; }
      set {
        isPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerSocialChallengeEntry);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerSocialChallengeEntry other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (Score != other.Score) return false;
      if (Rank != other.Rank) return false;
      if (!object.Equals(PrimaryLoadout, other.PrimaryLoadout)) return false;
      if (IsPlayer != other.IsPlayer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (Score != 0L) hash ^= Score.GetHashCode();
      if (Rank != 0L) hash ^= Rank.GetHashCode();
      if (primaryLoadout_ != null) hash ^= PrimaryLoadout.GetHashCode();
      if (IsPlayer != false) hash ^= IsPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (Score != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Score);
      }
      if (Rank != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Rank);
      }
      if (primaryLoadout_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PrimaryLoadout);
      }
      if (IsPlayer != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (Score != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Score);
      }
      if (Rank != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Rank);
      }
      if (primaryLoadout_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(PrimaryLoadout);
      }
      if (IsPlayer != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (Score != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Score);
      }
      if (Rank != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Rank);
      }
      if (primaryLoadout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryLoadout);
      }
      if (IsPlayer != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerSocialChallengeEntry other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.Score != 0L) {
        Score = other.Score;
      }
      if (other.Rank != 0L) {
        Rank = other.Rank;
      }
      if (other.primaryLoadout_ != null) {
        if (primaryLoadout_ == null) {
          PrimaryLoadout = new global::Mobius.Proto.Social.ProtoPlayerLoadout();
        }
        PrimaryLoadout.MergeFrom(other.PrimaryLoadout);
      }
      if (other.IsPlayer != false) {
        IsPlayer = other.IsPlayer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            Score = input.ReadInt64();
            break;
          }
          case 40: {
            Rank = input.ReadInt64();
            break;
          }
          case 50: {
            if (primaryLoadout_ == null) {
              PrimaryLoadout = new global::Mobius.Proto.Social.ProtoPlayerLoadout();
            }
            input.ReadMessage(PrimaryLoadout);
            break;
          }
          case 56: {
            IsPlayer = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            Score = input.ReadInt64();
            break;
          }
          case 40: {
            Rank = input.ReadInt64();
            break;
          }
          case 50: {
            if (primaryLoadout_ == null) {
              PrimaryLoadout = new global::Mobius.Proto.Social.ProtoPlayerLoadout();
            }
            input.ReadMessage(PrimaryLoadout);
            break;
          }
          case 56: {
            IsPlayer = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
