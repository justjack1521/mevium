// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protomulti/multi.notification.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mobius.Proto.Multi {

  /// <summary>Holder for reflection information generated from protomulti/multi.notification.proto</summary>
  public static partial class MultiNotificationReflection {

    #region Descriptor
    /// <summary>File descriptor for protomulti/multi.notification.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MultiNotificationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiNwcm90b211bHRpL211bHRpLm5vdGlmaWNhdGlvbi5wcm90bxIFbXVsdGka",
            "FnByb3RvbXVsdGkvbXVsdGkucHJvdG8iKwoXTG9iYnlDYW5jZWxOb3RpZmlj",
            "YXRpb24SEAoIbG9iYnlfaWQYASABKAkiKgoWTG9iYnlTdGFydE5vdGlmaWNh",
            "dGlvbhIQCghsb2JieV9pZBgBIAEoCSKUAQobUGFydGljaXBhbnRKb2luTm90",
            "aWZpY2F0aW9uEhAKCGxvYmJ5X2lkGAEgASgJEhEKCXBsYXllcl9pZBgCIAEo",
            "CRISCgpkZWNrX2luZGV4GAMgASgFEhMKC3BsYXllcl9zbG90GAQgASgFEicK",
            "BnBsYXllchgFIAEoCzIXLm11bHRpLlByb3RvTG9iYnlQbGF5ZXIiWAocUGFy",
            "dGljaXBhbnRMZWF2ZU5vdGlmaWNhdGlvbhIQCghsb2JieV9pZBgBIAEoCRIR",
            "CglwbGF5ZXJfaWQYAiABKAkSEwoLcGxheWVyX3Nsb3QYAyABKAUiRQocUGFy",
            "dGljaXBhbnRSZWFkeU5vdGlmaWNhdGlvbhIQCghsb2JieV9pZBgBIAEoCRIT",
            "CgtwbGF5ZXJfc2xvdBgDIAEoBSJGCh5QYXJ0aWNpcGFudFVucmVhZHlOb3Rp",
            "ZmljYXRpb24SEAoIbG9iYnlfaWQYASABKAkSEgoKcGFydHlfc2xvdBgCIAEo",
            "BSJzCiFQYXJ0aWNpcGFudERlY2tDaGFuZ2VOb3RpZmljYXRpb24SEAoIbG9i",
            "YnlfaWQYASABKAkSEwoLcGxheWVyX3Nsb3QYAyABKAUSJwoGcGxheWVyGAQg",
            "ASgLMhcubXVsdGkuUHJvdG9Mb2JieVBsYXllciJPChVTdGFtcFNlbmROb3Rp",
            "ZmljYXRpb24SEAoIbG9iYnlfaWQYASABKAkSEAoIc3RhbXBfaWQYAiABKAkS",
            "EgoKcGFydHlfc2xvdBgDIAEoBSJRChVHYW1lU3RhcnROb3RpZmljYXRpb24S",
            "DwoHZ2FtZV9pZBgBIAEoCRInCgdwbGF5ZXJzGAIgAygLMhYubXVsdGkuUHJv",
            "dG9HYW1lUGxheWVyKtsBChpNdWx0aUxvYmJ5Tm90aWZpY2F0aW9uVHlwZRIJ",
            "CgVFTVBUWRAAEhQKEFBBUlRJQ0lQQU5UX0pPSU4QZBIWChFQQVJUSUNJUEFO",
            "VF9MRUFWRRDIARIWChFQQVJUSUNJUEFOVF9SRUFEWRCsAhIYChNQQVJUSUNJ",
            "UEFOVF9VTlJFQURZEJADEg8KClNUQU1QX1NFTkQQ9AMSHAoXUEFSVElDSVBB",
            "TlRfREVDS19DSEFOR0UQ2AQSEQoMTE9CQllfQ0FOQ0VMELwFEhAKC0xPQkJZ",
            "X1NUQVJUEKAGKjoKGU11bHRpR2FtZU5vdGlmaWNhdGlvblR5cGUSDQoJR0FN",
            "RV9OT05FEAASDgoKR0FNRV9TVEFSVBBkQk1aNmdpdGh1Yi5jb20vanVzdGph",
            "Y2sxNTIxL21ldml1bS9wa2cvZ2VucHJvdG8vcHJvdG9tdWx0aaoCEk1vYml1",
            "cy5Qcm90by5NdWx0aWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Mobius.Proto.Multi.MultiReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Mobius.Proto.Multi.MultiLobbyNotificationType), typeof(global::Mobius.Proto.Multi.MultiGameNotificationType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.LobbyCancelNotification), global::Mobius.Proto.Multi.LobbyCancelNotification.Parser, new[]{ "LobbyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.LobbyStartNotification), global::Mobius.Proto.Multi.LobbyStartNotification.Parser, new[]{ "LobbyId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.ParticipantJoinNotification), global::Mobius.Proto.Multi.ParticipantJoinNotification.Parser, new[]{ "LobbyId", "PlayerId", "DeckIndex", "PlayerSlot", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.ParticipantLeaveNotification), global::Mobius.Proto.Multi.ParticipantLeaveNotification.Parser, new[]{ "LobbyId", "PlayerId", "PlayerSlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.ParticipantReadyNotification), global::Mobius.Proto.Multi.ParticipantReadyNotification.Parser, new[]{ "LobbyId", "PlayerSlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.ParticipantUnreadyNotification), global::Mobius.Proto.Multi.ParticipantUnreadyNotification.Parser, new[]{ "LobbyId", "PartySlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.ParticipantDeckChangeNotification), global::Mobius.Proto.Multi.ParticipantDeckChangeNotification.Parser, new[]{ "LobbyId", "PlayerSlot", "Player" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.StampSendNotification), global::Mobius.Proto.Multi.StampSendNotification.Parser, new[]{ "LobbyId", "StampId", "PartySlot" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Multi.GameStartNotification), global::Mobius.Proto.Multi.GameStartNotification.Parser, new[]{ "GameId", "Players" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MultiLobbyNotificationType {
    [pbr::OriginalName("EMPTY")] Empty = 0,
    [pbr::OriginalName("PARTICIPANT_JOIN")] ParticipantJoin = 100,
    [pbr::OriginalName("PARTICIPANT_LEAVE")] ParticipantLeave = 200,
    [pbr::OriginalName("PARTICIPANT_READY")] ParticipantReady = 300,
    [pbr::OriginalName("PARTICIPANT_UNREADY")] ParticipantUnready = 400,
    [pbr::OriginalName("STAMP_SEND")] StampSend = 500,
    [pbr::OriginalName("PARTICIPANT_DECK_CHANGE")] ParticipantDeckChange = 600,
    [pbr::OriginalName("LOBBY_CANCEL")] LobbyCancel = 700,
    [pbr::OriginalName("LOBBY_START")] LobbyStart = 800,
  }

  public enum MultiGameNotificationType {
    [pbr::OriginalName("GAME_NONE")] GameNone = 0,
    [pbr::OriginalName("GAME_START")] GameStart = 100,
  }

  #endregion

  #region Messages
  public sealed partial class LobbyCancelNotification : pb::IMessage<LobbyCancelNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LobbyCancelNotification> _parser = new pb::MessageParser<LobbyCancelNotification>(() => new LobbyCancelNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyCancelNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCancelNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCancelNotification(LobbyCancelNotification other) : this() {
      lobbyId_ = other.lobbyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyCancelNotification Clone() {
      return new LobbyCancelNotification(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyCancelNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyCancelNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyCancelNotification other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class LobbyStartNotification : pb::IMessage<LobbyStartNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LobbyStartNotification> _parser = new pb::MessageParser<LobbyStartNotification>(() => new LobbyStartNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LobbyStartNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyStartNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyStartNotification(LobbyStartNotification other) : this() {
      lobbyId_ = other.lobbyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LobbyStartNotification Clone() {
      return new LobbyStartNotification(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LobbyStartNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LobbyStartNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LobbyStartNotification other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ParticipantJoinNotification : pb::IMessage<ParticipantJoinNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParticipantJoinNotification> _parser = new pb::MessageParser<ParticipantJoinNotification>(() => new ParticipantJoinNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantJoinNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantJoinNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantJoinNotification(ParticipantJoinNotification other) : this() {
      lobbyId_ = other.lobbyId_;
      playerId_ = other.playerId_;
      deckIndex_ = other.deckIndex_;
      playerSlot_ = other.playerSlot_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantJoinNotification Clone() {
      return new ParticipantJoinNotification(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deck_index" field.</summary>
    public const int DeckIndexFieldNumber = 3;
    private int deckIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeckIndex {
      get { return deckIndex_; }
      set {
        deckIndex_ = value;
      }
    }

    /// <summary>Field number for the "player_slot" field.</summary>
    public const int PlayerSlotFieldNumber = 4;
    private int playerSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerSlot {
      get { return playerSlot_; }
      set {
        playerSlot_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 5;
    private global::Mobius.Proto.Multi.ProtoLobbyPlayer player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Multi.ProtoLobbyPlayer Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantJoinNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantJoinNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (DeckIndex != other.DeckIndex) return false;
      if (PlayerSlot != other.PlayerSlot) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (DeckIndex != 0) hash ^= DeckIndex.GetHashCode();
      if (PlayerSlot != 0) hash ^= PlayerSlot.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (DeckIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DeckIndex);
      }
      if (PlayerSlot != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerSlot);
      }
      if (player_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (DeckIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(DeckIndex);
      }
      if (PlayerSlot != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerSlot);
      }
      if (player_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (DeckIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeckIndex);
      }
      if (PlayerSlot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerSlot);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantJoinNotification other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.DeckIndex != 0) {
        DeckIndex = other.DeckIndex;
      }
      if (other.PlayerSlot != 0) {
        PlayerSlot = other.PlayerSlot;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Mobius.Proto.Multi.ProtoLobbyPlayer();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 24: {
            DeckIndex = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerSlot = input.ReadInt32();
            break;
          }
          case 42: {
            if (player_ == null) {
              Player = new global::Mobius.Proto.Multi.ProtoLobbyPlayer();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 24: {
            DeckIndex = input.ReadInt32();
            break;
          }
          case 32: {
            PlayerSlot = input.ReadInt32();
            break;
          }
          case 42: {
            if (player_ == null) {
              Player = new global::Mobius.Proto.Multi.ProtoLobbyPlayer();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ParticipantLeaveNotification : pb::IMessage<ParticipantLeaveNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParticipantLeaveNotification> _parser = new pb::MessageParser<ParticipantLeaveNotification>(() => new ParticipantLeaveNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantLeaveNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantLeaveNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantLeaveNotification(ParticipantLeaveNotification other) : this() {
      lobbyId_ = other.lobbyId_;
      playerId_ = other.playerId_;
      playerSlot_ = other.playerSlot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantLeaveNotification Clone() {
      return new ParticipantLeaveNotification(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 2;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_slot" field.</summary>
    public const int PlayerSlotFieldNumber = 3;
    private int playerSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerSlot {
      get { return playerSlot_; }
      set {
        playerSlot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantLeaveNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantLeaveNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (PlayerId != other.PlayerId) return false;
      if (PlayerSlot != other.PlayerSlot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerSlot != 0) hash ^= PlayerSlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (PlayerSlot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PlayerId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerId);
      }
      if (PlayerSlot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerSlot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerSlot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantLeaveNotification other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerSlot != 0) {
        PlayerSlot = other.PlayerSlot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 24: {
            PlayerSlot = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 18: {
            PlayerId = input.ReadString();
            break;
          }
          case 24: {
            PlayerSlot = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ParticipantReadyNotification : pb::IMessage<ParticipantReadyNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParticipantReadyNotification> _parser = new pb::MessageParser<ParticipantReadyNotification>(() => new ParticipantReadyNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantReadyNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantReadyNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantReadyNotification(ParticipantReadyNotification other) : this() {
      lobbyId_ = other.lobbyId_;
      playerSlot_ = other.playerSlot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantReadyNotification Clone() {
      return new ParticipantReadyNotification(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_slot" field.</summary>
    public const int PlayerSlotFieldNumber = 3;
    private int playerSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerSlot {
      get { return playerSlot_; }
      set {
        playerSlot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantReadyNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantReadyNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (PlayerSlot != other.PlayerSlot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (PlayerSlot != 0) hash ^= PlayerSlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PlayerSlot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PlayerSlot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerSlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (PlayerSlot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerSlot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantReadyNotification other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      if (other.PlayerSlot != 0) {
        PlayerSlot = other.PlayerSlot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 24: {
            PlayerSlot = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 24: {
            PlayerSlot = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ParticipantUnreadyNotification : pb::IMessage<ParticipantUnreadyNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParticipantUnreadyNotification> _parser = new pb::MessageParser<ParticipantUnreadyNotification>(() => new ParticipantUnreadyNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantUnreadyNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantUnreadyNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantUnreadyNotification(ParticipantUnreadyNotification other) : this() {
      lobbyId_ = other.lobbyId_;
      partySlot_ = other.partySlot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantUnreadyNotification Clone() {
      return new ParticipantUnreadyNotification(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "party_slot" field.</summary>
    public const int PartySlotFieldNumber = 2;
    private int partySlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PartySlot {
      get { return partySlot_; }
      set {
        partySlot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantUnreadyNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantUnreadyNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (PartySlot != other.PartySlot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (PartySlot != 0) hash ^= PartySlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PartySlot != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PartySlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PartySlot != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(PartySlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (PartySlot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartySlot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantUnreadyNotification other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      if (other.PartySlot != 0) {
        PartySlot = other.PartySlot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 16: {
            PartySlot = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 16: {
            PartySlot = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ParticipantDeckChangeNotification : pb::IMessage<ParticipantDeckChangeNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ParticipantDeckChangeNotification> _parser = new pb::MessageParser<ParticipantDeckChangeNotification>(() => new ParticipantDeckChangeNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ParticipantDeckChangeNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDeckChangeNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDeckChangeNotification(ParticipantDeckChangeNotification other) : this() {
      lobbyId_ = other.lobbyId_;
      playerSlot_ = other.playerSlot_;
      player_ = other.player_ != null ? other.player_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ParticipantDeckChangeNotification Clone() {
      return new ParticipantDeckChangeNotification(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_slot" field.</summary>
    public const int PlayerSlotFieldNumber = 3;
    private int playerSlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerSlot {
      get { return playerSlot_; }
      set {
        playerSlot_ = value;
      }
    }

    /// <summary>Field number for the "player" field.</summary>
    public const int PlayerFieldNumber = 4;
    private global::Mobius.Proto.Multi.ProtoLobbyPlayer player_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Multi.ProtoLobbyPlayer Player {
      get { return player_; }
      set {
        player_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ParticipantDeckChangeNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ParticipantDeckChangeNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (PlayerSlot != other.PlayerSlot) return false;
      if (!object.Equals(Player, other.Player)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (PlayerSlot != 0) hash ^= PlayerSlot.GetHashCode();
      if (player_ != null) hash ^= Player.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PlayerSlot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerSlot);
      }
      if (player_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (PlayerSlot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerSlot);
      }
      if (player_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Player);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (PlayerSlot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerSlot);
      }
      if (player_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Player);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ParticipantDeckChangeNotification other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      if (other.PlayerSlot != 0) {
        PlayerSlot = other.PlayerSlot;
      }
      if (other.player_ != null) {
        if (player_ == null) {
          Player = new global::Mobius.Proto.Multi.ProtoLobbyPlayer();
        }
        Player.MergeFrom(other.Player);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 24: {
            PlayerSlot = input.ReadInt32();
            break;
          }
          case 34: {
            if (player_ == null) {
              Player = new global::Mobius.Proto.Multi.ProtoLobbyPlayer();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 24: {
            PlayerSlot = input.ReadInt32();
            break;
          }
          case 34: {
            if (player_ == null) {
              Player = new global::Mobius.Proto.Multi.ProtoLobbyPlayer();
            }
            input.ReadMessage(Player);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class StampSendNotification : pb::IMessage<StampSendNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<StampSendNotification> _parser = new pb::MessageParser<StampSendNotification>(() => new StampSendNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StampSendNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StampSendNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StampSendNotification(StampSendNotification other) : this() {
      lobbyId_ = other.lobbyId_;
      stampId_ = other.stampId_;
      partySlot_ = other.partySlot_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StampSendNotification Clone() {
      return new StampSendNotification(this);
    }

    /// <summary>Field number for the "lobby_id" field.</summary>
    public const int LobbyIdFieldNumber = 1;
    private string lobbyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LobbyId {
      get { return lobbyId_; }
      set {
        lobbyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stamp_id" field.</summary>
    public const int StampIdFieldNumber = 2;
    private string stampId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StampId {
      get { return stampId_; }
      set {
        stampId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "party_slot" field.</summary>
    public const int PartySlotFieldNumber = 3;
    private int partySlot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PartySlot {
      get { return partySlot_; }
      set {
        partySlot_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StampSendNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StampSendNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LobbyId != other.LobbyId) return false;
      if (StampId != other.StampId) return false;
      if (PartySlot != other.PartySlot) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LobbyId.Length != 0) hash ^= LobbyId.GetHashCode();
      if (StampId.Length != 0) hash ^= StampId.GetHashCode();
      if (PartySlot != 0) hash ^= PartySlot.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (StampId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StampId);
      }
      if (PartySlot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PartySlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LobbyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LobbyId);
      }
      if (StampId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(StampId);
      }
      if (PartySlot != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PartySlot);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LobbyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LobbyId);
      }
      if (StampId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StampId);
      }
      if (PartySlot != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PartySlot);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StampSendNotification other) {
      if (other == null) {
        return;
      }
      if (other.LobbyId.Length != 0) {
        LobbyId = other.LobbyId;
      }
      if (other.StampId.Length != 0) {
        StampId = other.StampId;
      }
      if (other.PartySlot != 0) {
        PartySlot = other.PartySlot;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 18: {
            StampId = input.ReadString();
            break;
          }
          case 24: {
            PartySlot = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            LobbyId = input.ReadString();
            break;
          }
          case 18: {
            StampId = input.ReadString();
            break;
          }
          case 24: {
            PartySlot = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameStartNotification : pb::IMessage<GameStartNotification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameStartNotification> _parser = new pb::MessageParser<GameStartNotification>(() => new GameStartNotification());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GameStartNotification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Multi.MultiNotificationReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStartNotification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStartNotification(GameStartNotification other) : this() {
      gameId_ = other.gameId_;
      players_ = other.players_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GameStartNotification Clone() {
      return new GameStartNotification(this);
    }

    /// <summary>Field number for the "game_id" field.</summary>
    public const int GameIdFieldNumber = 1;
    private string gameId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GameId {
      get { return gameId_; }
      set {
        gameId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "players" field.</summary>
    public const int PlayersFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Multi.ProtoGamePlayer> _repeated_players_codec
        = pb::FieldCodec.ForMessage(18, global::Mobius.Proto.Multi.ProtoGamePlayer.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Multi.ProtoGamePlayer> players_ = new pbc::RepeatedField<global::Mobius.Proto.Multi.ProtoGamePlayer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Multi.ProtoGamePlayer> Players {
      get { return players_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GameStartNotification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GameStartNotification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GameId != other.GameId) return false;
      if(!players_.Equals(other.players_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (GameId.Length != 0) hash ^= GameId.GetHashCode();
      hash ^= players_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      players_.WriteTo(output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GameId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(GameId);
      }
      players_.WriteTo(ref output, _repeated_players_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (GameId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GameId);
      }
      size += players_.CalculateSize(_repeated_players_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GameStartNotification other) {
      if (other == null) {
        return;
      }
      if (other.GameId.Length != 0) {
        GameId = other.GameId;
      }
      players_.Add(other.players_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(input, _repeated_players_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            GameId = input.ReadString();
            break;
          }
          case 18: {
            players_.AddEntriesFrom(ref input, _repeated_players_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
