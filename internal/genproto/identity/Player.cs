// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protoidentity/player.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mobius.Proto.Identity {

  /// <summary>Holder for reflection information generated from protoidentity/player.proto</summary>
  public static partial class PlayerReflection {

    #region Descriptor
    /// <summary>File descriptor for protoidentity/player.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static PlayerReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chpwcm90b2lkZW50aXR5L3BsYXllci5wcm90bxIIaWRlbnRpdHkigQEKE1By",
            "b3RvUGxheWVySWRlbnRpdHkSEQoJcGxheWVyX2lkGAEgASgJEhMKC3BsYXll",
            "cl9uYW1lGAIgASgJEhQKDHBsYXllcl9sZXZlbBgDIAEoBRIWCg5wbGF5ZXJf",
            "Y29tbWVudBgEIAEoCRIUCgxjb21wYW5pb25faWQYBSABKAkiwAEKGlByb3Rv",
            "UGxheWVyTG9hZG91dElkZW50aXR5EjIKCGpvYl9jYXJkGAEgASgLMiAuaWRl",
            "bnRpdHkuUHJvdG9QbGF5ZXJKb2JJZGVudGl0eRIzCgZ3ZWFwb24YAiABKAsy",
            "Iy5pZGVudGl0eS5Qcm90b1BsYXllcldlYXBvbklkZW50aXR5EjkKDWFiaWxp",
            "dHlfY2FyZHMYAyADKAsyIi5pZGVudGl0eS5Qcm90b0FiaWxpdHlDYXJkSWRl",
            "bnRpdHkicwoWUHJvdG9QbGF5ZXJKb2JJZGVudGl0eRITCgtqb2JfY2FyZF9p",
            "ZBgBIAEoCRIVCg1zdWJfam9iX2luZGV4GAIgASgFEhMKC2Nyb3duX2xldmVs",
            "GAMgASgFEhgKEG92ZXJfYm9vc3RfbGV2ZWwYBCABKAUi8wIKElByb3RvUGxh",
            "eWVySm9iU3RhdBITCgtocF9zdGF0X21vZBgDIAEoBRIXCg9hdHRhY2tfc3Rh",
            "dF9tb2QYBCABKAUSFgoOYnJlYWtfc3RhdF9tb2QYBSABKAUSFgoObWFnaWNf",
            "c3RhdF9tb2QYBiABKAUSFgoOc3BlZWRfc3RhdF9tb2QYByABKAUSGAoQZGVm",
            "ZW5zZV9zdGF0X21vZBgIIAEoBRIcChRjcml0X2NoYW5jZV9zdGF0X21vZBgJ",
            "IAEoBRIWCg51bHRpbWF0ZV9ib29zdBgKIAEoBRIYChBvdmVyX2Jvb3N0X2xl",
            "dmVsGAsgASgFEkcKDmF1dG9fYWJpbGl0aWVzGAwgAygLMi8uaWRlbnRpdHku",
            "UHJvdG9QbGF5ZXJKb2JTdGF0LkF1dG9BYmlsaXRpZXNFbnRyeRo0ChJBdXRv",
            "QWJpbGl0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4",
            "ASJJChlQcm90b1BsYXllcldlYXBvbklkZW50aXR5EhEKCXdlYXBvbl9pZBgB",
            "IAEoCRIZChFzdWJfd2VhcG9uX3VubG9jaxgCIAEoBSLfAgoVUHJvdG9QbGF5",
            "ZXJXZWFwb25TdGF0EhMKC2hwX3N0YXRfbW9kGAMgASgFEhcKD2F0dGFja19z",
            "dGF0X21vZBgEIAEoBRIWCg5icmVha19zdGF0X21vZBgFIAEoBRIWCg5tYWdp",
            "Y19zdGF0X21vZBgGIAEoBRIWCg5zcGVlZF9zdGF0X21vZBgHIAEoBRIYChBk",
            "ZWZlbnNlX3N0YXRfbW9kGAggASgFEhwKFGNyaXRfY2hhbmNlX3N0YXRfbW9k",
            "GAkgASgFEhYKDnVsdGltYXRlX2Jvb3N0GAogASgFEkoKDmF1dG9fYWJpbGl0",
            "aWVzGAsgAygLMjIuaWRlbnRpdHkuUHJvdG9QbGF5ZXJXZWFwb25TdGF0LkF1",
            "dG9BYmlsaXRpZXNFbnRyeRo0ChJBdXRvQWJpbGl0aWVzRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASKwAQoYUHJvdG9BYmlsaXR5Q2Fy",
            "ZElkZW50aXR5EhcKD2FiaWxpdHlfY2FyZF9pZBgBIAEoCRIaChJhYmlsaXR5",
            "X2NhcmRfbGV2ZWwYAiABKAUSFQoNYWJpbGl0eV9sZXZlbBgDIAEoBRIaChJl",
            "eHRyYV9za2lsbF91bmxvY2sYBCABKAUSGAoQb3Zlcl9ib29zdF9sZXZlbBgF",
            "IAEoBRISCgpzbG90X2luZGV4GAYgASgFIpcBChRQcm90b0FiaWxpdHlDYXJk",
            "U3RhdBJJCg5hdXRvX2FiaWxpdGllcxgGIAMoCzIxLmlkZW50aXR5LlByb3Rv",
            "QWJpbGl0eUNhcmRTdGF0LkF1dG9BYmlsaXRpZXNFbnRyeRo0ChJBdXRvQWJp",
            "bGl0aWVzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgFOgI4ASLK",
            "AQoSUHJvdG9QbGF5ZXJMb2Fkb3V0EhIKCmRlY2tfaW5kZXgYASABKAUSLAoD",
            "am9iGAIgASgLMh8uaWRlbnRpdHkuUHJvdG9QbGF5ZXJKb2JMb2Fkb3V0EjIK",
            "BndlYXBvbhgDIAEoCzIiLmlkZW50aXR5LlByb3RvUGxheWVyV2VhcG9uTG9h",
            "ZG91dBI+Cg1hYmlsaXR5X2NhcmRzGAQgAygLMicuaWRlbnRpdHkuUHJvdG9Q",
            "bGF5ZXJBYmlsaXR5Q2FyZExvYWRvdXQidwoVUHJvdG9QbGF5ZXJKb2JMb2Fk",
            "b3V0EjIKCGlkZW50aXR5GAEgASgLMiAuaWRlbnRpdHkuUHJvdG9QbGF5ZXJK",
            "b2JJZGVudGl0eRIqCgRzdGF0GAIgASgLMhwuaWRlbnRpdHkuUHJvdG9QbGF5",
            "ZXJKb2JTdGF0IoABChhQcm90b1BsYXllcldlYXBvbkxvYWRvdXQSNQoIaWRl",
            "bnRpdHkYASABKAsyIy5pZGVudGl0eS5Qcm90b1BsYXllcldlYXBvbklkZW50",
            "aXR5Ei0KBHN0YXQYAiABKAsyHy5pZGVudGl0eS5Qcm90b1BsYXllcldlYXBv",
            "blN0YXQigwEKHVByb3RvUGxheWVyQWJpbGl0eUNhcmRMb2Fkb3V0EjQKCGlk",
            "ZW50aXR5GAEgASgLMiIuaWRlbnRpdHkuUHJvdG9BYmlsaXR5Q2FyZElkZW50",
            "aXR5EiwKBHN0YXQYAiABKAsyHi5pZGVudGl0eS5Qcm90b0FiaWxpdHlDYXJk",
            "U3RhdEJTWjlnaXRodWIuY29tL2p1c3RqYWNrMTUyMS9tZXZpdW0vcGtnL2dl",
            "bnByb3RvL3Byb3RvaWRlbnRpdHmqAhVNb2JpdXMuUHJvdG8uSWRlbnRpdHli",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerIdentity), global::Mobius.Proto.Identity.ProtoPlayerIdentity.Parser, new[]{ "PlayerId", "PlayerName", "PlayerLevel", "PlayerComment", "CompanionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerLoadoutIdentity), global::Mobius.Proto.Identity.ProtoPlayerLoadoutIdentity.Parser, new[]{ "JobCard", "Weapon", "AbilityCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerJobIdentity), global::Mobius.Proto.Identity.ProtoPlayerJobIdentity.Parser, new[]{ "JobCardId", "SubJobIndex", "CrownLevel", "OverBoostLevel" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerJobStat), global::Mobius.Proto.Identity.ProtoPlayerJobStat.Parser, new[]{ "HpStatMod", "AttackStatMod", "BreakStatMod", "MagicStatMod", "SpeedStatMod", "DefenseStatMod", "CritChanceStatMod", "UltimateBoost", "OverBoostLevel", "AutoAbilities" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity), global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity.Parser, new[]{ "WeaponId", "SubWeaponUnlock" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerWeaponStat), global::Mobius.Proto.Identity.ProtoPlayerWeaponStat.Parser, new[]{ "HpStatMod", "AttackStatMod", "BreakStatMod", "MagicStatMod", "SpeedStatMod", "DefenseStatMod", "CritChanceStatMod", "UltimateBoost", "AutoAbilities" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoAbilityCardIdentity), global::Mobius.Proto.Identity.ProtoAbilityCardIdentity.Parser, new[]{ "AbilityCardId", "AbilityCardLevel", "AbilityLevel", "ExtraSkillUnlock", "OverBoostLevel", "SlotIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoAbilityCardStat), global::Mobius.Proto.Identity.ProtoAbilityCardStat.Parser, new[]{ "AutoAbilities" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerLoadout), global::Mobius.Proto.Identity.ProtoPlayerLoadout.Parser, new[]{ "DeckIndex", "Job", "Weapon", "AbilityCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerJobLoadout), global::Mobius.Proto.Identity.ProtoPlayerJobLoadout.Parser, new[]{ "Identity", "Stat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerWeaponLoadout), global::Mobius.Proto.Identity.ProtoPlayerWeaponLoadout.Parser, new[]{ "Identity", "Stat" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Identity.ProtoPlayerAbilityCardLoadout), global::Mobius.Proto.Identity.ProtoPlayerAbilityCardLoadout.Parser, new[]{ "Identity", "Stat" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProtoPlayerIdentity : pb::IMessage<ProtoPlayerIdentity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerIdentity> _parser = new pb::MessageParser<ProtoPlayerIdentity>(() => new ProtoPlayerIdentity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerIdentity(ProtoPlayerIdentity other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerLevel_ = other.playerLevel_;
      playerComment_ = other.playerComment_;
      companionId_ = other.companionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerIdentity Clone() {
      return new ProtoPlayerIdentity(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 3;
    private int playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "player_comment" field.</summary>
    public const int PlayerCommentFieldNumber = 4;
    private string playerComment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerComment {
      get { return playerComment_; }
      set {
        playerComment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "companion_id" field.</summary>
    public const int CompanionIdFieldNumber = 5;
    private string companionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanionId {
      get { return companionId_; }
      set {
        companionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (PlayerComment != other.PlayerComment) return false;
      if (CompanionId != other.CompanionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (PlayerComment.Length != 0) hash ^= PlayerComment.GetHashCode();
      if (CompanionId.Length != 0) hash ^= CompanionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (PlayerComment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerComment);
      }
      if (CompanionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CompanionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (PlayerComment.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlayerComment);
      }
      if (CompanionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(CompanionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (PlayerComment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerComment);
      }
      if (CompanionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerIdentity other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.PlayerComment.Length != 0) {
        PlayerComment = other.PlayerComment;
      }
      if (other.CompanionId.Length != 0) {
        CompanionId = other.CompanionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerComment = input.ReadString();
            break;
          }
          case 42: {
            CompanionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 34: {
            PlayerComment = input.ReadString();
            break;
          }
          case 42: {
            CompanionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerLoadoutIdentity : pb::IMessage<ProtoPlayerLoadoutIdentity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerLoadoutIdentity> _parser = new pb::MessageParser<ProtoPlayerLoadoutIdentity>(() => new ProtoPlayerLoadoutIdentity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerLoadoutIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadoutIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadoutIdentity(ProtoPlayerLoadoutIdentity other) : this() {
      jobCard_ = other.jobCard_ != null ? other.jobCard_.Clone() : null;
      weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
      abilityCards_ = other.abilityCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadoutIdentity Clone() {
      return new ProtoPlayerLoadoutIdentity(this);
    }

    /// <summary>Field number for the "job_card" field.</summary>
    public const int JobCardFieldNumber = 1;
    private global::Mobius.Proto.Identity.ProtoPlayerJobIdentity jobCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoPlayerJobIdentity JobCard {
      get { return jobCard_; }
      set {
        jobCard_ = value;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 2;
    private global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    /// <summary>Field number for the "ability_cards" field.</summary>
    public const int AbilityCardsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Identity.ProtoAbilityCardIdentity> _repeated_abilityCards_codec
        = pb::FieldCodec.ForMessage(26, global::Mobius.Proto.Identity.ProtoAbilityCardIdentity.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Identity.ProtoAbilityCardIdentity> abilityCards_ = new pbc::RepeatedField<global::Mobius.Proto.Identity.ProtoAbilityCardIdentity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Identity.ProtoAbilityCardIdentity> AbilityCards {
      get { return abilityCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerLoadoutIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerLoadoutIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(JobCard, other.JobCard)) return false;
      if (!object.Equals(Weapon, other.Weapon)) return false;
      if(!abilityCards_.Equals(other.abilityCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (jobCard_ != null) hash ^= JobCard.GetHashCode();
      if (weapon_ != null) hash ^= Weapon.GetHashCode();
      hash ^= abilityCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (jobCard_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(JobCard);
      }
      if (weapon_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Weapon);
      }
      abilityCards_.WriteTo(output, _repeated_abilityCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (jobCard_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(JobCard);
      }
      if (weapon_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Weapon);
      }
      abilityCards_.WriteTo(ref output, _repeated_abilityCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (jobCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JobCard);
      }
      if (weapon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      size += abilityCards_.CalculateSize(_repeated_abilityCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerLoadoutIdentity other) {
      if (other == null) {
        return;
      }
      if (other.jobCard_ != null) {
        if (jobCard_ == null) {
          JobCard = new global::Mobius.Proto.Identity.ProtoPlayerJobIdentity();
        }
        JobCard.MergeFrom(other.JobCard);
      }
      if (other.weapon_ != null) {
        if (weapon_ == null) {
          Weapon = new global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity();
        }
        Weapon.MergeFrom(other.Weapon);
      }
      abilityCards_.Add(other.abilityCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (jobCard_ == null) {
              JobCard = new global::Mobius.Proto.Identity.ProtoPlayerJobIdentity();
            }
            input.ReadMessage(JobCard);
            break;
          }
          case 18: {
            if (weapon_ == null) {
              Weapon = new global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 26: {
            abilityCards_.AddEntriesFrom(input, _repeated_abilityCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (jobCard_ == null) {
              JobCard = new global::Mobius.Proto.Identity.ProtoPlayerJobIdentity();
            }
            input.ReadMessage(JobCard);
            break;
          }
          case 18: {
            if (weapon_ == null) {
              Weapon = new global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 26: {
            abilityCards_.AddEntriesFrom(ref input, _repeated_abilityCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerJobIdentity : pb::IMessage<ProtoPlayerJobIdentity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerJobIdentity> _parser = new pb::MessageParser<ProtoPlayerJobIdentity>(() => new ProtoPlayerJobIdentity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerJobIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobIdentity(ProtoPlayerJobIdentity other) : this() {
      jobCardId_ = other.jobCardId_;
      subJobIndex_ = other.subJobIndex_;
      crownLevel_ = other.crownLevel_;
      overBoostLevel_ = other.overBoostLevel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobIdentity Clone() {
      return new ProtoPlayerJobIdentity(this);
    }

    /// <summary>Field number for the "job_card_id" field.</summary>
    public const int JobCardIdFieldNumber = 1;
    private string jobCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobCardId {
      get { return jobCardId_; }
      set {
        jobCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub_job_index" field.</summary>
    public const int SubJobIndexFieldNumber = 2;
    private int subJobIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubJobIndex {
      get { return subJobIndex_; }
      set {
        subJobIndex_ = value;
      }
    }

    /// <summary>Field number for the "crown_level" field.</summary>
    public const int CrownLevelFieldNumber = 3;
    private int crownLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CrownLevel {
      get { return crownLevel_; }
      set {
        crownLevel_ = value;
      }
    }

    /// <summary>Field number for the "over_boost_level" field.</summary>
    public const int OverBoostLevelFieldNumber = 4;
    private int overBoostLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OverBoostLevel {
      get { return overBoostLevel_; }
      set {
        overBoostLevel_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerJobIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerJobIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobCardId != other.JobCardId) return false;
      if (SubJobIndex != other.SubJobIndex) return false;
      if (CrownLevel != other.CrownLevel) return false;
      if (OverBoostLevel != other.OverBoostLevel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobCardId.Length != 0) hash ^= JobCardId.GetHashCode();
      if (SubJobIndex != 0) hash ^= SubJobIndex.GetHashCode();
      if (CrownLevel != 0) hash ^= CrownLevel.GetHashCode();
      if (OverBoostLevel != 0) hash ^= OverBoostLevel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JobCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobCardId);
      }
      if (SubJobIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubJobIndex);
      }
      if (CrownLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CrownLevel);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OverBoostLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JobCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobCardId);
      }
      if (SubJobIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubJobIndex);
      }
      if (CrownLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(CrownLevel);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(OverBoostLevel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobCardId);
      }
      if (SubJobIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubJobIndex);
      }
      if (CrownLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CrownLevel);
      }
      if (OverBoostLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OverBoostLevel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerJobIdentity other) {
      if (other == null) {
        return;
      }
      if (other.JobCardId.Length != 0) {
        JobCardId = other.JobCardId;
      }
      if (other.SubJobIndex != 0) {
        SubJobIndex = other.SubJobIndex;
      }
      if (other.CrownLevel != 0) {
        CrownLevel = other.CrownLevel;
      }
      if (other.OverBoostLevel != 0) {
        OverBoostLevel = other.OverBoostLevel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JobCardId = input.ReadString();
            break;
          }
          case 16: {
            SubJobIndex = input.ReadInt32();
            break;
          }
          case 24: {
            CrownLevel = input.ReadInt32();
            break;
          }
          case 32: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            JobCardId = input.ReadString();
            break;
          }
          case 16: {
            SubJobIndex = input.ReadInt32();
            break;
          }
          case 24: {
            CrownLevel = input.ReadInt32();
            break;
          }
          case 32: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerJobStat : pb::IMessage<ProtoPlayerJobStat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerJobStat> _parser = new pb::MessageParser<ProtoPlayerJobStat>(() => new ProtoPlayerJobStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerJobStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobStat(ProtoPlayerJobStat other) : this() {
      hpStatMod_ = other.hpStatMod_;
      attackStatMod_ = other.attackStatMod_;
      breakStatMod_ = other.breakStatMod_;
      magicStatMod_ = other.magicStatMod_;
      speedStatMod_ = other.speedStatMod_;
      defenseStatMod_ = other.defenseStatMod_;
      critChanceStatMod_ = other.critChanceStatMod_;
      ultimateBoost_ = other.ultimateBoost_;
      overBoostLevel_ = other.overBoostLevel_;
      autoAbilities_ = other.autoAbilities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobStat Clone() {
      return new ProtoPlayerJobStat(this);
    }

    /// <summary>Field number for the "hp_stat_mod" field.</summary>
    public const int HpStatModFieldNumber = 3;
    private int hpStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HpStatMod {
      get { return hpStatMod_; }
      set {
        hpStatMod_ = value;
      }
    }

    /// <summary>Field number for the "attack_stat_mod" field.</summary>
    public const int AttackStatModFieldNumber = 4;
    private int attackStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackStatMod {
      get { return attackStatMod_; }
      set {
        attackStatMod_ = value;
      }
    }

    /// <summary>Field number for the "break_stat_mod" field.</summary>
    public const int BreakStatModFieldNumber = 5;
    private int breakStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BreakStatMod {
      get { return breakStatMod_; }
      set {
        breakStatMod_ = value;
      }
    }

    /// <summary>Field number for the "magic_stat_mod" field.</summary>
    public const int MagicStatModFieldNumber = 6;
    private int magicStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicStatMod {
      get { return magicStatMod_; }
      set {
        magicStatMod_ = value;
      }
    }

    /// <summary>Field number for the "speed_stat_mod" field.</summary>
    public const int SpeedStatModFieldNumber = 7;
    private int speedStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedStatMod {
      get { return speedStatMod_; }
      set {
        speedStatMod_ = value;
      }
    }

    /// <summary>Field number for the "defense_stat_mod" field.</summary>
    public const int DefenseStatModFieldNumber = 8;
    private int defenseStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefenseStatMod {
      get { return defenseStatMod_; }
      set {
        defenseStatMod_ = value;
      }
    }

    /// <summary>Field number for the "crit_chance_stat_mod" field.</summary>
    public const int CritChanceStatModFieldNumber = 9;
    private int critChanceStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CritChanceStatMod {
      get { return critChanceStatMod_; }
      set {
        critChanceStatMod_ = value;
      }
    }

    /// <summary>Field number for the "ultimate_boost" field.</summary>
    public const int UltimateBoostFieldNumber = 10;
    private int ultimateBoost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UltimateBoost {
      get { return ultimateBoost_; }
      set {
        ultimateBoost_ = value;
      }
    }

    /// <summary>Field number for the "over_boost_level" field.</summary>
    public const int OverBoostLevelFieldNumber = 11;
    private int overBoostLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OverBoostLevel {
      get { return overBoostLevel_; }
      set {
        overBoostLevel_ = value;
      }
    }

    /// <summary>Field number for the "auto_abilities" field.</summary>
    public const int AutoAbilitiesFieldNumber = 12;
    private static readonly pbc::MapField<string, int>.Codec _map_autoAbilities_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 98);
    private readonly pbc::MapField<string, int> autoAbilities_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> AutoAbilities {
      get { return autoAbilities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerJobStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerJobStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HpStatMod != other.HpStatMod) return false;
      if (AttackStatMod != other.AttackStatMod) return false;
      if (BreakStatMod != other.BreakStatMod) return false;
      if (MagicStatMod != other.MagicStatMod) return false;
      if (SpeedStatMod != other.SpeedStatMod) return false;
      if (DefenseStatMod != other.DefenseStatMod) return false;
      if (CritChanceStatMod != other.CritChanceStatMod) return false;
      if (UltimateBoost != other.UltimateBoost) return false;
      if (OverBoostLevel != other.OverBoostLevel) return false;
      if (!AutoAbilities.Equals(other.AutoAbilities)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HpStatMod != 0) hash ^= HpStatMod.GetHashCode();
      if (AttackStatMod != 0) hash ^= AttackStatMod.GetHashCode();
      if (BreakStatMod != 0) hash ^= BreakStatMod.GetHashCode();
      if (MagicStatMod != 0) hash ^= MagicStatMod.GetHashCode();
      if (SpeedStatMod != 0) hash ^= SpeedStatMod.GetHashCode();
      if (DefenseStatMod != 0) hash ^= DefenseStatMod.GetHashCode();
      if (CritChanceStatMod != 0) hash ^= CritChanceStatMod.GetHashCode();
      if (UltimateBoost != 0) hash ^= UltimateBoost.GetHashCode();
      if (OverBoostLevel != 0) hash ^= OverBoostLevel.GetHashCode();
      hash ^= AutoAbilities.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HpStatMod != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HpStatMod);
      }
      if (AttackStatMod != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(UltimateBoost);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OverBoostLevel);
      }
      autoAbilities_.WriteTo(output, _map_autoAbilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HpStatMod != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HpStatMod);
      }
      if (AttackStatMod != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(UltimateBoost);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(OverBoostLevel);
      }
      autoAbilities_.WriteTo(ref output, _map_autoAbilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HpStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpStatMod);
      }
      if (AttackStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UltimateBoost);
      }
      if (OverBoostLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OverBoostLevel);
      }
      size += autoAbilities_.CalculateSize(_map_autoAbilities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerJobStat other) {
      if (other == null) {
        return;
      }
      if (other.HpStatMod != 0) {
        HpStatMod = other.HpStatMod;
      }
      if (other.AttackStatMod != 0) {
        AttackStatMod = other.AttackStatMod;
      }
      if (other.BreakStatMod != 0) {
        BreakStatMod = other.BreakStatMod;
      }
      if (other.MagicStatMod != 0) {
        MagicStatMod = other.MagicStatMod;
      }
      if (other.SpeedStatMod != 0) {
        SpeedStatMod = other.SpeedStatMod;
      }
      if (other.DefenseStatMod != 0) {
        DefenseStatMod = other.DefenseStatMod;
      }
      if (other.CritChanceStatMod != 0) {
        CritChanceStatMod = other.CritChanceStatMod;
      }
      if (other.UltimateBoost != 0) {
        UltimateBoost = other.UltimateBoost;
      }
      if (other.OverBoostLevel != 0) {
        OverBoostLevel = other.OverBoostLevel;
      }
      autoAbilities_.Add(other.autoAbilities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            HpStatMod = input.ReadInt32();
            break;
          }
          case 32: {
            AttackStatMod = input.ReadInt32();
            break;
          }
          case 40: {
            BreakStatMod = input.ReadInt32();
            break;
          }
          case 48: {
            MagicStatMod = input.ReadInt32();
            break;
          }
          case 56: {
            SpeedStatMod = input.ReadInt32();
            break;
          }
          case 64: {
            DefenseStatMod = input.ReadInt32();
            break;
          }
          case 72: {
            CritChanceStatMod = input.ReadInt32();
            break;
          }
          case 80: {
            UltimateBoost = input.ReadInt32();
            break;
          }
          case 88: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 98: {
            autoAbilities_.AddEntriesFrom(input, _map_autoAbilities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            HpStatMod = input.ReadInt32();
            break;
          }
          case 32: {
            AttackStatMod = input.ReadInt32();
            break;
          }
          case 40: {
            BreakStatMod = input.ReadInt32();
            break;
          }
          case 48: {
            MagicStatMod = input.ReadInt32();
            break;
          }
          case 56: {
            SpeedStatMod = input.ReadInt32();
            break;
          }
          case 64: {
            DefenseStatMod = input.ReadInt32();
            break;
          }
          case 72: {
            CritChanceStatMod = input.ReadInt32();
            break;
          }
          case 80: {
            UltimateBoost = input.ReadInt32();
            break;
          }
          case 88: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 98: {
            autoAbilities_.AddEntriesFrom(ref input, _map_autoAbilities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerWeaponIdentity : pb::IMessage<ProtoPlayerWeaponIdentity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerWeaponIdentity> _parser = new pb::MessageParser<ProtoPlayerWeaponIdentity>(() => new ProtoPlayerWeaponIdentity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerWeaponIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponIdentity(ProtoPlayerWeaponIdentity other) : this() {
      weaponId_ = other.weaponId_;
      subWeaponUnlock_ = other.subWeaponUnlock_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponIdentity Clone() {
      return new ProtoPlayerWeaponIdentity(this);
    }

    /// <summary>Field number for the "weapon_id" field.</summary>
    public const int WeaponIdFieldNumber = 1;
    private string weaponId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WeaponId {
      get { return weaponId_; }
      set {
        weaponId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub_weapon_unlock" field.</summary>
    public const int SubWeaponUnlockFieldNumber = 2;
    private int subWeaponUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubWeaponUnlock {
      get { return subWeaponUnlock_; }
      set {
        subWeaponUnlock_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerWeaponIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerWeaponIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WeaponId != other.WeaponId) return false;
      if (SubWeaponUnlock != other.SubWeaponUnlock) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WeaponId.Length != 0) hash ^= WeaponId.GetHashCode();
      if (SubWeaponUnlock != 0) hash ^= SubWeaponUnlock.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (WeaponId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WeaponId);
      }
      if (SubWeaponUnlock != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubWeaponUnlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (WeaponId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WeaponId);
      }
      if (SubWeaponUnlock != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubWeaponUnlock);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WeaponId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WeaponId);
      }
      if (SubWeaponUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubWeaponUnlock);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerWeaponIdentity other) {
      if (other == null) {
        return;
      }
      if (other.WeaponId.Length != 0) {
        WeaponId = other.WeaponId;
      }
      if (other.SubWeaponUnlock != 0) {
        SubWeaponUnlock = other.SubWeaponUnlock;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WeaponId = input.ReadString();
            break;
          }
          case 16: {
            SubWeaponUnlock = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            WeaponId = input.ReadString();
            break;
          }
          case 16: {
            SubWeaponUnlock = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerWeaponStat : pb::IMessage<ProtoPlayerWeaponStat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerWeaponStat> _parser = new pb::MessageParser<ProtoPlayerWeaponStat>(() => new ProtoPlayerWeaponStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerWeaponStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponStat(ProtoPlayerWeaponStat other) : this() {
      hpStatMod_ = other.hpStatMod_;
      attackStatMod_ = other.attackStatMod_;
      breakStatMod_ = other.breakStatMod_;
      magicStatMod_ = other.magicStatMod_;
      speedStatMod_ = other.speedStatMod_;
      defenseStatMod_ = other.defenseStatMod_;
      critChanceStatMod_ = other.critChanceStatMod_;
      ultimateBoost_ = other.ultimateBoost_;
      autoAbilities_ = other.autoAbilities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponStat Clone() {
      return new ProtoPlayerWeaponStat(this);
    }

    /// <summary>Field number for the "hp_stat_mod" field.</summary>
    public const int HpStatModFieldNumber = 3;
    private int hpStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int HpStatMod {
      get { return hpStatMod_; }
      set {
        hpStatMod_ = value;
      }
    }

    /// <summary>Field number for the "attack_stat_mod" field.</summary>
    public const int AttackStatModFieldNumber = 4;
    private int attackStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AttackStatMod {
      get { return attackStatMod_; }
      set {
        attackStatMod_ = value;
      }
    }

    /// <summary>Field number for the "break_stat_mod" field.</summary>
    public const int BreakStatModFieldNumber = 5;
    private int breakStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int BreakStatMod {
      get { return breakStatMod_; }
      set {
        breakStatMod_ = value;
      }
    }

    /// <summary>Field number for the "magic_stat_mod" field.</summary>
    public const int MagicStatModFieldNumber = 6;
    private int magicStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int MagicStatMod {
      get { return magicStatMod_; }
      set {
        magicStatMod_ = value;
      }
    }

    /// <summary>Field number for the "speed_stat_mod" field.</summary>
    public const int SpeedStatModFieldNumber = 7;
    private int speedStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpeedStatMod {
      get { return speedStatMod_; }
      set {
        speedStatMod_ = value;
      }
    }

    /// <summary>Field number for the "defense_stat_mod" field.</summary>
    public const int DefenseStatModFieldNumber = 8;
    private int defenseStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DefenseStatMod {
      get { return defenseStatMod_; }
      set {
        defenseStatMod_ = value;
      }
    }

    /// <summary>Field number for the "crit_chance_stat_mod" field.</summary>
    public const int CritChanceStatModFieldNumber = 9;
    private int critChanceStatMod_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CritChanceStatMod {
      get { return critChanceStatMod_; }
      set {
        critChanceStatMod_ = value;
      }
    }

    /// <summary>Field number for the "ultimate_boost" field.</summary>
    public const int UltimateBoostFieldNumber = 10;
    private int ultimateBoost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UltimateBoost {
      get { return ultimateBoost_; }
      set {
        ultimateBoost_ = value;
      }
    }

    /// <summary>Field number for the "auto_abilities" field.</summary>
    public const int AutoAbilitiesFieldNumber = 11;
    private static readonly pbc::MapField<string, int>.Codec _map_autoAbilities_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 90);
    private readonly pbc::MapField<string, int> autoAbilities_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> AutoAbilities {
      get { return autoAbilities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerWeaponStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerWeaponStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HpStatMod != other.HpStatMod) return false;
      if (AttackStatMod != other.AttackStatMod) return false;
      if (BreakStatMod != other.BreakStatMod) return false;
      if (MagicStatMod != other.MagicStatMod) return false;
      if (SpeedStatMod != other.SpeedStatMod) return false;
      if (DefenseStatMod != other.DefenseStatMod) return false;
      if (CritChanceStatMod != other.CritChanceStatMod) return false;
      if (UltimateBoost != other.UltimateBoost) return false;
      if (!AutoAbilities.Equals(other.AutoAbilities)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HpStatMod != 0) hash ^= HpStatMod.GetHashCode();
      if (AttackStatMod != 0) hash ^= AttackStatMod.GetHashCode();
      if (BreakStatMod != 0) hash ^= BreakStatMod.GetHashCode();
      if (MagicStatMod != 0) hash ^= MagicStatMod.GetHashCode();
      if (SpeedStatMod != 0) hash ^= SpeedStatMod.GetHashCode();
      if (DefenseStatMod != 0) hash ^= DefenseStatMod.GetHashCode();
      if (CritChanceStatMod != 0) hash ^= CritChanceStatMod.GetHashCode();
      if (UltimateBoost != 0) hash ^= UltimateBoost.GetHashCode();
      hash ^= AutoAbilities.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HpStatMod != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HpStatMod);
      }
      if (AttackStatMod != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(UltimateBoost);
      }
      autoAbilities_.WriteTo(output, _map_autoAbilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HpStatMod != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(HpStatMod);
      }
      if (AttackStatMod != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        output.WriteRawTag(72);
        output.WriteInt32(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(UltimateBoost);
      }
      autoAbilities_.WriteTo(ref output, _map_autoAbilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HpStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(HpStatMod);
      }
      if (AttackStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AttackStatMod);
      }
      if (BreakStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BreakStatMod);
      }
      if (MagicStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(MagicStatMod);
      }
      if (SpeedStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpeedStatMod);
      }
      if (DefenseStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DefenseStatMod);
      }
      if (CritChanceStatMod != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CritChanceStatMod);
      }
      if (UltimateBoost != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UltimateBoost);
      }
      size += autoAbilities_.CalculateSize(_map_autoAbilities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerWeaponStat other) {
      if (other == null) {
        return;
      }
      if (other.HpStatMod != 0) {
        HpStatMod = other.HpStatMod;
      }
      if (other.AttackStatMod != 0) {
        AttackStatMod = other.AttackStatMod;
      }
      if (other.BreakStatMod != 0) {
        BreakStatMod = other.BreakStatMod;
      }
      if (other.MagicStatMod != 0) {
        MagicStatMod = other.MagicStatMod;
      }
      if (other.SpeedStatMod != 0) {
        SpeedStatMod = other.SpeedStatMod;
      }
      if (other.DefenseStatMod != 0) {
        DefenseStatMod = other.DefenseStatMod;
      }
      if (other.CritChanceStatMod != 0) {
        CritChanceStatMod = other.CritChanceStatMod;
      }
      if (other.UltimateBoost != 0) {
        UltimateBoost = other.UltimateBoost;
      }
      autoAbilities_.Add(other.autoAbilities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 24: {
            HpStatMod = input.ReadInt32();
            break;
          }
          case 32: {
            AttackStatMod = input.ReadInt32();
            break;
          }
          case 40: {
            BreakStatMod = input.ReadInt32();
            break;
          }
          case 48: {
            MagicStatMod = input.ReadInt32();
            break;
          }
          case 56: {
            SpeedStatMod = input.ReadInt32();
            break;
          }
          case 64: {
            DefenseStatMod = input.ReadInt32();
            break;
          }
          case 72: {
            CritChanceStatMod = input.ReadInt32();
            break;
          }
          case 80: {
            UltimateBoost = input.ReadInt32();
            break;
          }
          case 90: {
            autoAbilities_.AddEntriesFrom(input, _map_autoAbilities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 24: {
            HpStatMod = input.ReadInt32();
            break;
          }
          case 32: {
            AttackStatMod = input.ReadInt32();
            break;
          }
          case 40: {
            BreakStatMod = input.ReadInt32();
            break;
          }
          case 48: {
            MagicStatMod = input.ReadInt32();
            break;
          }
          case 56: {
            SpeedStatMod = input.ReadInt32();
            break;
          }
          case 64: {
            DefenseStatMod = input.ReadInt32();
            break;
          }
          case 72: {
            CritChanceStatMod = input.ReadInt32();
            break;
          }
          case 80: {
            UltimateBoost = input.ReadInt32();
            break;
          }
          case 90: {
            autoAbilities_.AddEntriesFrom(ref input, _map_autoAbilities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardIdentity : pb::IMessage<ProtoAbilityCardIdentity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardIdentity> _parser = new pb::MessageParser<ProtoAbilityCardIdentity>(() => new ProtoAbilityCardIdentity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardIdentity(ProtoAbilityCardIdentity other) : this() {
      abilityCardId_ = other.abilityCardId_;
      abilityCardLevel_ = other.abilityCardLevel_;
      abilityLevel_ = other.abilityLevel_;
      extraSkillUnlock_ = other.extraSkillUnlock_;
      overBoostLevel_ = other.overBoostLevel_;
      slotIndex_ = other.slotIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardIdentity Clone() {
      return new ProtoAbilityCardIdentity(this);
    }

    /// <summary>Field number for the "ability_card_id" field.</summary>
    public const int AbilityCardIdFieldNumber = 1;
    private string abilityCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbilityCardId {
      get { return abilityCardId_; }
      set {
        abilityCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_card_level" field.</summary>
    public const int AbilityCardLevelFieldNumber = 2;
    private int abilityCardLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AbilityCardLevel {
      get { return abilityCardLevel_; }
      set {
        abilityCardLevel_ = value;
      }
    }

    /// <summary>Field number for the "ability_level" field.</summary>
    public const int AbilityLevelFieldNumber = 3;
    private int abilityLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AbilityLevel {
      get { return abilityLevel_; }
      set {
        abilityLevel_ = value;
      }
    }

    /// <summary>Field number for the "extra_skill_unlock" field.</summary>
    public const int ExtraSkillUnlockFieldNumber = 4;
    private int extraSkillUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraSkillUnlock {
      get { return extraSkillUnlock_; }
      set {
        extraSkillUnlock_ = value;
      }
    }

    /// <summary>Field number for the "over_boost_level" field.</summary>
    public const int OverBoostLevelFieldNumber = 5;
    private int overBoostLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OverBoostLevel {
      get { return overBoostLevel_; }
      set {
        overBoostLevel_ = value;
      }
    }

    /// <summary>Field number for the "slot_index" field.</summary>
    public const int SlotIndexFieldNumber = 6;
    private int slotIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotIndex {
      get { return slotIndex_; }
      set {
        slotIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityCardId != other.AbilityCardId) return false;
      if (AbilityCardLevel != other.AbilityCardLevel) return false;
      if (AbilityLevel != other.AbilityLevel) return false;
      if (ExtraSkillUnlock != other.ExtraSkillUnlock) return false;
      if (OverBoostLevel != other.OverBoostLevel) return false;
      if (SlotIndex != other.SlotIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AbilityCardId.Length != 0) hash ^= AbilityCardId.GetHashCode();
      if (AbilityCardLevel != 0) hash ^= AbilityCardLevel.GetHashCode();
      if (AbilityLevel != 0) hash ^= AbilityLevel.GetHashCode();
      if (ExtraSkillUnlock != 0) hash ^= ExtraSkillUnlock.GetHashCode();
      if (OverBoostLevel != 0) hash ^= OverBoostLevel.GetHashCode();
      if (SlotIndex != 0) hash ^= SlotIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbilityCardId);
      }
      if (AbilityCardLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AbilityCardLevel);
      }
      if (AbilityLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AbilityLevel);
      }
      if (ExtraSkillUnlock != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OverBoostLevel);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SlotIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbilityCardId);
      }
      if (AbilityCardLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AbilityCardLevel);
      }
      if (AbilityLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AbilityLevel);
      }
      if (ExtraSkillUnlock != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OverBoostLevel);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SlotIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AbilityCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityCardId);
      }
      if (AbilityCardLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityCardLevel);
      }
      if (AbilityLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityLevel);
      }
      if (ExtraSkillUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OverBoostLevel);
      }
      if (SlotIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardIdentity other) {
      if (other == null) {
        return;
      }
      if (other.AbilityCardId.Length != 0) {
        AbilityCardId = other.AbilityCardId;
      }
      if (other.AbilityCardLevel != 0) {
        AbilityCardLevel = other.AbilityCardLevel;
      }
      if (other.AbilityLevel != 0) {
        AbilityLevel = other.AbilityLevel;
      }
      if (other.ExtraSkillUnlock != 0) {
        ExtraSkillUnlock = other.ExtraSkillUnlock;
      }
      if (other.OverBoostLevel != 0) {
        OverBoostLevel = other.OverBoostLevel;
      }
      if (other.SlotIndex != 0) {
        SlotIndex = other.SlotIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 16: {
            AbilityCardLevel = input.ReadInt32();
            break;
          }
          case 24: {
            AbilityLevel = input.ReadInt32();
            break;
          }
          case 32: {
            ExtraSkillUnlock = input.ReadInt32();
            break;
          }
          case 40: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 48: {
            SlotIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 16: {
            AbilityCardLevel = input.ReadInt32();
            break;
          }
          case 24: {
            AbilityLevel = input.ReadInt32();
            break;
          }
          case 32: {
            ExtraSkillUnlock = input.ReadInt32();
            break;
          }
          case 40: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 48: {
            SlotIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoAbilityCardStat : pb::IMessage<ProtoAbilityCardStat>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoAbilityCardStat> _parser = new pb::MessageParser<ProtoAbilityCardStat>(() => new ProtoAbilityCardStat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoAbilityCardStat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardStat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardStat(ProtoAbilityCardStat other) : this() {
      autoAbilities_ = other.autoAbilities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoAbilityCardStat Clone() {
      return new ProtoAbilityCardStat(this);
    }

    /// <summary>Field number for the "auto_abilities" field.</summary>
    public const int AutoAbilitiesFieldNumber = 6;
    private static readonly pbc::MapField<string, int>.Codec _map_autoAbilities_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForInt32(16, 0), 50);
    private readonly pbc::MapField<string, int> autoAbilities_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> AutoAbilities {
      get { return autoAbilities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoAbilityCardStat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoAbilityCardStat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!AutoAbilities.Equals(other.AutoAbilities)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= AutoAbilities.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      autoAbilities_.WriteTo(output, _map_autoAbilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      autoAbilities_.WriteTo(ref output, _map_autoAbilities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += autoAbilities_.CalculateSize(_map_autoAbilities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoAbilityCardStat other) {
      if (other == null) {
        return;
      }
      autoAbilities_.Add(other.autoAbilities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 50: {
            autoAbilities_.AddEntriesFrom(input, _map_autoAbilities_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 50: {
            autoAbilities_.AddEntriesFrom(ref input, _map_autoAbilities_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerLoadout : pb::IMessage<ProtoPlayerLoadout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerLoadout> _parser = new pb::MessageParser<ProtoPlayerLoadout>(() => new ProtoPlayerLoadout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerLoadout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadout(ProtoPlayerLoadout other) : this() {
      deckIndex_ = other.deckIndex_;
      job_ = other.job_ != null ? other.job_.Clone() : null;
      weapon_ = other.weapon_ != null ? other.weapon_.Clone() : null;
      abilityCards_ = other.abilityCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadout Clone() {
      return new ProtoPlayerLoadout(this);
    }

    /// <summary>Field number for the "deck_index" field.</summary>
    public const int DeckIndexFieldNumber = 1;
    private int deckIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DeckIndex {
      get { return deckIndex_; }
      set {
        deckIndex_ = value;
      }
    }

    /// <summary>Field number for the "job" field.</summary>
    public const int JobFieldNumber = 2;
    private global::Mobius.Proto.Identity.ProtoPlayerJobLoadout job_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoPlayerJobLoadout Job {
      get { return job_; }
      set {
        job_ = value;
      }
    }

    /// <summary>Field number for the "weapon" field.</summary>
    public const int WeaponFieldNumber = 3;
    private global::Mobius.Proto.Identity.ProtoPlayerWeaponLoadout weapon_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoPlayerWeaponLoadout Weapon {
      get { return weapon_; }
      set {
        weapon_ = value;
      }
    }

    /// <summary>Field number for the "ability_cards" field.</summary>
    public const int AbilityCardsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Identity.ProtoPlayerAbilityCardLoadout> _repeated_abilityCards_codec
        = pb::FieldCodec.ForMessage(34, global::Mobius.Proto.Identity.ProtoPlayerAbilityCardLoadout.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Identity.ProtoPlayerAbilityCardLoadout> abilityCards_ = new pbc::RepeatedField<global::Mobius.Proto.Identity.ProtoPlayerAbilityCardLoadout>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Identity.ProtoPlayerAbilityCardLoadout> AbilityCards {
      get { return abilityCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerLoadout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerLoadout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DeckIndex != other.DeckIndex) return false;
      if (!object.Equals(Job, other.Job)) return false;
      if (!object.Equals(Weapon, other.Weapon)) return false;
      if(!abilityCards_.Equals(other.abilityCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DeckIndex != 0) hash ^= DeckIndex.GetHashCode();
      if (job_ != null) hash ^= Job.GetHashCode();
      if (weapon_ != null) hash ^= Weapon.GetHashCode();
      hash ^= abilityCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (DeckIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DeckIndex);
      }
      if (job_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Job);
      }
      if (weapon_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Weapon);
      }
      abilityCards_.WriteTo(output, _repeated_abilityCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (DeckIndex != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(DeckIndex);
      }
      if (job_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Job);
      }
      if (weapon_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Weapon);
      }
      abilityCards_.WriteTo(ref output, _repeated_abilityCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DeckIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DeckIndex);
      }
      if (job_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Job);
      }
      if (weapon_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Weapon);
      }
      size += abilityCards_.CalculateSize(_repeated_abilityCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerLoadout other) {
      if (other == null) {
        return;
      }
      if (other.DeckIndex != 0) {
        DeckIndex = other.DeckIndex;
      }
      if (other.job_ != null) {
        if (job_ == null) {
          Job = new global::Mobius.Proto.Identity.ProtoPlayerJobLoadout();
        }
        Job.MergeFrom(other.Job);
      }
      if (other.weapon_ != null) {
        if (weapon_ == null) {
          Weapon = new global::Mobius.Proto.Identity.ProtoPlayerWeaponLoadout();
        }
        Weapon.MergeFrom(other.Weapon);
      }
      abilityCards_.Add(other.abilityCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DeckIndex = input.ReadInt32();
            break;
          }
          case 18: {
            if (job_ == null) {
              Job = new global::Mobius.Proto.Identity.ProtoPlayerJobLoadout();
            }
            input.ReadMessage(Job);
            break;
          }
          case 26: {
            if (weapon_ == null) {
              Weapon = new global::Mobius.Proto.Identity.ProtoPlayerWeaponLoadout();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 34: {
            abilityCards_.AddEntriesFrom(input, _repeated_abilityCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            DeckIndex = input.ReadInt32();
            break;
          }
          case 18: {
            if (job_ == null) {
              Job = new global::Mobius.Proto.Identity.ProtoPlayerJobLoadout();
            }
            input.ReadMessage(Job);
            break;
          }
          case 26: {
            if (weapon_ == null) {
              Weapon = new global::Mobius.Proto.Identity.ProtoPlayerWeaponLoadout();
            }
            input.ReadMessage(Weapon);
            break;
          }
          case 34: {
            abilityCards_.AddEntriesFrom(ref input, _repeated_abilityCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerJobLoadout : pb::IMessage<ProtoPlayerJobLoadout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerJobLoadout> _parser = new pb::MessageParser<ProtoPlayerJobLoadout>(() => new ProtoPlayerJobLoadout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerJobLoadout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobLoadout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobLoadout(ProtoPlayerJobLoadout other) : this() {
      identity_ = other.identity_ != null ? other.identity_.Clone() : null;
      stat_ = other.stat_ != null ? other.stat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerJobLoadout Clone() {
      return new ProtoPlayerJobLoadout(this);
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 1;
    private global::Mobius.Proto.Identity.ProtoPlayerJobIdentity identity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoPlayerJobIdentity Identity {
      get { return identity_; }
      set {
        identity_ = value;
      }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 2;
    private global::Mobius.Proto.Identity.ProtoPlayerJobStat stat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoPlayerJobStat Stat {
      get { return stat_; }
      set {
        stat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerJobLoadout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerJobLoadout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Identity, other.Identity)) return false;
      if (!object.Equals(Stat, other.Stat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (identity_ != null) hash ^= Identity.GetHashCode();
      if (stat_ != null) hash ^= Stat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (identity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Identity);
      }
      if (stat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (identity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Identity);
      }
      if (stat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (identity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Identity);
      }
      if (stat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerJobLoadout other) {
      if (other == null) {
        return;
      }
      if (other.identity_ != null) {
        if (identity_ == null) {
          Identity = new global::Mobius.Proto.Identity.ProtoPlayerJobIdentity();
        }
        Identity.MergeFrom(other.Identity);
      }
      if (other.stat_ != null) {
        if (stat_ == null) {
          Stat = new global::Mobius.Proto.Identity.ProtoPlayerJobStat();
        }
        Stat.MergeFrom(other.Stat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (identity_ == null) {
              Identity = new global::Mobius.Proto.Identity.ProtoPlayerJobIdentity();
            }
            input.ReadMessage(Identity);
            break;
          }
          case 18: {
            if (stat_ == null) {
              Stat = new global::Mobius.Proto.Identity.ProtoPlayerJobStat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (identity_ == null) {
              Identity = new global::Mobius.Proto.Identity.ProtoPlayerJobIdentity();
            }
            input.ReadMessage(Identity);
            break;
          }
          case 18: {
            if (stat_ == null) {
              Stat = new global::Mobius.Proto.Identity.ProtoPlayerJobStat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerWeaponLoadout : pb::IMessage<ProtoPlayerWeaponLoadout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerWeaponLoadout> _parser = new pb::MessageParser<ProtoPlayerWeaponLoadout>(() => new ProtoPlayerWeaponLoadout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerWeaponLoadout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponLoadout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponLoadout(ProtoPlayerWeaponLoadout other) : this() {
      identity_ = other.identity_ != null ? other.identity_.Clone() : null;
      stat_ = other.stat_ != null ? other.stat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerWeaponLoadout Clone() {
      return new ProtoPlayerWeaponLoadout(this);
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 1;
    private global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity identity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity Identity {
      get { return identity_; }
      set {
        identity_ = value;
      }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 2;
    private global::Mobius.Proto.Identity.ProtoPlayerWeaponStat stat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoPlayerWeaponStat Stat {
      get { return stat_; }
      set {
        stat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerWeaponLoadout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerWeaponLoadout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Identity, other.Identity)) return false;
      if (!object.Equals(Stat, other.Stat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (identity_ != null) hash ^= Identity.GetHashCode();
      if (stat_ != null) hash ^= Stat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (identity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Identity);
      }
      if (stat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (identity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Identity);
      }
      if (stat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (identity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Identity);
      }
      if (stat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerWeaponLoadout other) {
      if (other == null) {
        return;
      }
      if (other.identity_ != null) {
        if (identity_ == null) {
          Identity = new global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity();
        }
        Identity.MergeFrom(other.Identity);
      }
      if (other.stat_ != null) {
        if (stat_ == null) {
          Stat = new global::Mobius.Proto.Identity.ProtoPlayerWeaponStat();
        }
        Stat.MergeFrom(other.Stat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (identity_ == null) {
              Identity = new global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity();
            }
            input.ReadMessage(Identity);
            break;
          }
          case 18: {
            if (stat_ == null) {
              Stat = new global::Mobius.Proto.Identity.ProtoPlayerWeaponStat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (identity_ == null) {
              Identity = new global::Mobius.Proto.Identity.ProtoPlayerWeaponIdentity();
            }
            input.ReadMessage(Identity);
            break;
          }
          case 18: {
            if (stat_ == null) {
              Stat = new global::Mobius.Proto.Identity.ProtoPlayerWeaponStat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerAbilityCardLoadout : pb::IMessage<ProtoPlayerAbilityCardLoadout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerAbilityCardLoadout> _parser = new pb::MessageParser<ProtoPlayerAbilityCardLoadout>(() => new ProtoPlayerAbilityCardLoadout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerAbilityCardLoadout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Identity.PlayerReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerAbilityCardLoadout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerAbilityCardLoadout(ProtoPlayerAbilityCardLoadout other) : this() {
      identity_ = other.identity_ != null ? other.identity_.Clone() : null;
      stat_ = other.stat_ != null ? other.stat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerAbilityCardLoadout Clone() {
      return new ProtoPlayerAbilityCardLoadout(this);
    }

    /// <summary>Field number for the "identity" field.</summary>
    public const int IdentityFieldNumber = 1;
    private global::Mobius.Proto.Identity.ProtoAbilityCardIdentity identity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoAbilityCardIdentity Identity {
      get { return identity_; }
      set {
        identity_ = value;
      }
    }

    /// <summary>Field number for the "stat" field.</summary>
    public const int StatFieldNumber = 2;
    private global::Mobius.Proto.Identity.ProtoAbilityCardStat stat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Identity.ProtoAbilityCardStat Stat {
      get { return stat_; }
      set {
        stat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerAbilityCardLoadout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerAbilityCardLoadout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Identity, other.Identity)) return false;
      if (!object.Equals(Stat, other.Stat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (identity_ != null) hash ^= Identity.GetHashCode();
      if (stat_ != null) hash ^= Stat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (identity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Identity);
      }
      if (stat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (identity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Identity);
      }
      if (stat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Stat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (identity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Identity);
      }
      if (stat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Stat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerAbilityCardLoadout other) {
      if (other == null) {
        return;
      }
      if (other.identity_ != null) {
        if (identity_ == null) {
          Identity = new global::Mobius.Proto.Identity.ProtoAbilityCardIdentity();
        }
        Identity.MergeFrom(other.Identity);
      }
      if (other.stat_ != null) {
        if (stat_ == null) {
          Stat = new global::Mobius.Proto.Identity.ProtoAbilityCardStat();
        }
        Stat.MergeFrom(other.Stat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (identity_ == null) {
              Identity = new global::Mobius.Proto.Identity.ProtoAbilityCardIdentity();
            }
            input.ReadMessage(Identity);
            break;
          }
          case 18: {
            if (stat_ == null) {
              Stat = new global::Mobius.Proto.Identity.ProtoAbilityCardStat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (identity_ == null) {
              Identity = new global::Mobius.Proto.Identity.ProtoAbilityCardIdentity();
            }
            input.ReadMessage(Identity);
            break;
          }
          case 18: {
            if (stat_ == null) {
              Stat = new global::Mobius.Proto.Identity.ProtoAbilityCardStat();
            }
            input.ReadMessage(Stat);
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
