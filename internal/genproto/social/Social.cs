// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: protosocial/social.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Mobius.Proto.Social {

  /// <summary>Holder for reflection information generated from protosocial/social.proto</summary>
  public static partial class SocialReflection {

    #region Descriptor
    /// <summary>File descriptor for protosocial/social.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SocialReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Chhwcm90b3NvY2lhbC9zb2NpYWwucHJvdG8SCHByZXNlbmNlImYKE1Byb3Rv",
            "UGxheWVySWRlbnRpdHkSEQoJcGxheWVyX2lkGAEgASgJEhMKC3BsYXllcl9u",
            "YW1lGAIgASgJEhQKDHBsYXllcl9sZXZlbBgDIAEoBRIRCglpc19wbGF5ZXIY",
            "BCABKAgijgEKFVByb3RvUGxheWVyU29jaWFsSW5mbxIuCgtwbGF5ZXJfaW5m",
            "bxgBIAEoCzIZLnByZXNlbmNlLlByb3RvUGxheWVySW5mbxITCgtsYXN0X29u",
            "bGluZRgCIAEoAxIVCg1yZWdpb25fbWFwX2lkGAMgASgJEhkKEXJlZ2lvbl9u",
            "b2RlX2luZGV4GAQgASgFIt0BCg9Qcm90b1BsYXllckluZm8SEQoJcGxheWVy",
            "X2lkGAEgASgJEhMKC3BsYXllcl9uYW1lGAIgASgJEhYKDnBsYXllcl9jb21t",
            "ZW50GAMgASgJEhQKDHBsYXllcl9sZXZlbBgEIAEoBRITCgtqb2JfY2FyZF9p",
            "ZBgGIAEoCRIVCg1zdWJfam9iX2luZGV4GAcgASgFEhQKDGNvbXBhbmlvbl9p",
            "ZBgIIAEoCRIyCgtyZW50YWxfY2FyZBgJIAEoCzIdLnByZXNlbmNlLlByb3Rv",
            "UGxheWVyQ2FyZEluZm8ipAEKElByb3RvUGxheWVyTG9hZG91dBITCgtqb2Jf",
            "Y2FyZF9pZBgBIAEoCRIVCg1zdWJfam9iX2luZGV4GAIgASgFEhEKCXdlYXBv",
            "bl9pZBgDIAEoCRIZChFzdWJfd2VhcG9uX3VubG9jaxgEIAEoBRI0Cg1hYmls",
            "aXR5X2NhcmRzGAUgAygLMh0ucHJlc2VuY2UuUHJvdG9QbGF5ZXJDYXJkSW5m",
            "byKrAQoTUHJvdG9QbGF5ZXJDYXJkSW5mbxIXCg9hYmlsaXR5X2NhcmRfaWQY",
            "ASABKAkSGgoSYWJpbGl0eV9jYXJkX2xldmVsGAIgASgFEhUKDWFiaWxpdHlf",
            "bGV2ZWwYAyABKAUSGgoSZXh0cmFfc2tpbGxfdW5sb2NrGAQgASgFEhgKEG92",
            "ZXJfYm9vc3RfbGV2ZWwYBSABKAUSEgoKc2xvdF9pbmRleBgGIAEoBUJPWjdn",
            "aXRodWIuY29tL2p1c3RqYWNrMTUyMS9tZXZpdW0vcGtnL2dlbnByb3RvL3By",
            "b3Rvc29jaWFsqgITTW9iaXVzLlByb3RvLlNvY2lhbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Social.ProtoPlayerIdentity), global::Mobius.Proto.Social.ProtoPlayerIdentity.Parser, new[]{ "PlayerId", "PlayerName", "PlayerLevel", "IsPlayer" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Social.ProtoPlayerSocialInfo), global::Mobius.Proto.Social.ProtoPlayerSocialInfo.Parser, new[]{ "PlayerInfo", "LastOnline", "RegionMapId", "RegionNodeIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Social.ProtoPlayerInfo), global::Mobius.Proto.Social.ProtoPlayerInfo.Parser, new[]{ "PlayerId", "PlayerName", "PlayerComment", "PlayerLevel", "JobCardId", "SubJobIndex", "CompanionId", "RentalCard" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Social.ProtoPlayerLoadout), global::Mobius.Proto.Social.ProtoPlayerLoadout.Parser, new[]{ "JobCardId", "SubJobIndex", "WeaponId", "SubWeaponUnlock", "AbilityCards" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Mobius.Proto.Social.ProtoPlayerCardInfo), global::Mobius.Proto.Social.ProtoPlayerCardInfo.Parser, new[]{ "AbilityCardId", "AbilityCardLevel", "AbilityLevel", "ExtraSkillUnlock", "OverBoostLevel", "SlotIndex" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ProtoPlayerIdentity : pb::IMessage<ProtoPlayerIdentity>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerIdentity> _parser = new pb::MessageParser<ProtoPlayerIdentity>(() => new ProtoPlayerIdentity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerIdentity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Social.SocialReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerIdentity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerIdentity(ProtoPlayerIdentity other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerLevel_ = other.playerLevel_;
      isPlayer_ = other.isPlayer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerIdentity Clone() {
      return new ProtoPlayerIdentity(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 3;
    private int playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "is_player" field.</summary>
    public const int IsPlayerFieldNumber = 4;
    private bool isPlayer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsPlayer {
      get { return isPlayer_; }
      set {
        isPlayer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerIdentity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerIdentity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (IsPlayer != other.IsPlayer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (IsPlayer != false) hash ^= IsPlayer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (IsPlayer != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PlayerLevel);
      }
      if (IsPlayer != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsPlayer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (IsPlayer != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerIdentity other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.IsPlayer != false) {
        IsPlayer = other.IsPlayer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            IsPlayer = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 24: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 32: {
            IsPlayer = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerSocialInfo : pb::IMessage<ProtoPlayerSocialInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerSocialInfo> _parser = new pb::MessageParser<ProtoPlayerSocialInfo>(() => new ProtoPlayerSocialInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerSocialInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Social.SocialReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerSocialInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerSocialInfo(ProtoPlayerSocialInfo other) : this() {
      playerInfo_ = other.playerInfo_ != null ? other.playerInfo_.Clone() : null;
      lastOnline_ = other.lastOnline_;
      regionMapId_ = other.regionMapId_;
      regionNodeIndex_ = other.regionNodeIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerSocialInfo Clone() {
      return new ProtoPlayerSocialInfo(this);
    }

    /// <summary>Field number for the "player_info" field.</summary>
    public const int PlayerInfoFieldNumber = 1;
    private global::Mobius.Proto.Social.ProtoPlayerInfo playerInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Social.ProtoPlayerInfo PlayerInfo {
      get { return playerInfo_; }
      set {
        playerInfo_ = value;
      }
    }

    /// <summary>Field number for the "last_online" field.</summary>
    public const int LastOnlineFieldNumber = 2;
    private long lastOnline_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastOnline {
      get { return lastOnline_; }
      set {
        lastOnline_ = value;
      }
    }

    /// <summary>Field number for the "region_map_id" field.</summary>
    public const int RegionMapIdFieldNumber = 3;
    private string regionMapId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionMapId {
      get { return regionMapId_; }
      set {
        regionMapId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "region_node_index" field.</summary>
    public const int RegionNodeIndexFieldNumber = 4;
    private int regionNodeIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RegionNodeIndex {
      get { return regionNodeIndex_; }
      set {
        regionNodeIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerSocialInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerSocialInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PlayerInfo, other.PlayerInfo)) return false;
      if (LastOnline != other.LastOnline) return false;
      if (RegionMapId != other.RegionMapId) return false;
      if (RegionNodeIndex != other.RegionNodeIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (playerInfo_ != null) hash ^= PlayerInfo.GetHashCode();
      if (LastOnline != 0L) hash ^= LastOnline.GetHashCode();
      if (RegionMapId.Length != 0) hash ^= RegionMapId.GetHashCode();
      if (RegionNodeIndex != 0) hash ^= RegionNodeIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (LastOnline != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LastOnline);
      }
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RegionMapId);
      }
      if (RegionNodeIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RegionNodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (playerInfo_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(PlayerInfo);
      }
      if (LastOnline != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LastOnline);
      }
      if (RegionMapId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RegionMapId);
      }
      if (RegionNodeIndex != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(RegionNodeIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (playerInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PlayerInfo);
      }
      if (LastOnline != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastOnline);
      }
      if (RegionMapId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionMapId);
      }
      if (RegionNodeIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RegionNodeIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerSocialInfo other) {
      if (other == null) {
        return;
      }
      if (other.playerInfo_ != null) {
        if (playerInfo_ == null) {
          PlayerInfo = new global::Mobius.Proto.Social.ProtoPlayerInfo();
        }
        PlayerInfo.MergeFrom(other.PlayerInfo);
      }
      if (other.LastOnline != 0L) {
        LastOnline = other.LastOnline;
      }
      if (other.RegionMapId.Length != 0) {
        RegionMapId = other.RegionMapId;
      }
      if (other.RegionNodeIndex != 0) {
        RegionNodeIndex = other.RegionNodeIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Mobius.Proto.Social.ProtoPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 16: {
            LastOnline = input.ReadInt64();
            break;
          }
          case 26: {
            RegionMapId = input.ReadString();
            break;
          }
          case 32: {
            RegionNodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (playerInfo_ == null) {
              PlayerInfo = new global::Mobius.Proto.Social.ProtoPlayerInfo();
            }
            input.ReadMessage(PlayerInfo);
            break;
          }
          case 16: {
            LastOnline = input.ReadInt64();
            break;
          }
          case 26: {
            RegionMapId = input.ReadString();
            break;
          }
          case 32: {
            RegionNodeIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerInfo : pb::IMessage<ProtoPlayerInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerInfo> _parser = new pb::MessageParser<ProtoPlayerInfo>(() => new ProtoPlayerInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Social.SocialReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerInfo(ProtoPlayerInfo other) : this() {
      playerId_ = other.playerId_;
      playerName_ = other.playerName_;
      playerComment_ = other.playerComment_;
      playerLevel_ = other.playerLevel_;
      jobCardId_ = other.jobCardId_;
      subJobIndex_ = other.subJobIndex_;
      companionId_ = other.companionId_;
      rentalCard_ = other.rentalCard_ != null ? other.rentalCard_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerInfo Clone() {
      return new ProtoPlayerInfo(this);
    }

    /// <summary>Field number for the "player_id" field.</summary>
    public const int PlayerIdFieldNumber = 1;
    private string playerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerId {
      get { return playerId_; }
      set {
        playerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_name" field.</summary>
    public const int PlayerNameFieldNumber = 2;
    private string playerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerName {
      get { return playerName_; }
      set {
        playerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_comment" field.</summary>
    public const int PlayerCommentFieldNumber = 3;
    private string playerComment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlayerComment {
      get { return playerComment_; }
      set {
        playerComment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "player_level" field.</summary>
    public const int PlayerLevelFieldNumber = 4;
    private int playerLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int PlayerLevel {
      get { return playerLevel_; }
      set {
        playerLevel_ = value;
      }
    }

    /// <summary>Field number for the "job_card_id" field.</summary>
    public const int JobCardIdFieldNumber = 6;
    private string jobCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobCardId {
      get { return jobCardId_; }
      set {
        jobCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub_job_index" field.</summary>
    public const int SubJobIndexFieldNumber = 7;
    private int subJobIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubJobIndex {
      get { return subJobIndex_; }
      set {
        subJobIndex_ = value;
      }
    }

    /// <summary>Field number for the "companion_id" field.</summary>
    public const int CompanionIdFieldNumber = 8;
    private string companionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CompanionId {
      get { return companionId_; }
      set {
        companionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "rental_card" field.</summary>
    public const int RentalCardFieldNumber = 9;
    private global::Mobius.Proto.Social.ProtoPlayerCardInfo rentalCard_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Mobius.Proto.Social.ProtoPlayerCardInfo RentalCard {
      get { return rentalCard_; }
      set {
        rentalCard_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerId != other.PlayerId) return false;
      if (PlayerName != other.PlayerName) return false;
      if (PlayerComment != other.PlayerComment) return false;
      if (PlayerLevel != other.PlayerLevel) return false;
      if (JobCardId != other.JobCardId) return false;
      if (SubJobIndex != other.SubJobIndex) return false;
      if (CompanionId != other.CompanionId) return false;
      if (!object.Equals(RentalCard, other.RentalCard)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerId.Length != 0) hash ^= PlayerId.GetHashCode();
      if (PlayerName.Length != 0) hash ^= PlayerName.GetHashCode();
      if (PlayerComment.Length != 0) hash ^= PlayerComment.GetHashCode();
      if (PlayerLevel != 0) hash ^= PlayerLevel.GetHashCode();
      if (JobCardId.Length != 0) hash ^= JobCardId.GetHashCode();
      if (SubJobIndex != 0) hash ^= SubJobIndex.GetHashCode();
      if (CompanionId.Length != 0) hash ^= CompanionId.GetHashCode();
      if (rentalCard_ != null) hash ^= RentalCard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerComment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerComment);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerLevel);
      }
      if (JobCardId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(JobCardId);
      }
      if (SubJobIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SubJobIndex);
      }
      if (CompanionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CompanionId);
      }
      if (rentalCard_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RentalCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PlayerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlayerId);
      }
      if (PlayerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(PlayerName);
      }
      if (PlayerComment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlayerComment);
      }
      if (PlayerLevel != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PlayerLevel);
      }
      if (JobCardId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(JobCardId);
      }
      if (SubJobIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(SubJobIndex);
      }
      if (CompanionId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CompanionId);
      }
      if (rentalCard_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(RentalCard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerId);
      }
      if (PlayerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerName);
      }
      if (PlayerComment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlayerComment);
      }
      if (PlayerLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PlayerLevel);
      }
      if (JobCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobCardId);
      }
      if (SubJobIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubJobIndex);
      }
      if (CompanionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CompanionId);
      }
      if (rentalCard_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RentalCard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerInfo other) {
      if (other == null) {
        return;
      }
      if (other.PlayerId.Length != 0) {
        PlayerId = other.PlayerId;
      }
      if (other.PlayerName.Length != 0) {
        PlayerName = other.PlayerName;
      }
      if (other.PlayerComment.Length != 0) {
        PlayerComment = other.PlayerComment;
      }
      if (other.PlayerLevel != 0) {
        PlayerLevel = other.PlayerLevel;
      }
      if (other.JobCardId.Length != 0) {
        JobCardId = other.JobCardId;
      }
      if (other.SubJobIndex != 0) {
        SubJobIndex = other.SubJobIndex;
      }
      if (other.CompanionId.Length != 0) {
        CompanionId = other.CompanionId;
      }
      if (other.rentalCard_ != null) {
        if (rentalCard_ == null) {
          RentalCard = new global::Mobius.Proto.Social.ProtoPlayerCardInfo();
        }
        RentalCard.MergeFrom(other.RentalCard);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 26: {
            PlayerComment = input.ReadString();
            break;
          }
          case 32: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 50: {
            JobCardId = input.ReadString();
            break;
          }
          case 56: {
            SubJobIndex = input.ReadInt32();
            break;
          }
          case 66: {
            CompanionId = input.ReadString();
            break;
          }
          case 74: {
            if (rentalCard_ == null) {
              RentalCard = new global::Mobius.Proto.Social.ProtoPlayerCardInfo();
            }
            input.ReadMessage(RentalCard);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PlayerId = input.ReadString();
            break;
          }
          case 18: {
            PlayerName = input.ReadString();
            break;
          }
          case 26: {
            PlayerComment = input.ReadString();
            break;
          }
          case 32: {
            PlayerLevel = input.ReadInt32();
            break;
          }
          case 50: {
            JobCardId = input.ReadString();
            break;
          }
          case 56: {
            SubJobIndex = input.ReadInt32();
            break;
          }
          case 66: {
            CompanionId = input.ReadString();
            break;
          }
          case 74: {
            if (rentalCard_ == null) {
              RentalCard = new global::Mobius.Proto.Social.ProtoPlayerCardInfo();
            }
            input.ReadMessage(RentalCard);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerLoadout : pb::IMessage<ProtoPlayerLoadout>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerLoadout> _parser = new pb::MessageParser<ProtoPlayerLoadout>(() => new ProtoPlayerLoadout());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerLoadout> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Social.SocialReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadout() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadout(ProtoPlayerLoadout other) : this() {
      jobCardId_ = other.jobCardId_;
      subJobIndex_ = other.subJobIndex_;
      weaponId_ = other.weaponId_;
      subWeaponUnlock_ = other.subWeaponUnlock_;
      abilityCards_ = other.abilityCards_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerLoadout Clone() {
      return new ProtoPlayerLoadout(this);
    }

    /// <summary>Field number for the "job_card_id" field.</summary>
    public const int JobCardIdFieldNumber = 1;
    private string jobCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string JobCardId {
      get { return jobCardId_; }
      set {
        jobCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub_job_index" field.</summary>
    public const int SubJobIndexFieldNumber = 2;
    private int subJobIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubJobIndex {
      get { return subJobIndex_; }
      set {
        subJobIndex_ = value;
      }
    }

    /// <summary>Field number for the "weapon_id" field.</summary>
    public const int WeaponIdFieldNumber = 3;
    private string weaponId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WeaponId {
      get { return weaponId_; }
      set {
        weaponId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub_weapon_unlock" field.</summary>
    public const int SubWeaponUnlockFieldNumber = 4;
    private int subWeaponUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SubWeaponUnlock {
      get { return subWeaponUnlock_; }
      set {
        subWeaponUnlock_ = value;
      }
    }

    /// <summary>Field number for the "ability_cards" field.</summary>
    public const int AbilityCardsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Mobius.Proto.Social.ProtoPlayerCardInfo> _repeated_abilityCards_codec
        = pb::FieldCodec.ForMessage(42, global::Mobius.Proto.Social.ProtoPlayerCardInfo.Parser);
    private readonly pbc::RepeatedField<global::Mobius.Proto.Social.ProtoPlayerCardInfo> abilityCards_ = new pbc::RepeatedField<global::Mobius.Proto.Social.ProtoPlayerCardInfo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Mobius.Proto.Social.ProtoPlayerCardInfo> AbilityCards {
      get { return abilityCards_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerLoadout);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerLoadout other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (JobCardId != other.JobCardId) return false;
      if (SubJobIndex != other.SubJobIndex) return false;
      if (WeaponId != other.WeaponId) return false;
      if (SubWeaponUnlock != other.SubWeaponUnlock) return false;
      if(!abilityCards_.Equals(other.abilityCards_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (JobCardId.Length != 0) hash ^= JobCardId.GetHashCode();
      if (SubJobIndex != 0) hash ^= SubJobIndex.GetHashCode();
      if (WeaponId.Length != 0) hash ^= WeaponId.GetHashCode();
      if (SubWeaponUnlock != 0) hash ^= SubWeaponUnlock.GetHashCode();
      hash ^= abilityCards_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (JobCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobCardId);
      }
      if (SubJobIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubJobIndex);
      }
      if (WeaponId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WeaponId);
      }
      if (SubWeaponUnlock != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SubWeaponUnlock);
      }
      abilityCards_.WriteTo(output, _repeated_abilityCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (JobCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(JobCardId);
      }
      if (SubJobIndex != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SubJobIndex);
      }
      if (WeaponId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WeaponId);
      }
      if (SubWeaponUnlock != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(SubWeaponUnlock);
      }
      abilityCards_.WriteTo(ref output, _repeated_abilityCards_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (JobCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(JobCardId);
      }
      if (SubJobIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubJobIndex);
      }
      if (WeaponId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WeaponId);
      }
      if (SubWeaponUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SubWeaponUnlock);
      }
      size += abilityCards_.CalculateSize(_repeated_abilityCards_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerLoadout other) {
      if (other == null) {
        return;
      }
      if (other.JobCardId.Length != 0) {
        JobCardId = other.JobCardId;
      }
      if (other.SubJobIndex != 0) {
        SubJobIndex = other.SubJobIndex;
      }
      if (other.WeaponId.Length != 0) {
        WeaponId = other.WeaponId;
      }
      if (other.SubWeaponUnlock != 0) {
        SubWeaponUnlock = other.SubWeaponUnlock;
      }
      abilityCards_.Add(other.abilityCards_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            JobCardId = input.ReadString();
            break;
          }
          case 16: {
            SubJobIndex = input.ReadInt32();
            break;
          }
          case 26: {
            WeaponId = input.ReadString();
            break;
          }
          case 32: {
            SubWeaponUnlock = input.ReadInt32();
            break;
          }
          case 42: {
            abilityCards_.AddEntriesFrom(input, _repeated_abilityCards_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            JobCardId = input.ReadString();
            break;
          }
          case 16: {
            SubJobIndex = input.ReadInt32();
            break;
          }
          case 26: {
            WeaponId = input.ReadString();
            break;
          }
          case 32: {
            SubWeaponUnlock = input.ReadInt32();
            break;
          }
          case 42: {
            abilityCards_.AddEntriesFrom(ref input, _repeated_abilityCards_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoPlayerCardInfo : pb::IMessage<ProtoPlayerCardInfo>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoPlayerCardInfo> _parser = new pb::MessageParser<ProtoPlayerCardInfo>(() => new ProtoPlayerCardInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ProtoPlayerCardInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Mobius.Proto.Social.SocialReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerCardInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerCardInfo(ProtoPlayerCardInfo other) : this() {
      abilityCardId_ = other.abilityCardId_;
      abilityCardLevel_ = other.abilityCardLevel_;
      abilityLevel_ = other.abilityLevel_;
      extraSkillUnlock_ = other.extraSkillUnlock_;
      overBoostLevel_ = other.overBoostLevel_;
      slotIndex_ = other.slotIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ProtoPlayerCardInfo Clone() {
      return new ProtoPlayerCardInfo(this);
    }

    /// <summary>Field number for the "ability_card_id" field.</summary>
    public const int AbilityCardIdFieldNumber = 1;
    private string abilityCardId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AbilityCardId {
      get { return abilityCardId_; }
      set {
        abilityCardId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ability_card_level" field.</summary>
    public const int AbilityCardLevelFieldNumber = 2;
    private int abilityCardLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AbilityCardLevel {
      get { return abilityCardLevel_; }
      set {
        abilityCardLevel_ = value;
      }
    }

    /// <summary>Field number for the "ability_level" field.</summary>
    public const int AbilityLevelFieldNumber = 3;
    private int abilityLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AbilityLevel {
      get { return abilityLevel_; }
      set {
        abilityLevel_ = value;
      }
    }

    /// <summary>Field number for the "extra_skill_unlock" field.</summary>
    public const int ExtraSkillUnlockFieldNumber = 4;
    private int extraSkillUnlock_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExtraSkillUnlock {
      get { return extraSkillUnlock_; }
      set {
        extraSkillUnlock_ = value;
      }
    }

    /// <summary>Field number for the "over_boost_level" field.</summary>
    public const int OverBoostLevelFieldNumber = 5;
    private int overBoostLevel_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int OverBoostLevel {
      get { return overBoostLevel_; }
      set {
        overBoostLevel_ = value;
      }
    }

    /// <summary>Field number for the "slot_index" field.</summary>
    public const int SlotIndexFieldNumber = 6;
    private int slotIndex_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SlotIndex {
      get { return slotIndex_; }
      set {
        slotIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ProtoPlayerCardInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ProtoPlayerCardInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AbilityCardId != other.AbilityCardId) return false;
      if (AbilityCardLevel != other.AbilityCardLevel) return false;
      if (AbilityLevel != other.AbilityLevel) return false;
      if (ExtraSkillUnlock != other.ExtraSkillUnlock) return false;
      if (OverBoostLevel != other.OverBoostLevel) return false;
      if (SlotIndex != other.SlotIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AbilityCardId.Length != 0) hash ^= AbilityCardId.GetHashCode();
      if (AbilityCardLevel != 0) hash ^= AbilityCardLevel.GetHashCode();
      if (AbilityLevel != 0) hash ^= AbilityLevel.GetHashCode();
      if (ExtraSkillUnlock != 0) hash ^= ExtraSkillUnlock.GetHashCode();
      if (OverBoostLevel != 0) hash ^= OverBoostLevel.GetHashCode();
      if (SlotIndex != 0) hash ^= SlotIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbilityCardId);
      }
      if (AbilityCardLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AbilityCardLevel);
      }
      if (AbilityLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AbilityLevel);
      }
      if (ExtraSkillUnlock != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OverBoostLevel);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SlotIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AbilityCardId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AbilityCardId);
      }
      if (AbilityCardLevel != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(AbilityCardLevel);
      }
      if (AbilityLevel != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AbilityLevel);
      }
      if (ExtraSkillUnlock != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(OverBoostLevel);
      }
      if (SlotIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(SlotIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AbilityCardId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AbilityCardId);
      }
      if (AbilityCardLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityCardLevel);
      }
      if (AbilityLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AbilityLevel);
      }
      if (ExtraSkillUnlock != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExtraSkillUnlock);
      }
      if (OverBoostLevel != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(OverBoostLevel);
      }
      if (SlotIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlotIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ProtoPlayerCardInfo other) {
      if (other == null) {
        return;
      }
      if (other.AbilityCardId.Length != 0) {
        AbilityCardId = other.AbilityCardId;
      }
      if (other.AbilityCardLevel != 0) {
        AbilityCardLevel = other.AbilityCardLevel;
      }
      if (other.AbilityLevel != 0) {
        AbilityLevel = other.AbilityLevel;
      }
      if (other.ExtraSkillUnlock != 0) {
        ExtraSkillUnlock = other.ExtraSkillUnlock;
      }
      if (other.OverBoostLevel != 0) {
        OverBoostLevel = other.OverBoostLevel;
      }
      if (other.SlotIndex != 0) {
        SlotIndex = other.SlotIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 16: {
            AbilityCardLevel = input.ReadInt32();
            break;
          }
          case 24: {
            AbilityLevel = input.ReadInt32();
            break;
          }
          case 32: {
            ExtraSkillUnlock = input.ReadInt32();
            break;
          }
          case 40: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 48: {
            SlotIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AbilityCardId = input.ReadString();
            break;
          }
          case 16: {
            AbilityCardLevel = input.ReadInt32();
            break;
          }
          case 24: {
            AbilityLevel = input.ReadInt32();
            break;
          }
          case 32: {
            ExtraSkillUnlock = input.ReadInt32();
            break;
          }
          case 40: {
            OverBoostLevel = input.ReadInt32();
            break;
          }
          case 48: {
            SlotIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
