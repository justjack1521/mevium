syntax = "proto3";

package protoc;

option csharp_namespace = "Mobius.Proto";
option go_package = "github.com/justjack1521/mevium/pkg/genproto/protoc";

import "data.proto";

enum RequestType {
  BASE = 0;
  GET_PROFILE = 200;
  CREATE_PROFILE = 300;
  CARD_SALE = 400;
  CARD_FILTER_SORT = 500;
  CARD_FAVOURITE = 600;
  SKILL_PANEL = 700;
  DECK_EDIT = 800;
  DECK_EDIT_ALL = 900;
  TELEPORT = 1000;
  REGION_MAP_OPEN = 1100;
  BATTLE_REVIVE = 1200;
  BATTLE_COMPLETE = 1300;
  FOLLOW_PLAYER = 1400;
  UNFOLLOW_PLAYER = 1500;
  CONFIRM_DAILY_MISSION = 1600;
  CLAIM_EVENT_RANKING = 1700;
  CLAIM_MAILBOX = 1800;
  BATTLE_START = 1900;
  CARD_TRANSFER = 2000;
  CARD_FUSION = 2100;
  CARD_FUSION_BOOST = 2200;
  STAMINA_RESTORE = 2300;
}

message RequestHeader {
  string client_id      =  1;
  string connection_id  =  2;
  string command_id     =  3;
}

message BaseRequest {
  RequestHeader header     =  1;
  int32         operation  =  2;
  bytes         data       =  3;
}

message BattleCompleteRequest {
  uint64 score = 1;
}

message BattleReviveRequest {

}

message BattleStartRequest {
  int32 index = 1;
  int32 deck_index = 2;
  bool hard_mode = 3;
}

message CreateProfileRequest {
  string player_name = 1;
}

message CardAugmentRequest {
}

message CardFavouriteRequest {
  string card = 1;
  bool value = 2;
}

message CardFilterSortSetRequest {
  int32            View             =  1;
  int32            Index            =  2;
  repeated  int32  CardTypes        =  3;
  repeated  int32  CardElements     =  4;
  repeated  int32  SpecialFilters   =  5;
  repeated  int32  SortSelectors    =  6;
  bool             SortDescending   =  7;
}

message CardFusionRequest {
  int32 base_card = 1;
  repeated int32 inventory_cards = 2;
  repeated int32 bank_cards = 3;
}

message CardBoostFusionRequest {
  int32 card = 1;
  bool max_boost = 2;
}

message CardSaleRequest {
  repeated string cards = 1;
}

message CardTransferRequest {
  bool FromBank = 1;
  repeated int32 Cards = 2;
}

message ClaimMailBoxItemRequest {
  repeated int32 index = 1;
}

message ClaimEventRankingRequest {

}

message ConfirmDailyMissionRequest {

}

message DeckEditRequest {
  int32             Index               =  1;
  int32             JobCardIndex        =  2;
  int32             JobCardSubIndex     =  3;
  int32             WeaponIndex         =  4;
  int32             SubJobCardIndex     =  5;
  int32             SubJobCardSubIndex  =  6;
  int32             SubWeaponIndex      =  7;
  repeated  string  AbilityCardIDs      =  8;
  repeated  string  SubAbilityCardIDs   =  9;
}

message DeckEditAllRequest {
  repeated DeckEditRequest Requests = 1;
  bool MPDeck = 2;
}

message FetchPlayerDataRequest {

}

message FollowPlayerRequest {
  string player_id = 1;
}

message SkillPanelUnlockResponse {
  repeated protog.ProtoItemValuePair ItemsRemoved = 1;
  protog.ProtoJobCardInstance JobInstance = 2;
}

message StaminaRestoreRequest {
  bool multi_player = 1;
}

message TeleportRequest {
  string region_map = 1;
  int32 region_map_node = 2;
}

message UnfollowPlayerRequest {
  string player_id = 1;
}