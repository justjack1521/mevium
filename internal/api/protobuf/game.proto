syntax = "proto3";

package game;

option go_package = "github.com/justjack1521/mevium/pkg/genproto/game";

message ProtoPlayerInfo {
  string player_id = 1;
  string player_name = 2;
  string player_comment = 3;
  int32 player_level = 4;
  int64 last_online = 5;
  string job_card_id = 6;
  int32 sub_job_index = 7;
  string companion_id = 8;
  ProtoPlayerCardInfo rental_card = 9;
}

message ProtoPlayerCardInfo {
  string ability_card_id = 1;
  int32 ability_level = 3;
  int32 ability_card_level = 2;
  int32 extra_skill_unlock = 4;
  int32 over_boost_level = 5;
  int32 slot_index = 6;
}

message ProtoAbilityCardInstance {
  string sys_id = 1;
  int32 card_level = 2;
  uint64 accum_exp = 3;
  bool card_lock = 4;
  int32 ability_level = 5;
  int32 seed_unlock = 6;
  string ability_card_id = 7;
  int64 created_at = 8;
  uint64 total_accum_exp = 9;
  int32 extra_skill_unlock = 10;
  int32 over_boost_level = 11;
}

message ProtoBattleStartData {
  string region_map = 1;
  int32 index = 2;
  bool hard_mode = 3;
  int32 deck_index = 4;
  repeated game.BattleItemDrop ItemDropTable = 5;
  int64 created_at = 20;
}

message ProtoItemInstance {
  string sys_id = 1;
  int32 quantity = 2;
  string item_id = 3;
  int64 created_at = 4;
}

message ItemValuePair {
  string item_id = 1;
  int32 value = 2;
}

message ProtoMailBoxItem {
  enum ReferenceSource {
    NONE = 0;
    ABILITY_CARD = 1;
    ITEM = 2;
    JOB_CARD = 3;
    WEAPON = 4;
    FAIRY_COMPANION = 5;
    MP_STAMP = 6;
  }
  string reference_id = 1;
  ReferenceSource source = 2;
  int32 quantity = 3;
  int64 received_at = 4;
}

message BattleItemDrop {
    DropTableKey key = 1;
    ItemDropTableResult drop = 2;
}

message DropTableKey {
  string fiend_id = 1;
  int32 fiend_index = 2;
}

message ItemDropTableResult {
  string item_id = 1;
  int32 quantity = 2;
}

message LastBattleResults {
  int32 TotalEXP = 1;
  int32 GoldReward = 2;
  int64 PreviousWeeklyRank = 4;
  bool NewWeeklyHighScore = 3;
  uint64 Score = 6;
  uint32 PreviousLevel = 7;
  uint64 PreviousAccumEXP = 8;
  repeated CardPreviousState PreviousCardStates = 9;
  repeated ItemValuePair SkillSeedReward = 10;
  uint32 PreviousMaxStamina = 11;
  float PreviousEXPBonus = 12;
  int32 PreviousDeckCount = 13;
}

message CardPreviousState {
  string AbilityCardID = 1;
  int32 SlotIndex = 2;
  int32 PreviousLevel = 3;
  uint64 PreviousAccumEXP = 4;
}

message RegionEventData {
  int32 SourceIndex = 1;
  int32 TargetIndex = 2;
  int32 DefinitionValue = 3;
  int32 Order = 4;
}