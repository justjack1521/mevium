// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: message.game.proto

package protom

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BattleComplete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       string         `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName     string         `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerLevel    int32          `protobuf:"varint,3,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	Score          uint64         `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	PrimaryLoadout *BattleLoadout `protobuf:"bytes,5,opt,name=primary_loadout,json=primaryLoadout,proto3" json:"primary_loadout,omitempty"`
}

func (x *BattleComplete) Reset() {
	*x = BattleComplete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_game_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleComplete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleComplete) ProtoMessage() {}

func (x *BattleComplete) ProtoReflect() protoreflect.Message {
	mi := &file_message_game_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleComplete.ProtoReflect.Descriptor instead.
func (*BattleComplete) Descriptor() ([]byte, []int) {
	return file_message_game_proto_rawDescGZIP(), []int{0}
}

func (x *BattleComplete) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BattleComplete) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *BattleComplete) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *BattleComplete) GetScore() uint64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *BattleComplete) GetPrimaryLoadout() *BattleLoadout {
	if x != nil {
		return x.PrimaryLoadout
	}
	return nil
}

type BattleLoadout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobCardId    string               `protobuf:"bytes,1,opt,name=job_card_id,json=jobCardId,proto3" json:"job_card_id,omitempty"`
	SubJobIndex  int32                `protobuf:"varint,2,opt,name=sub_job_index,json=subJobIndex,proto3" json:"sub_job_index,omitempty"`
	WeaponId     string               `protobuf:"bytes,3,opt,name=weapon_id,json=weaponId,proto3" json:"weapon_id,omitempty"`
	AbilityCards []*BattleLoadoutCard `protobuf:"bytes,4,rep,name=ability_cards,json=abilityCards,proto3" json:"ability_cards,omitempty"`
}

func (x *BattleLoadout) Reset() {
	*x = BattleLoadout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_game_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleLoadout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleLoadout) ProtoMessage() {}

func (x *BattleLoadout) ProtoReflect() protoreflect.Message {
	mi := &file_message_game_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleLoadout.ProtoReflect.Descriptor instead.
func (*BattleLoadout) Descriptor() ([]byte, []int) {
	return file_message_game_proto_rawDescGZIP(), []int{1}
}

func (x *BattleLoadout) GetJobCardId() string {
	if x != nil {
		return x.JobCardId
	}
	return ""
}

func (x *BattleLoadout) GetSubJobIndex() int32 {
	if x != nil {
		return x.SubJobIndex
	}
	return 0
}

func (x *BattleLoadout) GetWeaponId() string {
	if x != nil {
		return x.WeaponId
	}
	return ""
}

func (x *BattleLoadout) GetAbilityCards() []*BattleLoadoutCard {
	if x != nil {
		return x.AbilityCards
	}
	return nil
}

type BattleLoadoutCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityCardId    string `protobuf:"bytes,1,opt,name=ability_card_id,json=abilityCardId,proto3" json:"ability_card_id,omitempty"`
	AbilityLevel     int32  `protobuf:"varint,3,opt,name=ability_level,json=abilityLevel,proto3" json:"ability_level,omitempty"`
	AbilityCardLevel int32  `protobuf:"varint,2,opt,name=ability_card_level,json=abilityCardLevel,proto3" json:"ability_card_level,omitempty"`
	ExtraSkillUnlock int32  `protobuf:"varint,4,opt,name=extra_skill_unlock,json=extraSkillUnlock,proto3" json:"extra_skill_unlock,omitempty"`
	OverBoostLevel   int32  `protobuf:"varint,5,opt,name=over_boost_level,json=overBoostLevel,proto3" json:"over_boost_level,omitempty"`
	SlotIndex        int32  `protobuf:"varint,6,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
}

func (x *BattleLoadoutCard) Reset() {
	*x = BattleLoadoutCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_game_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleLoadoutCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleLoadoutCard) ProtoMessage() {}

func (x *BattleLoadoutCard) ProtoReflect() protoreflect.Message {
	mi := &file_message_game_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleLoadoutCard.ProtoReflect.Descriptor instead.
func (*BattleLoadoutCard) Descriptor() ([]byte, []int) {
	return file_message_game_proto_rawDescGZIP(), []int{2}
}

func (x *BattleLoadoutCard) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *BattleLoadoutCard) GetAbilityLevel() int32 {
	if x != nil {
		return x.AbilityLevel
	}
	return 0
}

func (x *BattleLoadoutCard) GetAbilityCardLevel() int32 {
	if x != nil {
		return x.AbilityCardLevel
	}
	return 0
}

func (x *BattleLoadoutCard) GetExtraSkillUnlock() int32 {
	if x != nil {
		return x.ExtraSkillUnlock
	}
	return 0
}

func (x *BattleLoadoutCard) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

func (x *BattleLoadoutCard) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

type BattleRankingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RankingId       string              `protobuf:"bytes,1,opt,name=ranking_id,json=rankingId,proto3" json:"ranking_id,omitempty"`
	ShortCode       string              `protobuf:"bytes,2,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	PlayerRanking   *BattlePlayerRank   `protobuf:"bytes,3,opt,name=player_ranking,json=playerRanking,proto3" json:"player_ranking,omitempty"`
	UpperRankings   []*BattlePlayerRank `protobuf:"bytes,4,rep,name=upper_rankings,json=upperRankings,proto3" json:"upper_rankings,omitempty"`
	LowerRankings   []*BattlePlayerRank `protobuf:"bytes,5,rep,name=lower_rankings,json=lowerRankings,proto3" json:"lower_rankings,omitempty"`
	TopRankings     []*BattlePlayerRank `protobuf:"bytes,6,rep,name=top_rankings,json=topRankings,proto3" json:"top_rankings,omitempty"`
	RankRangeScores map[int64]float64   `protobuf:"bytes,7,rep,name=rank_range_scores,json=rankRangeScores,proto3" json:"rank_range_scores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *BattleRankingInfo) Reset() {
	*x = BattleRankingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_game_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleRankingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleRankingInfo) ProtoMessage() {}

func (x *BattleRankingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_message_game_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleRankingInfo.ProtoReflect.Descriptor instead.
func (*BattleRankingInfo) Descriptor() ([]byte, []int) {
	return file_message_game_proto_rawDescGZIP(), []int{3}
}

func (x *BattleRankingInfo) GetRankingId() string {
	if x != nil {
		return x.RankingId
	}
	return ""
}

func (x *BattleRankingInfo) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *BattleRankingInfo) GetPlayerRanking() *BattlePlayerRank {
	if x != nil {
		return x.PlayerRanking
	}
	return nil
}

func (x *BattleRankingInfo) GetUpperRankings() []*BattlePlayerRank {
	if x != nil {
		return x.UpperRankings
	}
	return nil
}

func (x *BattleRankingInfo) GetLowerRankings() []*BattlePlayerRank {
	if x != nil {
		return x.LowerRankings
	}
	return nil
}

func (x *BattleRankingInfo) GetTopRankings() []*BattlePlayerRank {
	if x != nil {
		return x.TopRankings
	}
	return nil
}

func (x *BattleRankingInfo) GetRankRangeScores() map[int64]float64 {
	if x != nil {
		return x.RankRangeScores
	}
	return nil
}

type BattlePlayerRank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       string         `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName     string         `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerLevel    int32          `protobuf:"varint,3,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	Score          float64        `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	Rank           int64          `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	PrimaryLoadout *BattleLoadout `protobuf:"bytes,6,opt,name=primary_loadout,json=primaryLoadout,proto3" json:"primary_loadout,omitempty"`
}

func (x *BattlePlayerRank) Reset() {
	*x = BattlePlayerRank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_game_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattlePlayerRank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlePlayerRank) ProtoMessage() {}

func (x *BattlePlayerRank) ProtoReflect() protoreflect.Message {
	mi := &file_message_game_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlePlayerRank.ProtoReflect.Descriptor instead.
func (*BattlePlayerRank) Descriptor() ([]byte, []int) {
	return file_message_game_proto_rawDescGZIP(), []int{4}
}

func (x *BattlePlayerRank) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *BattlePlayerRank) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *BattlePlayerRank) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *BattlePlayerRank) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *BattlePlayerRank) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *BattlePlayerRank) GetPrimaryLoadout() *BattleLoadout {
	if x != nil {
		return x.PrimaryLoadout
	}
	return nil
}

type BattleRankingClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claimed      bool               `protobuf:"varint,1,opt,name=claimed,proto3" json:"claimed,omitempty"`
	ReadyToClaim bool               `protobuf:"varint,2,opt,name=ready_to_claim,json=readyToClaim,proto3" json:"ready_to_claim,omitempty"`
	RankingInfo  *BattleRankingInfo `protobuf:"bytes,3,opt,name=ranking_info,json=rankingInfo,proto3" json:"ranking_info,omitempty"`
}

func (x *BattleRankingClaim) Reset() {
	*x = BattleRankingClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_game_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleRankingClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleRankingClaim) ProtoMessage() {}

func (x *BattleRankingClaim) ProtoReflect() protoreflect.Message {
	mi := &file_message_game_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleRankingClaim.ProtoReflect.Descriptor instead.
func (*BattleRankingClaim) Descriptor() ([]byte, []int) {
	return file_message_game_proto_rawDescGZIP(), []int{5}
}

func (x *BattleRankingClaim) GetClaimed() bool {
	if x != nil {
		return x.Claimed
	}
	return false
}

func (x *BattleRankingClaim) GetReadyToClaim() bool {
	if x != nil {
		return x.ReadyToClaim
	}
	return false
}

func (x *BattleRankingClaim) GetRankingInfo() *BattleRankingInfo {
	if x != nil {
		return x.RankingInfo
	}
	return nil
}

var File_message_game_proto protoreflect.FileDescriptor

var file_message_game_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xcd, 0x01, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x44, 0x0a, 0x0f,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x6f,
	0x75, 0x74, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x6f,
	0x75, 0x74, 0x22, 0xb6, 0x01, 0x0a, 0x0d, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x61,
	0x64, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x6a, 0x6f, 0x62, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x62,
	0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x44, 0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x0c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x85, 0x02, 0x0a, 0x11,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c,
	0x0a, 0x12, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53,
	0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x22, 0x8f, 0x04, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72,
	0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x45,
	0x0a, 0x0e, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x0d, 0x75, 0x70, 0x70, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x45, 0x0a, 0x0e, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x0d, 0x6c,
	0x6f, 0x77, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x41, 0x0a, 0x0c,
	0x74, 0x6f, 0x70, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x60, 0x0a, 0x11, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x0f, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x1a, 0x42, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x44, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x52, 0x0e, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x22, 0x98, 0x01, 0x0a, 0x12,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x6c, 0x61,
	0x69, 0x6d, 0x12, 0x42, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x69,
	0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x6a, 0x61, 0x63, 0x6b, 0x31, 0x35, 0x32,
	0x31, 0x2f, 0x6d, 0x65, 0x76, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_game_proto_rawDescOnce sync.Once
	file_message_game_proto_rawDescData = file_message_game_proto_rawDesc
)

func file_message_game_proto_rawDescGZIP() []byte {
	file_message_game_proto_rawDescOnce.Do(func() {
		file_message_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_game_proto_rawDescData)
	})
	return file_message_game_proto_rawDescData
}

var file_message_game_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_message_game_proto_goTypes = []interface{}{
	(*BattleComplete)(nil),     // 0: notification.BattleComplete
	(*BattleLoadout)(nil),      // 1: notification.BattleLoadout
	(*BattleLoadoutCard)(nil),  // 2: notification.BattleLoadoutCard
	(*BattleRankingInfo)(nil),  // 3: notification.BattleRankingInfo
	(*BattlePlayerRank)(nil),   // 4: notification.BattlePlayerRank
	(*BattleRankingClaim)(nil), // 5: notification.BattleRankingClaim
	nil,                        // 6: notification.BattleRankingInfo.RankRangeScoresEntry
}
var file_message_game_proto_depIdxs = []int32{
	1, // 0: notification.BattleComplete.primary_loadout:type_name -> notification.BattleLoadout
	2, // 1: notification.BattleLoadout.ability_cards:type_name -> notification.BattleLoadoutCard
	4, // 2: notification.BattleRankingInfo.player_ranking:type_name -> notification.BattlePlayerRank
	4, // 3: notification.BattleRankingInfo.upper_rankings:type_name -> notification.BattlePlayerRank
	4, // 4: notification.BattleRankingInfo.lower_rankings:type_name -> notification.BattlePlayerRank
	4, // 5: notification.BattleRankingInfo.top_rankings:type_name -> notification.BattlePlayerRank
	6, // 6: notification.BattleRankingInfo.rank_range_scores:type_name -> notification.BattleRankingInfo.RankRangeScoresEntry
	1, // 7: notification.BattlePlayerRank.primary_loadout:type_name -> notification.BattleLoadout
	3, // 8: notification.BattleRankingClaim.ranking_info:type_name -> notification.BattleRankingInfo
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_message_game_proto_init() }
func file_message_game_proto_init() {
	if File_message_game_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_message_game_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleComplete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_game_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleLoadout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_game_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleLoadoutCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_game_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleRankingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_game_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattlePlayerRank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_game_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleRankingClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_game_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_game_proto_goTypes,
		DependencyIndexes: file_message_game_proto_depIdxs,
		MessageInfos:      file_message_game_proto_msgTypes,
	}.Build()
	File_message_game_proto = out.File
	file_message_game_proto_rawDesc = nil
	file_message_game_proto_goTypes = nil
	file_message_game_proto_depIdxs = nil
}
