// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: rank.proto

package protor

import (
	protog "github.com/justjack1521/mevium/pkg/genproto/protog"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoRankingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortCode       string                       `protobuf:"bytes,2,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	PlayerRanking   *ProtoPlayerRankSetDetails   `protobuf:"bytes,3,opt,name=player_ranking,json=playerRanking,proto3" json:"player_ranking,omitempty"`
	UpperRankings   []*ProtoPlayerRankSetDetails `protobuf:"bytes,4,rep,name=upper_rankings,json=upperRankings,proto3" json:"upper_rankings,omitempty"`
	LowerRankings   []*ProtoPlayerRankSetDetails `protobuf:"bytes,5,rep,name=lower_rankings,json=lowerRankings,proto3" json:"lower_rankings,omitempty"`
	TopRankings     []*ProtoPlayerRankSetDetails `protobuf:"bytes,6,rep,name=top_rankings,json=topRankings,proto3" json:"top_rankings,omitempty"`
	RankRangeScores map[int64]float64            `protobuf:"bytes,7,rep,name=rank_range_scores,json=rankRangeScores,proto3" json:"rank_range_scores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *ProtoRankingInfo) Reset() {
	*x = ProtoRankingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rank_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRankingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRankingInfo) ProtoMessage() {}

func (x *ProtoRankingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_rank_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRankingInfo.ProtoReflect.Descriptor instead.
func (*ProtoRankingInfo) Descriptor() ([]byte, []int) {
	return file_rank_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoRankingInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtoRankingInfo) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ProtoRankingInfo) GetPlayerRanking() *ProtoPlayerRankSetDetails {
	if x != nil {
		return x.PlayerRanking
	}
	return nil
}

func (x *ProtoRankingInfo) GetUpperRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.UpperRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetLowerRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.LowerRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetTopRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.TopRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetRankRangeScores() map[int64]float64 {
	if x != nil {
		return x.RankRangeScores
	}
	return nil
}

type ProtoPlayerRankSetDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       string                     `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName     string                     `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerLevel    int32                      `protobuf:"varint,3,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	Score          float64                    `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	Rank           int64                      `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	PrimaryLoadout *protog.ProtoPlayerLoadout `protobuf:"bytes,6,opt,name=primary_loadout,json=primaryLoadout,proto3" json:"primary_loadout,omitempty"`
}

func (x *ProtoPlayerRankSetDetails) Reset() {
	*x = ProtoPlayerRankSetDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rank_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerRankSetDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerRankSetDetails) ProtoMessage() {}

func (x *ProtoPlayerRankSetDetails) ProtoReflect() protoreflect.Message {
	mi := &file_rank_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerRankSetDetails.ProtoReflect.Descriptor instead.
func (*ProtoPlayerRankSetDetails) Descriptor() ([]byte, []int) {
	return file_rank_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoPlayerRankSetDetails) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ProtoPlayerRankSetDetails) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoPlayerRankSetDetails) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetPrimaryLoadout() *protog.ProtoPlayerLoadout {
	if x != nil {
		return x.PrimaryLoadout
	}
	return nil
}

type ProtoRankingEventClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortCode     string                     `protobuf:"bytes,2,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	Claimed       bool                       `protobuf:"varint,3,opt,name=claimed,proto3" json:"claimed,omitempty"`
	PlayerRanking *ProtoPlayerRankSetDetails `protobuf:"bytes,4,opt,name=player_ranking,json=playerRanking,proto3" json:"player_ranking,omitempty"`
}

func (x *ProtoRankingEventClaim) Reset() {
	*x = ProtoRankingEventClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rank_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRankingEventClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRankingEventClaim) ProtoMessage() {}

func (x *ProtoRankingEventClaim) ProtoReflect() protoreflect.Message {
	mi := &file_rank_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRankingEventClaim.ProtoReflect.Descriptor instead.
func (*ProtoRankingEventClaim) Descriptor() ([]byte, []int) {
	return file_rank_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoRankingEventClaim) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtoRankingEventClaim) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ProtoRankingEventClaim) GetClaimed() bool {
	if x != nil {
		return x.Claimed
	}
	return false
}

func (x *ProtoRankingEventClaim) GetPlayerRanking() *ProtoPlayerRankSetDetails {
	if x != nil {
		return x.PlayerRanking
	}
	return nil
}

var File_rank_proto protoreflect.FileDescriptor

var file_rank_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x72, 0x61,
	0x6e, 0x6b, 0x1a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfa,
	0x03, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x46, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x61, 0x6e,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x46, 0x0a, 0x0e, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x0d, 0x75, 0x70, 0x70, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x46, 0x0a, 0x0e, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x61, 0x6e,
	0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e,
	0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x6c, 0x6f, 0x77,
	0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x42, 0x0a, 0x0c, 0x74, 0x6f,
	0x70, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x57,
	0x0a, 0x11, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x72, 0x61, 0x6e, 0x6b,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xeb, 0x01, 0x0a, 0x19,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x72, 0x61, 0x6e, 0x6b, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f,
	0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x46, 0x0a,
	0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x72, 0x61, 0x6e, 0x6b, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x6a, 0x61, 0x63, 0x6b, 0x31, 0x35, 0x32, 0x31,
	0x2f, 0x6d, 0x65, 0x76, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_rank_proto_rawDescOnce sync.Once
	file_rank_proto_rawDescData = file_rank_proto_rawDesc
)

func file_rank_proto_rawDescGZIP() []byte {
	file_rank_proto_rawDescOnce.Do(func() {
		file_rank_proto_rawDescData = protoimpl.X.CompressGZIP(file_rank_proto_rawDescData)
	})
	return file_rank_proto_rawDescData
}

var file_rank_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rank_proto_goTypes = []interface{}{
	(*ProtoRankingInfo)(nil),          // 0: rank.ProtoRankingInfo
	(*ProtoPlayerRankSetDetails)(nil), // 1: rank.ProtoPlayerRankSetDetails
	(*ProtoRankingEventClaim)(nil),    // 2: rank.ProtoRankingEventClaim
	nil,                               // 3: rank.ProtoRankingInfo.RankRangeScoresEntry
	(*protog.ProtoPlayerLoadout)(nil), // 4: protog.ProtoPlayerLoadout
}
var file_rank_proto_depIdxs = []int32{
	1, // 0: rank.ProtoRankingInfo.player_ranking:type_name -> rank.ProtoPlayerRankSetDetails
	1, // 1: rank.ProtoRankingInfo.upper_rankings:type_name -> rank.ProtoPlayerRankSetDetails
	1, // 2: rank.ProtoRankingInfo.lower_rankings:type_name -> rank.ProtoPlayerRankSetDetails
	1, // 3: rank.ProtoRankingInfo.top_rankings:type_name -> rank.ProtoPlayerRankSetDetails
	3, // 4: rank.ProtoRankingInfo.rank_range_scores:type_name -> rank.ProtoRankingInfo.RankRangeScoresEntry
	4, // 5: rank.ProtoPlayerRankSetDetails.primary_loadout:type_name -> protog.ProtoPlayerLoadout
	1, // 6: rank.ProtoRankingEventClaim.player_ranking:type_name -> rank.ProtoPlayerRankSetDetails
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_rank_proto_init() }
func file_rank_proto_init() {
	if File_rank_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rank_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRankingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rank_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerRankSetDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rank_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRankingEventClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rank_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_rank_proto_goTypes,
		DependencyIndexes: file_rank_proto_depIdxs,
		MessageInfos:      file_rank_proto_msgTypes,
	}.Build()
	File_rank_proto = out.File
	file_rank_proto_rawDesc = nil
	file_rank_proto_goTypes = nil
	file_rank_proto_depIdxs = nil
}
