// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v3.15.8
// source: service/model.service.proto

package services

import (
	context "context"
	protomodel "github.com/justjack1521/mevium/pkg/genproto/protomodel"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	MeviusModelService_ValidateBaseCard_FullMethodName = "/service.MeviusModelService/ValidateBaseCard"
)

// MeviusModelServiceClient is the client API for MeviusModelService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type MeviusModelServiceClient interface {
	ValidateBaseCard(ctx context.Context, in *protomodel.ValidateBaseCardRequest, opts ...grpc.CallOption) (*protomodel.ValidateModelResponse, error)
}

type meviusModelServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMeviusModelServiceClient(cc grpc.ClientConnInterface) MeviusModelServiceClient {
	return &meviusModelServiceClient{cc}
}

func (c *meviusModelServiceClient) ValidateBaseCard(ctx context.Context, in *protomodel.ValidateBaseCardRequest, opts ...grpc.CallOption) (*protomodel.ValidateModelResponse, error) {
	out := new(protomodel.ValidateModelResponse)
	err := c.cc.Invoke(ctx, MeviusModelService_ValidateBaseCard_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MeviusModelServiceServer is the server API for MeviusModelService service.
// All implementations should embed UnimplementedMeviusModelServiceServer
// for forward compatibility
type MeviusModelServiceServer interface {
	ValidateBaseCard(context.Context, *protomodel.ValidateBaseCardRequest) (*protomodel.ValidateModelResponse, error)
}

// UnimplementedMeviusModelServiceServer should be embedded to have forward compatible implementations.
type UnimplementedMeviusModelServiceServer struct {
}

func (UnimplementedMeviusModelServiceServer) ValidateBaseCard(context.Context, *protomodel.ValidateBaseCardRequest) (*protomodel.ValidateModelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ValidateBaseCard not implemented")
}

// UnsafeMeviusModelServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to MeviusModelServiceServer will
// result in compilation errors.
type UnsafeMeviusModelServiceServer interface {
	mustEmbedUnimplementedMeviusModelServiceServer()
}

func RegisterMeviusModelServiceServer(s grpc.ServiceRegistrar, srv MeviusModelServiceServer) {
	s.RegisterService(&MeviusModelService_ServiceDesc, srv)
}

func _MeviusModelService_ValidateBaseCard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protomodel.ValidateBaseCardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MeviusModelServiceServer).ValidateBaseCard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: MeviusModelService_ValidateBaseCard_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MeviusModelServiceServer).ValidateBaseCard(ctx, req.(*protomodel.ValidateBaseCardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// MeviusModelService_ServiceDesc is the grpc.ServiceDesc for MeviusModelService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var MeviusModelService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "service.MeviusModelService",
	HandlerType: (*MeviusModelServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ValidateBaseCard",
			Handler:    _MeviusModelService_ValidateBaseCard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/model.service.proto",
}
