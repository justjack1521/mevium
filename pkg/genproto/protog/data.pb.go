// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: data.proto

package protog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoMailBoxItem_ReferenceSource int32

const (
	ProtoMailBoxItem_NONE            ProtoMailBoxItem_ReferenceSource = 0
	ProtoMailBoxItem_ABILITY_CARD    ProtoMailBoxItem_ReferenceSource = 1
	ProtoMailBoxItem_ITEM            ProtoMailBoxItem_ReferenceSource = 2
	ProtoMailBoxItem_JOB_CARD        ProtoMailBoxItem_ReferenceSource = 3
	ProtoMailBoxItem_WEAPON          ProtoMailBoxItem_ReferenceSource = 4
	ProtoMailBoxItem_FAIRY_COMPANION ProtoMailBoxItem_ReferenceSource = 5
	ProtoMailBoxItem_MP_STAMP        ProtoMailBoxItem_ReferenceSource = 6
)

// Enum value maps for ProtoMailBoxItem_ReferenceSource.
var (
	ProtoMailBoxItem_ReferenceSource_name = map[int32]string{
		0: "NONE",
		1: "ABILITY_CARD",
		2: "ITEM",
		3: "JOB_CARD",
		4: "WEAPON",
		5: "FAIRY_COMPANION",
		6: "MP_STAMP",
	}
	ProtoMailBoxItem_ReferenceSource_value = map[string]int32{
		"NONE":            0,
		"ABILITY_CARD":    1,
		"ITEM":            2,
		"JOB_CARD":        3,
		"WEAPON":          4,
		"FAIRY_COMPANION": 5,
		"MP_STAMP":        6,
	}
)

func (x ProtoMailBoxItem_ReferenceSource) Enum() *ProtoMailBoxItem_ReferenceSource {
	p := new(ProtoMailBoxItem_ReferenceSource)
	*p = x
	return p
}

func (x ProtoMailBoxItem_ReferenceSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtoMailBoxItem_ReferenceSource) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[0].Descriptor()
}

func (ProtoMailBoxItem_ReferenceSource) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[0]
}

func (x ProtoMailBoxItem_ReferenceSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtoMailBoxItem_ReferenceSource.Descriptor instead.
func (ProtoMailBoxItem_ReferenceSource) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{33, 0}
}

type ProtoGameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId             string                    `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName           string                    `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerComment        string                    `protobuf:"bytes,3,opt,name=player_comment,json=playerComment,proto3" json:"player_comment,omitempty"`
	Mailbox              *ProtoMailBox             `protobuf:"bytes,4,opt,name=mailbox,proto3" json:"mailbox,omitempty"`
	AbilityCardData      *ProtoAbilityCardData     `protobuf:"bytes,5,opt,name=ability_card_data,json=abilityCardData,proto3" json:"ability_card_data,omitempty"`
	JobCardData          *ProtoJobCardData         `protobuf:"bytes,6,opt,name=job_card_data,json=jobCardData,proto3" json:"job_card_data,omitempty"`
	ItemData             *ProtoItemData            `protobuf:"bytes,7,opt,name=item_data,json=itemData,proto3" json:"item_data,omitempty"`
	FairyCompanionData   *ProtoFairyCompanionData  `protobuf:"bytes,8,opt,name=fairy_companion_data,json=fairyCompanionData,proto3" json:"fairy_companion_data,omitempty"`
	RegionMapData        *ProtoRegionHeaderData    `protobuf:"bytes,9,opt,name=region_map_data,json=regionMapData,proto3" json:"region_map_data,omitempty"`
	SinglePlayBattleData *ProtoBattleData          `protobuf:"bytes,10,opt,name=single_play_battle_data,json=singlePlayBattleData,proto3" json:"single_play_battle_data,omitempty"`
	MultiPlayBattleData  *ProtoBattleData          `protobuf:"bytes,11,opt,name=multi_play_battle_data,json=multiPlayBattleData,proto3" json:"multi_play_battle_data,omitempty"`
	CardFilterSortSets   []*ProtoCardFilterSortSet `protobuf:"bytes,20,rep,name=card_filter_sort_sets,json=cardFilterSortSets,proto3" json:"card_filter_sort_sets,omitempty"`
	EventRankings        *ProtoRankingInfoSet      `protobuf:"bytes,30,opt,name=event_rankings,json=eventRankings,proto3" json:"event_rankings,omitempty"`
}

func (x *ProtoGameData) Reset() {
	*x = ProtoGameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoGameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoGameData) ProtoMessage() {}

func (x *ProtoGameData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoGameData.ProtoReflect.Descriptor instead.
func (*ProtoGameData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoGameData) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ProtoGameData) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoGameData) GetPlayerComment() string {
	if x != nil {
		return x.PlayerComment
	}
	return ""
}

func (x *ProtoGameData) GetMailbox() *ProtoMailBox {
	if x != nil {
		return x.Mailbox
	}
	return nil
}

func (x *ProtoGameData) GetAbilityCardData() *ProtoAbilityCardData {
	if x != nil {
		return x.AbilityCardData
	}
	return nil
}

func (x *ProtoGameData) GetJobCardData() *ProtoJobCardData {
	if x != nil {
		return x.JobCardData
	}
	return nil
}

func (x *ProtoGameData) GetItemData() *ProtoItemData {
	if x != nil {
		return x.ItemData
	}
	return nil
}

func (x *ProtoGameData) GetFairyCompanionData() *ProtoFairyCompanionData {
	if x != nil {
		return x.FairyCompanionData
	}
	return nil
}

func (x *ProtoGameData) GetRegionMapData() *ProtoRegionHeaderData {
	if x != nil {
		return x.RegionMapData
	}
	return nil
}

func (x *ProtoGameData) GetSinglePlayBattleData() *ProtoBattleData {
	if x != nil {
		return x.SinglePlayBattleData
	}
	return nil
}

func (x *ProtoGameData) GetMultiPlayBattleData() *ProtoBattleData {
	if x != nil {
		return x.MultiPlayBattleData
	}
	return nil
}

func (x *ProtoGameData) GetCardFilterSortSets() []*ProtoCardFilterSortSet {
	if x != nil {
		return x.CardFilterSortSets
	}
	return nil
}

func (x *ProtoGameData) GetEventRankings() *ProtoRankingInfoSet {
	if x != nil {
		return x.EventRankings
	}
	return nil
}

type ProtoAbilityCardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory     *ProtoAbilityCardInventory `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
	Bank          *ProtoAbilityCardInventory `protobuf:"bytes,2,opt,name=bank,proto3" json:"bank,omitempty"`
	History       *ProtoAbilityCardHistory   `protobuf:"bytes,3,opt,name=history,proto3" json:"history,omitempty"`
	MaxCardLevels map[string]int32           `protobuf:"bytes,4,rep,name=max_card_levels,json=maxCardLevels,proto3" json:"max_card_levels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoAbilityCardData) Reset() {
	*x = ProtoAbilityCardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardData) ProtoMessage() {}

func (x *ProtoAbilityCardData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardData.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoAbilityCardData) GetInventory() *ProtoAbilityCardInventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *ProtoAbilityCardData) GetBank() *ProtoAbilityCardInventory {
	if x != nil {
		return x.Bank
	}
	return nil
}

func (x *ProtoAbilityCardData) GetHistory() *ProtoAbilityCardHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *ProtoAbilityCardData) GetMaxCardLevels() map[string]int32 {
	if x != nil {
		return x.MaxCardLevels
	}
	return nil
}

type ProtoAbilityCardHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardList []*ProtoAbilityCardHistoryInstance `protobuf:"bytes,1,rep,name=card_list,json=cardList,proto3" json:"card_list,omitempty"`
}

func (x *ProtoAbilityCardHistory) Reset() {
	*x = ProtoAbilityCardHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardHistory) ProtoMessage() {}

func (x *ProtoAbilityCardHistory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardHistory.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardHistory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoAbilityCardHistory) GetCardList() []*ProtoAbilityCardHistoryInstance {
	if x != nil {
		return x.CardList
	}
	return nil
}

type ProtoAbilityCardHistoryInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId             string `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	BaseAbilityCardId string `protobuf:"bytes,2,opt,name=base_ability_card_id,json=baseAbilityCardId,proto3" json:"base_ability_card_id,omitempty"`
	AbilityCardId     string `protobuf:"bytes,3,opt,name=ability_card_id,json=abilityCardId,proto3" json:"ability_card_id,omitempty"`
	AutoSell          bool   `protobuf:"varint,4,opt,name=auto_sell,json=autoSell,proto3" json:"auto_sell,omitempty"`
	StarLevel         int32  `protobuf:"varint,5,opt,name=star_level,json=starLevel,proto3" json:"star_level,omitempty"`
	CreatedAt         int64  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ProtoAbilityCardHistoryInstance) Reset() {
	*x = ProtoAbilityCardHistoryInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardHistoryInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardHistoryInstance) ProtoMessage() {}

func (x *ProtoAbilityCardHistoryInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardHistoryInstance.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardHistoryInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoAbilityCardHistoryInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoAbilityCardHistoryInstance) GetBaseAbilityCardId() string {
	if x != nil {
		return x.BaseAbilityCardId
	}
	return ""
}

func (x *ProtoAbilityCardHistoryInstance) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *ProtoAbilityCardHistoryInstance) GetAutoSell() bool {
	if x != nil {
		return x.AutoSell
	}
	return false
}

func (x *ProtoAbilityCardHistoryInstance) GetStarLevel() int32 {
	if x != nil {
		return x.StarLevel
	}
	return 0
}

func (x *ProtoAbilityCardHistoryInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProtoAbilityCardInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSlots int32                       `protobuf:"varint,1,opt,name=max_slots,json=maxSlots,proto3" json:"max_slots,omitempty"`
	CardList []*ProtoAbilityCardInstance `protobuf:"bytes,2,rep,name=card_list,json=cardList,proto3" json:"card_list,omitempty"`
}

func (x *ProtoAbilityCardInventory) Reset() {
	*x = ProtoAbilityCardInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardInventory) ProtoMessage() {}

func (x *ProtoAbilityCardInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardInventory.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoAbilityCardInventory) GetMaxSlots() int32 {
	if x != nil {
		return x.MaxSlots
	}
	return 0
}

func (x *ProtoAbilityCardInventory) GetCardList() []*ProtoAbilityCardInstance {
	if x != nil {
		return x.CardList
	}
	return nil
}

type ProtoAbilityCardInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId            string `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	CardLevel        int32  `protobuf:"varint,2,opt,name=card_level,json=cardLevel,proto3" json:"card_level,omitempty"`
	AccumExp         uint64 `protobuf:"varint,3,opt,name=accum_exp,json=accumExp,proto3" json:"accum_exp,omitempty"`
	CardLock         bool   `protobuf:"varint,4,opt,name=card_lock,json=cardLock,proto3" json:"card_lock,omitempty"`
	AbilityLevel     int32  `protobuf:"varint,5,opt,name=ability_level,json=abilityLevel,proto3" json:"ability_level,omitempty"`
	SeedUnlock       int32  `protobuf:"varint,6,opt,name=seed_unlock,json=seedUnlock,proto3" json:"seed_unlock,omitempty"`
	AbilityCardId    string `protobuf:"bytes,7,opt,name=ability_card_id,json=abilityCardId,proto3" json:"ability_card_id,omitempty"`
	CreatedAt        int64  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TotalAccumExp    uint64 `protobuf:"varint,9,opt,name=total_accum_exp,json=totalAccumExp,proto3" json:"total_accum_exp,omitempty"`
	ExtraSkillUnlock int32  `protobuf:"varint,10,opt,name=extra_skill_unlock,json=extraSkillUnlock,proto3" json:"extra_skill_unlock,omitempty"`
	OverBoostLevel   int32  `protobuf:"varint,11,opt,name=over_boost_level,json=overBoostLevel,proto3" json:"over_boost_level,omitempty"`
}

func (x *ProtoAbilityCardInstance) Reset() {
	*x = ProtoAbilityCardInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardInstance) ProtoMessage() {}

func (x *ProtoAbilityCardInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardInstance.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoAbilityCardInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoAbilityCardInstance) GetCardLevel() int32 {
	if x != nil {
		return x.CardLevel
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetAccumExp() uint64 {
	if x != nil {
		return x.AccumExp
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetCardLock() bool {
	if x != nil {
		return x.CardLock
	}
	return false
}

func (x *ProtoAbilityCardInstance) GetAbilityLevel() int32 {
	if x != nil {
		return x.AbilityLevel
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetSeedUnlock() int32 {
	if x != nil {
		return x.SeedUnlock
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *ProtoAbilityCardInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetTotalAccumExp() uint64 {
	if x != nil {
		return x.TotalAccumExp
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetExtraSkillUnlock() int32 {
	if x != nil {
		return x.ExtraSkillUnlock
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

type ProtoBattleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerLevel           int32                       `protobuf:"varint,1,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	TotalExp              uint64                      `protobuf:"varint,2,opt,name=total_exp,json=totalExp,proto3" json:"total_exp,omitempty"`
	AccumExp              uint64                      `protobuf:"varint,3,opt,name=accum_exp,json=accumExp,proto3" json:"accum_exp,omitempty"`
	ExpBonus              float32                     `protobuf:"fixed32,4,opt,name=exp_bonus,json=expBonus,proto3" json:"exp_bonus,omitempty"`
	Stamina               *ProtoPlayerStamina         `protobuf:"bytes,5,opt,name=stamina,proto3" json:"stamina,omitempty"`
	Decks                 *ProtoPlayerDeckCollection  `protobuf:"bytes,6,opt,name=decks,proto3" json:"decks,omitempty"`
	LastBattleInformation *ProtoLastBattleInformation `protobuf:"bytes,7,opt,name=last_battle_information,json=lastBattleInformation,proto3,oneof" json:"last_battle_information,omitempty"`
}

func (x *ProtoBattleData) Reset() {
	*x = ProtoBattleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBattleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBattleData) ProtoMessage() {}

func (x *ProtoBattleData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBattleData.ProtoReflect.Descriptor instead.
func (*ProtoBattleData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoBattleData) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *ProtoBattleData) GetTotalExp() uint64 {
	if x != nil {
		return x.TotalExp
	}
	return 0
}

func (x *ProtoBattleData) GetAccumExp() uint64 {
	if x != nil {
		return x.AccumExp
	}
	return 0
}

func (x *ProtoBattleData) GetExpBonus() float32 {
	if x != nil {
		return x.ExpBonus
	}
	return 0
}

func (x *ProtoBattleData) GetStamina() *ProtoPlayerStamina {
	if x != nil {
		return x.Stamina
	}
	return nil
}

func (x *ProtoBattleData) GetDecks() *ProtoPlayerDeckCollection {
	if x != nil {
		return x.Decks
	}
	return nil
}

func (x *ProtoBattleData) GetLastBattleInformation() *ProtoLastBattleInformation {
	if x != nil {
		return x.LastBattleInformation
	}
	return nil
}

type ProtoBattleStartData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionMap     string            `protobuf:"bytes,1,opt,name=region_map,json=regionMap,proto3" json:"region_map,omitempty"`
	Index         int32             `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	HardMode      bool              `protobuf:"varint,3,opt,name=hard_mode,json=hardMode,proto3" json:"hard_mode,omitempty"`
	DeckIndex     int32             `protobuf:"varint,4,opt,name=deck_index,json=deckIndex,proto3" json:"deck_index,omitempty"`
	ItemDropTable []*BattleItemDrop `protobuf:"bytes,5,rep,name=item_drop_table,json=itemDropTable,proto3" json:"item_drop_table,omitempty"`
	CardDropTable []*BattleCardDrop `protobuf:"bytes,6,rep,name=card_drop_table,json=cardDropTable,proto3" json:"card_drop_table,omitempty"`
	CreatedAt     int64             `protobuf:"varint,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ProtoBattleStartData) Reset() {
	*x = ProtoBattleStartData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBattleStartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBattleStartData) ProtoMessage() {}

func (x *ProtoBattleStartData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBattleStartData.ProtoReflect.Descriptor instead.
func (*ProtoBattleStartData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoBattleStartData) GetRegionMap() string {
	if x != nil {
		return x.RegionMap
	}
	return ""
}

func (x *ProtoBattleStartData) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoBattleStartData) GetHardMode() bool {
	if x != nil {
		return x.HardMode
	}
	return false
}

func (x *ProtoBattleStartData) GetDeckIndex() int32 {
	if x != nil {
		return x.DeckIndex
	}
	return 0
}

func (x *ProtoBattleStartData) GetItemDropTable() []*BattleItemDrop {
	if x != nil {
		return x.ItemDropTable
	}
	return nil
}

func (x *ProtoBattleStartData) GetCardDropTable() []*BattleCardDrop {
	if x != nil {
		return x.CardDropTable
	}
	return nil
}

func (x *ProtoBattleStartData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProtoDailyMissionInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Progress    int32                 `protobuf:"varint,2,opt,name=progress,proto3" json:"progress,omitempty"`
	Confirmed   bool                  `protobuf:"varint,3,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Claimed     bool                  `protobuf:"varint,4,opt,name=claimed,proto3" json:"claimed,omitempty"`
	ReceivedAt  int64                 `protobuf:"varint,5,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
	ItemRewards []*ProtoItemValuePair `protobuf:"bytes,6,rep,name=item_rewards,json=itemRewards,proto3" json:"item_rewards,omitempty"`
}

func (x *ProtoDailyMissionInstance) Reset() {
	*x = ProtoDailyMissionInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDailyMissionInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDailyMissionInstance) ProtoMessage() {}

func (x *ProtoDailyMissionInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDailyMissionInstance.ProtoReflect.Descriptor instead.
func (*ProtoDailyMissionInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoDailyMissionInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtoDailyMissionInstance) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ProtoDailyMissionInstance) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *ProtoDailyMissionInstance) GetClaimed() bool {
	if x != nil {
		return x.Claimed
	}
	return false
}

func (x *ProtoDailyMissionInstance) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

func (x *ProtoDailyMissionInstance) GetItemRewards() []*ProtoItemValuePair {
	if x != nil {
		return x.ItemRewards
	}
	return nil
}

type BattleItemDrop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  *BattleDropTableKey   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Drop *BattleItemDropResult `protobuf:"bytes,2,opt,name=drop,proto3" json:"drop,omitempty"`
}

func (x *BattleItemDrop) Reset() {
	*x = BattleItemDrop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleItemDrop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleItemDrop) ProtoMessage() {}

func (x *BattleItemDrop) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleItemDrop.ProtoReflect.Descriptor instead.
func (*BattleItemDrop) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{9}
}

func (x *BattleItemDrop) GetKey() *BattleDropTableKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *BattleItemDrop) GetDrop() *BattleItemDropResult {
	if x != nil {
		return x.Drop
	}
	return nil
}

type BattleCardDrop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  *BattleDropTableKey   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Drop *BattleCardDropResult `protobuf:"bytes,2,opt,name=drop,proto3" json:"drop,omitempty"`
}

func (x *BattleCardDrop) Reset() {
	*x = BattleCardDrop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleCardDrop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleCardDrop) ProtoMessage() {}

func (x *BattleCardDrop) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleCardDrop.ProtoReflect.Descriptor instead.
func (*BattleCardDrop) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{10}
}

func (x *BattleCardDrop) GetKey() *BattleDropTableKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *BattleCardDrop) GetDrop() *BattleCardDropResult {
	if x != nil {
		return x.Drop
	}
	return nil
}

type BattleDropTableKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FiendId    string `protobuf:"bytes,1,opt,name=fiend_id,json=fiendId,proto3" json:"fiend_id,omitempty"`
	FiendIndex int32  `protobuf:"varint,2,opt,name=fiend_index,json=fiendIndex,proto3" json:"fiend_index,omitempty"`
}

func (x *BattleDropTableKey) Reset() {
	*x = BattleDropTableKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleDropTableKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleDropTableKey) ProtoMessage() {}

func (x *BattleDropTableKey) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleDropTableKey.ProtoReflect.Descriptor instead.
func (*BattleDropTableKey) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{11}
}

func (x *BattleDropTableKey) GetFiendId() string {
	if x != nil {
		return x.FiendId
	}
	return ""
}

func (x *BattleDropTableKey) GetFiendIndex() int32 {
	if x != nil {
		return x.FiendIndex
	}
	return 0
}

type BattleItemDropResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Quantity int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *BattleItemDropResult) Reset() {
	*x = BattleItemDropResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleItemDropResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleItemDropResult) ProtoMessage() {}

func (x *BattleItemDropResult) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleItemDropResult.ProtoReflect.Descriptor instead.
func (*BattleItemDropResult) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{12}
}

func (x *BattleItemDropResult) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *BattleItemDropResult) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type BattleCardDropResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId string `protobuf:"bytes,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
}

func (x *BattleCardDropResult) Reset() {
	*x = BattleCardDropResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleCardDropResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleCardDropResult) ProtoMessage() {}

func (x *BattleCardDropResult) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleCardDropResult.ProtoReflect.Descriptor instead.
func (*BattleCardDropResult) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{13}
}

func (x *BattleCardDropResult) GetCardId() string {
	if x != nil {
		return x.CardId
	}
	return ""
}

type ProtoCardFilterSortSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View int32                  `protobuf:"varint,1,opt,name=view,proto3" json:"view,omitempty"`
	Sets []*ProtoCardFilterSort `protobuf:"bytes,2,rep,name=sets,proto3" json:"sets,omitempty"`
}

func (x *ProtoCardFilterSortSet) Reset() {
	*x = ProtoCardFilterSortSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCardFilterSortSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCardFilterSortSet) ProtoMessage() {}

func (x *ProtoCardFilterSortSet) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCardFilterSortSet.ProtoReflect.Descriptor instead.
func (*ProtoCardFilterSortSet) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{14}
}

func (x *ProtoCardFilterSortSet) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *ProtoCardFilterSortSet) GetSets() []*ProtoCardFilterSort {
	if x != nil {
		return x.Sets
	}
	return nil
}

type ProtoCardFilterSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index          int32   `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	CardTypes      []int32 `protobuf:"varint,2,rep,packed,name=card_types,json=cardTypes,proto3" json:"card_types,omitempty"`
	CardCategories []int32 `protobuf:"varint,3,rep,packed,name=card_categories,json=cardCategories,proto3" json:"card_categories,omitempty"`
	SpecialFilters []int32 `protobuf:"varint,4,rep,packed,name=special_filters,json=specialFilters,proto3" json:"special_filters,omitempty"`
	SortSelectors  []int32 `protobuf:"varint,5,rep,packed,name=sort_selectors,json=sortSelectors,proto3" json:"sort_selectors,omitempty"`
	SortDescending bool    `protobuf:"varint,6,opt,name=sort_descending,json=sortDescending,proto3" json:"sort_descending,omitempty"`
}

func (x *ProtoCardFilterSort) Reset() {
	*x = ProtoCardFilterSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCardFilterSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCardFilterSort) ProtoMessage() {}

func (x *ProtoCardFilterSort) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCardFilterSort.ProtoReflect.Descriptor instead.
func (*ProtoCardFilterSort) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{15}
}

func (x *ProtoCardFilterSort) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoCardFilterSort) GetCardTypes() []int32 {
	if x != nil {
		return x.CardTypes
	}
	return nil
}

func (x *ProtoCardFilterSort) GetCardCategories() []int32 {
	if x != nil {
		return x.CardCategories
	}
	return nil
}

func (x *ProtoCardFilterSort) GetSpecialFilters() []int32 {
	if x != nil {
		return x.SpecialFilters
	}
	return nil
}

func (x *ProtoCardFilterSort) GetSortSelectors() []int32 {
	if x != nil {
		return x.SortSelectors
	}
	return nil
}

func (x *ProtoCardFilterSort) GetSortDescending() bool {
	if x != nil {
		return x.SortDescending
	}
	return false
}

type ProtoLoginCampaignInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Claimed     []bool `protobuf:"varint,2,rep,packed,name=claimed,proto3" json:"claimed,omitempty"`
	LastClaimed int32  `protobuf:"varint,3,opt,name=last_claimed,json=lastClaimed,proto3" json:"last_claimed,omitempty"`
}

func (x *ProtoLoginCampaignInstance) Reset() {
	*x = ProtoLoginCampaignInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoLoginCampaignInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoLoginCampaignInstance) ProtoMessage() {}

func (x *ProtoLoginCampaignInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoLoginCampaignInstance.ProtoReflect.Descriptor instead.
func (*ProtoLoginCampaignInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{16}
}

func (x *ProtoLoginCampaignInstance) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtoLoginCampaignInstance) GetClaimed() []bool {
	if x != nil {
		return x.Claimed
	}
	return nil
}

func (x *ProtoLoginCampaignInstance) GetLastClaimed() int32 {
	if x != nil {
		return x.LastClaimed
	}
	return 0
}

type ProtoFairyCompanionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentCompanionIndex int32                         `protobuf:"varint,1,opt,name=current_companion_index,json=currentCompanionIndex,proto3" json:"current_companion_index,omitempty"`
	Inventory             *ProtoFairyCompanionInventory `protobuf:"bytes,2,opt,name=inventory,proto3" json:"inventory,omitempty"`
}

func (x *ProtoFairyCompanionData) Reset() {
	*x = ProtoFairyCompanionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFairyCompanionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFairyCompanionData) ProtoMessage() {}

func (x *ProtoFairyCompanionData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFairyCompanionData.ProtoReflect.Descriptor instead.
func (*ProtoFairyCompanionData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{17}
}

func (x *ProtoFairyCompanionData) GetCurrentCompanionIndex() int32 {
	if x != nil {
		return x.CurrentCompanionIndex
	}
	return 0
}

func (x *ProtoFairyCompanionData) GetInventory() *ProtoFairyCompanionInventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

type ProtoFairyCompanionInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanionList []*ProtoFairyCompanionInstance `protobuf:"bytes,2,rep,name=companion_list,json=companionList,proto3" json:"companion_list,omitempty"`
}

func (x *ProtoFairyCompanionInventory) Reset() {
	*x = ProtoFairyCompanionInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFairyCompanionInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFairyCompanionInventory) ProtoMessage() {}

func (x *ProtoFairyCompanionInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFairyCompanionInventory.ProtoReflect.Descriptor instead.
func (*ProtoFairyCompanionInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{18}
}

func (x *ProtoFairyCompanionInventory) GetCompanionList() []*ProtoFairyCompanionInstance {
	if x != nil {
		return x.CompanionList
	}
	return nil
}

type ProtoFairyCompanionInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId           string `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	BaseCompanionId string `protobuf:"bytes,2,opt,name=base_companion_id,json=baseCompanionId,proto3" json:"base_companion_id,omitempty"`
	CreatedAt       int64  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ProtoFairyCompanionInstance) Reset() {
	*x = ProtoFairyCompanionInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFairyCompanionInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFairyCompanionInstance) ProtoMessage() {}

func (x *ProtoFairyCompanionInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFairyCompanionInstance.ProtoReflect.Descriptor instead.
func (*ProtoFairyCompanionInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{19}
}

func (x *ProtoFairyCompanionInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoFairyCompanionInstance) GetBaseCompanionId() string {
	if x != nil {
		return x.BaseCompanionId
	}
	return ""
}

func (x *ProtoFairyCompanionInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProtoItemData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inventory *ProtoItemInventory             `protobuf:"bytes,1,opt,name=inventory,proto3" json:"inventory,omitempty"`
	LimitData map[string]*ProtoItemDropRecord `protobuf:"bytes,2,rep,name=limit_data,json=limitData,proto3" json:"limit_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProtoItemData) Reset() {
	*x = ProtoItemData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoItemData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoItemData) ProtoMessage() {}

func (x *ProtoItemData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoItemData.ProtoReflect.Descriptor instead.
func (*ProtoItemData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{20}
}

func (x *ProtoItemData) GetInventory() *ProtoItemInventory {
	if x != nil {
		return x.Inventory
	}
	return nil
}

func (x *ProtoItemData) GetLimitData() map[string]*ProtoItemDropRecord {
	if x != nil {
		return x.LimitData
	}
	return nil
}

type ProtoItemDropRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   int32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Count int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ProtoItemDropRecord) Reset() {
	*x = ProtoItemDropRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoItemDropRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoItemDropRecord) ProtoMessage() {}

func (x *ProtoItemDropRecord) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoItemDropRecord.ProtoReflect.Descriptor instead.
func (*ProtoItemDropRecord) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{21}
}

func (x *ProtoItemDropRecord) GetKey() int32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *ProtoItemDropRecord) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ProtoItemInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList []*ProtoItemInstance `protobuf:"bytes,1,rep,name=item_list,json=itemList,proto3" json:"item_list,omitempty"`
}

func (x *ProtoItemInventory) Reset() {
	*x = ProtoItemInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoItemInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoItemInventory) ProtoMessage() {}

func (x *ProtoItemInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoItemInventory.ProtoReflect.Descriptor instead.
func (*ProtoItemInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{22}
}

func (x *ProtoItemInventory) GetItemList() []*ProtoItemInstance {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type ProtoItemInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId     string `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	Quantity  int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ItemId    string `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	CreatedAt int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ProtoItemInstance) Reset() {
	*x = ProtoItemInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoItemInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoItemInstance) ProtoMessage() {}

func (x *ProtoItemInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoItemInstance.ProtoReflect.Descriptor instead.
func (*ProtoItemInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{23}
}

func (x *ProtoItemInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoItemInstance) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProtoItemInstance) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ProtoItemInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProtoItemValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Value  int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProtoItemValuePair) Reset() {
	*x = ProtoItemValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoItemValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoItemValuePair) ProtoMessage() {}

func (x *ProtoItemValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoItemValuePair.ProtoReflect.Descriptor instead.
func (*ProtoItemValuePair) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{24}
}

func (x *ProtoItemValuePair) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ProtoItemValuePair) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProtoJobCardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Jobs        *ProtoJobInventory                `protobuf:"bytes,1,opt,name=jobs,proto3" json:"jobs,omitempty"`
	Weapons     *ProtoWeaponInventory             `protobuf:"bytes,2,opt,name=weapons,proto3" json:"weapons,omitempty"`
	SkillPanels map[string]*ProtoSkillPanelGroups `protobuf:"bytes,3,rep,name=skill_panels,json=skillPanels,proto3" json:"skill_panels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ProtoJobCardData) Reset() {
	*x = ProtoJobCardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoJobCardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoJobCardData) ProtoMessage() {}

func (x *ProtoJobCardData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoJobCardData.ProtoReflect.Descriptor instead.
func (*ProtoJobCardData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{25}
}

func (x *ProtoJobCardData) GetJobs() *ProtoJobInventory {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ProtoJobCardData) GetWeapons() *ProtoWeaponInventory {
	if x != nil {
		return x.Weapons
	}
	return nil
}

func (x *ProtoJobCardData) GetSkillPanels() map[string]*ProtoSkillPanelGroups {
	if x != nil {
		return x.SkillPanels
	}
	return nil
}

type ProtoJobInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobList []*ProtoJobCardInstance `protobuf:"bytes,1,rep,name=job_list,json=jobList,proto3" json:"job_list,omitempty"`
}

func (x *ProtoJobInventory) Reset() {
	*x = ProtoJobInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoJobInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoJobInventory) ProtoMessage() {}

func (x *ProtoJobInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoJobInventory.ProtoReflect.Descriptor instead.
func (*ProtoJobInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{26}
}

func (x *ProtoJobInventory) GetJobList() []*ProtoJobCardInstance {
	if x != nil {
		return x.JobList
	}
	return nil
}

type ProtoJobCardInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId             string                 `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	SubJobUnlock      int32                  `protobuf:"varint,2,opt,name=sub_job_unlock,json=subJobUnlock,proto3" json:"sub_job_unlock,omitempty"`
	OverBoostLevel    int32                  `protobuf:"varint,3,opt,name=over_boost_level,json=overBoostLevel,proto3" json:"over_boost_level,omitempty"`
	SkillPanelUnlocks *ProtoSkillPanelGroups `protobuf:"bytes,4,opt,name=skill_panel_unlocks,json=skillPanelUnlocks,proto3" json:"skill_panel_unlocks,omitempty"`
	BaseJobId         string                 `protobuf:"bytes,5,opt,name=base_job_id,json=baseJobId,proto3" json:"base_job_id,omitempty"`
	CreatedAt         int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	WeaponUnlock      int32                  `protobuf:"varint,7,opt,name=weapon_unlock,json=weaponUnlock,proto3" json:"weapon_unlock,omitempty"`
	HpStatMod         int32                  `protobuf:"varint,8,opt,name=hp_stat_mod,json=hpStatMod,proto3" json:"hp_stat_mod,omitempty"`
	AttackStatMod     int32                  `protobuf:"varint,9,opt,name=attack_stat_mod,json=attackStatMod,proto3" json:"attack_stat_mod,omitempty"`
	BreakStatMod      int32                  `protobuf:"varint,10,opt,name=break_stat_mod,json=breakStatMod,proto3" json:"break_stat_mod,omitempty"`
	MagicStatMod      int32                  `protobuf:"varint,11,opt,name=magic_stat_mod,json=magicStatMod,proto3" json:"magic_stat_mod,omitempty"`
	SpeedStatMod      int32                  `protobuf:"varint,12,opt,name=speed_stat_mod,json=speedStatMod,proto3" json:"speed_stat_mod,omitempty"`
	DefenseStatMod    int32                  `protobuf:"varint,14,opt,name=defense_stat_mod,json=defenseStatMod,proto3" json:"defense_stat_mod,omitempty"`
	CritChanceStatMod int32                  `protobuf:"varint,15,opt,name=crit_chance_stat_mod,json=critChanceStatMod,proto3" json:"crit_chance_stat_mod,omitempty"`
	UltimateBoost     int32                  `protobuf:"varint,18,opt,name=ultimate_boost,json=ultimateBoost,proto3" json:"ultimate_boost,omitempty"`
	AutoAbilities     map[string]int32       `protobuf:"bytes,19,rep,name=auto_abilities,json=autoAbilities,proto3" json:"auto_abilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoJobCardInstance) Reset() {
	*x = ProtoJobCardInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoJobCardInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoJobCardInstance) ProtoMessage() {}

func (x *ProtoJobCardInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoJobCardInstance.ProtoReflect.Descriptor instead.
func (*ProtoJobCardInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{27}
}

func (x *ProtoJobCardInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoJobCardInstance) GetSubJobUnlock() int32 {
	if x != nil {
		return x.SubJobUnlock
	}
	return 0
}

func (x *ProtoJobCardInstance) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

func (x *ProtoJobCardInstance) GetSkillPanelUnlocks() *ProtoSkillPanelGroups {
	if x != nil {
		return x.SkillPanelUnlocks
	}
	return nil
}

func (x *ProtoJobCardInstance) GetBaseJobId() string {
	if x != nil {
		return x.BaseJobId
	}
	return ""
}

func (x *ProtoJobCardInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProtoJobCardInstance) GetWeaponUnlock() int32 {
	if x != nil {
		return x.WeaponUnlock
	}
	return 0
}

func (x *ProtoJobCardInstance) GetHpStatMod() int32 {
	if x != nil {
		return x.HpStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetAttackStatMod() int32 {
	if x != nil {
		return x.AttackStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetBreakStatMod() int32 {
	if x != nil {
		return x.BreakStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetMagicStatMod() int32 {
	if x != nil {
		return x.MagicStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetSpeedStatMod() int32 {
	if x != nil {
		return x.SpeedStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetDefenseStatMod() int32 {
	if x != nil {
		return x.DefenseStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetCritChanceStatMod() int32 {
	if x != nil {
		return x.CritChanceStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetUltimateBoost() int32 {
	if x != nil {
		return x.UltimateBoost
	}
	return 0
}

func (x *ProtoJobCardInstance) GetAutoAbilities() map[string]int32 {
	if x != nil {
		return x.AutoAbilities
	}
	return nil
}

type ProtoLastBattleInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartData *ProtoBattleStartData   `protobuf:"bytes,1,opt,name=start_data,json=startData,proto3,oneof" json:"start_data,omitempty"`
	Results   *ProtoLastBattleResults `protobuf:"bytes,2,opt,name=results,proto3,oneof" json:"results,omitempty"`
}

func (x *ProtoLastBattleInformation) Reset() {
	*x = ProtoLastBattleInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoLastBattleInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoLastBattleInformation) ProtoMessage() {}

func (x *ProtoLastBattleInformation) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoLastBattleInformation.ProtoReflect.Descriptor instead.
func (*ProtoLastBattleInformation) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{28}
}

func (x *ProtoLastBattleInformation) GetStartData() *ProtoBattleStartData {
	if x != nil {
		return x.StartData
	}
	return nil
}

func (x *ProtoLastBattleInformation) GetResults() *ProtoLastBattleResults {
	if x != nil {
		return x.Results
	}
	return nil
}

type ProtoLastBattleResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalExp            int32                       `protobuf:"varint,1,opt,name=total_exp,json=totalExp,proto3" json:"total_exp,omitempty"`
	GoldReward          int32                       `protobuf:"varint,2,opt,name=gold_reward,json=goldReward,proto3" json:"gold_reward,omitempty"`
	SeedRewards         []*ProtoItemValuePair       `protobuf:"bytes,3,rep,name=seed_rewards,json=seedRewards,proto3" json:"seed_rewards,omitempty"`
	SeedAreaMultiplier  float64                     `protobuf:"fixed64,4,opt,name=seed_area_multiplier,json=seedAreaMultiplier,proto3" json:"seed_area_multiplier,omitempty"`
	SeedScoreMultiplier float64                     `protobuf:"fixed64,5,opt,name=seed_score_multiplier,json=seedScoreMultiplier,proto3" json:"seed_score_multiplier,omitempty"`
	ProgressInformation *ProtoProgressInformation   `protobuf:"bytes,7,opt,name=progress_information,json=progressInformation,proto3" json:"progress_information,omitempty"`
	CardStates          []*ProtoCardPostBattleState `protobuf:"bytes,9,rep,name=card_states,json=cardStates,proto3" json:"card_states,omitempty"`
	ItemRewards         []*ProtoItemValuePair       `protobuf:"bytes,10,rep,name=item_rewards,json=itemRewards,proto3" json:"item_rewards,omitempty"`
	CardDrops           []*ProtoAbilityCardInstance `protobuf:"bytes,11,rep,name=card_drops,json=cardDrops,proto3" json:"card_drops,omitempty"`
}

func (x *ProtoLastBattleResults) Reset() {
	*x = ProtoLastBattleResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoLastBattleResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoLastBattleResults) ProtoMessage() {}

func (x *ProtoLastBattleResults) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoLastBattleResults.ProtoReflect.Descriptor instead.
func (*ProtoLastBattleResults) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{29}
}

func (x *ProtoLastBattleResults) GetTotalExp() int32 {
	if x != nil {
		return x.TotalExp
	}
	return 0
}

func (x *ProtoLastBattleResults) GetGoldReward() int32 {
	if x != nil {
		return x.GoldReward
	}
	return 0
}

func (x *ProtoLastBattleResults) GetSeedRewards() []*ProtoItemValuePair {
	if x != nil {
		return x.SeedRewards
	}
	return nil
}

func (x *ProtoLastBattleResults) GetSeedAreaMultiplier() float64 {
	if x != nil {
		return x.SeedAreaMultiplier
	}
	return 0
}

func (x *ProtoLastBattleResults) GetSeedScoreMultiplier() float64 {
	if x != nil {
		return x.SeedScoreMultiplier
	}
	return 0
}

func (x *ProtoLastBattleResults) GetProgressInformation() *ProtoProgressInformation {
	if x != nil {
		return x.ProgressInformation
	}
	return nil
}

func (x *ProtoLastBattleResults) GetCardStates() []*ProtoCardPostBattleState {
	if x != nil {
		return x.CardStates
	}
	return nil
}

func (x *ProtoLastBattleResults) GetItemRewards() []*ProtoItemValuePair {
	if x != nil {
		return x.ItemRewards
	}
	return nil
}

func (x *ProtoLastBattleResults) GetCardDrops() []*ProtoAbilityCardInstance {
	if x != nil {
		return x.CardDrops
	}
	return nil
}

type ProtoProgressInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PreviousLevel      uint32  `protobuf:"varint,1,opt,name=previous_level,json=previousLevel,proto3" json:"previous_level,omitempty"`
	PreviousAccumExp   uint64  `protobuf:"varint,2,opt,name=previous_accum_exp,json=previousAccumExp,proto3" json:"previous_accum_exp,omitempty"`
	PreviousTotalExp   uint64  `protobuf:"varint,3,opt,name=previous_total_exp,json=previousTotalExp,proto3" json:"previous_total_exp,omitempty"`
	PreviousMaxStamina uint32  `protobuf:"varint,4,opt,name=previous_max_stamina,json=previousMaxStamina,proto3" json:"previous_max_stamina,omitempty"`
	PreviousExpBonus   float32 `protobuf:"fixed32,5,opt,name=previous_exp_bonus,json=previousExpBonus,proto3" json:"previous_exp_bonus,omitempty"`
	PreviousDeckCount  int32   `protobuf:"varint,6,opt,name=previous_deck_count,json=previousDeckCount,proto3" json:"previous_deck_count,omitempty"`
	CurrentLevel       uint32  `protobuf:"varint,7,opt,name=current_level,json=currentLevel,proto3" json:"current_level,omitempty"`
	CurrentAccumExp    uint64  `protobuf:"varint,8,opt,name=current_accum_exp,json=currentAccumExp,proto3" json:"current_accum_exp,omitempty"`
	CurrentTotalExp    uint64  `protobuf:"varint,9,opt,name=current_total_exp,json=currentTotalExp,proto3" json:"current_total_exp,omitempty"`
	CurrentMaxStamina  uint32  `protobuf:"varint,10,opt,name=current_max_stamina,json=currentMaxStamina,proto3" json:"current_max_stamina,omitempty"`
	CurrentExpBonus    float32 `protobuf:"fixed32,11,opt,name=current_exp_bonus,json=currentExpBonus,proto3" json:"current_exp_bonus,omitempty"`
	CurrentDeckCount   int32   `protobuf:"varint,12,opt,name=current_deck_count,json=currentDeckCount,proto3" json:"current_deck_count,omitempty"`
}

func (x *ProtoProgressInformation) Reset() {
	*x = ProtoProgressInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoProgressInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoProgressInformation) ProtoMessage() {}

func (x *ProtoProgressInformation) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoProgressInformation.ProtoReflect.Descriptor instead.
func (*ProtoProgressInformation) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{30}
}

func (x *ProtoProgressInformation) GetPreviousLevel() uint32 {
	if x != nil {
		return x.PreviousLevel
	}
	return 0
}

func (x *ProtoProgressInformation) GetPreviousAccumExp() uint64 {
	if x != nil {
		return x.PreviousAccumExp
	}
	return 0
}

func (x *ProtoProgressInformation) GetPreviousTotalExp() uint64 {
	if x != nil {
		return x.PreviousTotalExp
	}
	return 0
}

func (x *ProtoProgressInformation) GetPreviousMaxStamina() uint32 {
	if x != nil {
		return x.PreviousMaxStamina
	}
	return 0
}

func (x *ProtoProgressInformation) GetPreviousExpBonus() float32 {
	if x != nil {
		return x.PreviousExpBonus
	}
	return 0
}

func (x *ProtoProgressInformation) GetPreviousDeckCount() int32 {
	if x != nil {
		return x.PreviousDeckCount
	}
	return 0
}

func (x *ProtoProgressInformation) GetCurrentLevel() uint32 {
	if x != nil {
		return x.CurrentLevel
	}
	return 0
}

func (x *ProtoProgressInformation) GetCurrentAccumExp() uint64 {
	if x != nil {
		return x.CurrentAccumExp
	}
	return 0
}

func (x *ProtoProgressInformation) GetCurrentTotalExp() uint64 {
	if x != nil {
		return x.CurrentTotalExp
	}
	return 0
}

func (x *ProtoProgressInformation) GetCurrentMaxStamina() uint32 {
	if x != nil {
		return x.CurrentMaxStamina
	}
	return 0
}

func (x *ProtoProgressInformation) GetCurrentExpBonus() float32 {
	if x != nil {
		return x.CurrentExpBonus
	}
	return 0
}

func (x *ProtoProgressInformation) GetCurrentDeckCount() int32 {
	if x != nil {
		return x.CurrentDeckCount
	}
	return 0
}

type ProtoCardPostBattleState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId       string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	SlotIndex        int32  `protobuf:"varint,2,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
	PreviousLevel    int32  `protobuf:"varint,3,opt,name=previous_level,json=previousLevel,proto3" json:"previous_level,omitempty"`
	PreviousAccumExp uint64 `protobuf:"varint,4,opt,name=previous_accum_exp,json=previousAccumExp,proto3" json:"previous_accum_exp,omitempty"`
	LevelUps         int32  `protobuf:"varint,5,opt,name=level_ups,json=levelUps,proto3" json:"level_ups,omitempty"`
	TotalExp         uint64 `protobuf:"varint,6,opt,name=total_exp,json=totalExp,proto3" json:"total_exp,omitempty"`
	AccumExp         uint64 `protobuf:"varint,7,opt,name=accum_exp,json=accumExp,proto3" json:"accum_exp,omitempty"`
}

func (x *ProtoCardPostBattleState) Reset() {
	*x = ProtoCardPostBattleState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCardPostBattleState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCardPostBattleState) ProtoMessage() {}

func (x *ProtoCardPostBattleState) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCardPostBattleState.ProtoReflect.Descriptor instead.
func (*ProtoCardPostBattleState) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{31}
}

func (x *ProtoCardPostBattleState) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ProtoCardPostBattleState) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetPreviousLevel() int32 {
	if x != nil {
		return x.PreviousLevel
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetPreviousAccumExp() uint64 {
	if x != nil {
		return x.PreviousAccumExp
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetLevelUps() int32 {
	if x != nil {
		return x.LevelUps
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetTotalExp() uint64 {
	if x != nil {
		return x.TotalExp
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetAccumExp() uint64 {
	if x != nil {
		return x.AccumExp
	}
	return 0
}

type ProtoMailBox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*ProtoMailBoxItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	MaxItems int32               `protobuf:"varint,2,opt,name=max_items,json=maxItems,proto3" json:"max_items,omitempty"`
}

func (x *ProtoMailBox) Reset() {
	*x = ProtoMailBox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMailBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMailBox) ProtoMessage() {}

func (x *ProtoMailBox) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMailBox.ProtoReflect.Descriptor instead.
func (*ProtoMailBox) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{32}
}

func (x *ProtoMailBox) GetItems() []*ProtoMailBoxItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ProtoMailBox) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

type ProtoMailBoxItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceId string                           `protobuf:"bytes,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	Source      ProtoMailBoxItem_ReferenceSource `protobuf:"varint,2,opt,name=source,proto3,enum=protog.ProtoMailBoxItem_ReferenceSource" json:"source,omitempty"`
	Quantity    int32                            `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ReceivedAt  int64                            `protobuf:"varint,4,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
}

func (x *ProtoMailBoxItem) Reset() {
	*x = ProtoMailBoxItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMailBoxItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMailBoxItem) ProtoMessage() {}

func (x *ProtoMailBoxItem) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMailBoxItem.ProtoReflect.Descriptor instead.
func (*ProtoMailBoxItem) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{33}
}

func (x *ProtoMailBoxItem) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ProtoMailBoxItem) GetSource() ProtoMailBoxItem_ReferenceSource {
	if x != nil {
		return x.Source
	}
	return ProtoMailBoxItem_NONE
}

func (x *ProtoMailBoxItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProtoMailBoxItem) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

type ProtoPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId      string               `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName    string               `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerComment string               `protobuf:"bytes,3,opt,name=player_comment,json=playerComment,proto3" json:"player_comment,omitempty"`
	PlayerLevel   int32                `protobuf:"varint,4,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	JobCardId     string               `protobuf:"bytes,6,opt,name=job_card_id,json=jobCardId,proto3" json:"job_card_id,omitempty"`
	SubJobIndex   int32                `protobuf:"varint,7,opt,name=sub_job_index,json=subJobIndex,proto3" json:"sub_job_index,omitempty"`
	CompanionId   string               `protobuf:"bytes,8,opt,name=companion_id,json=companionId,proto3" json:"companion_id,omitempty"`
	RentalCard    *ProtoPlayerCardInfo `protobuf:"bytes,9,opt,name=rental_card,json=rentalCard,proto3" json:"rental_card,omitempty"`
}

func (x *ProtoPlayerInfo) Reset() {
	*x = ProtoPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerInfo) ProtoMessage() {}

func (x *ProtoPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerInfo.ProtoReflect.Descriptor instead.
func (*ProtoPlayerInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{34}
}

func (x *ProtoPlayerInfo) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ProtoPlayerInfo) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoPlayerInfo) GetPlayerComment() string {
	if x != nil {
		return x.PlayerComment
	}
	return ""
}

func (x *ProtoPlayerInfo) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *ProtoPlayerInfo) GetJobCardId() string {
	if x != nil {
		return x.JobCardId
	}
	return ""
}

func (x *ProtoPlayerInfo) GetSubJobIndex() int32 {
	if x != nil {
		return x.SubJobIndex
	}
	return 0
}

func (x *ProtoPlayerInfo) GetCompanionId() string {
	if x != nil {
		return x.CompanionId
	}
	return ""
}

func (x *ProtoPlayerInfo) GetRentalCard() *ProtoPlayerCardInfo {
	if x != nil {
		return x.RentalCard
	}
	return nil
}

type ProtoPlayerLoadout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobCardId       string                 `protobuf:"bytes,1,opt,name=job_card_id,json=jobCardId,proto3" json:"job_card_id,omitempty"`
	SubJobIndex     int32                  `protobuf:"varint,2,opt,name=sub_job_index,json=subJobIndex,proto3" json:"sub_job_index,omitempty"`
	WeaponId        string                 `protobuf:"bytes,3,opt,name=weapon_id,json=weaponId,proto3" json:"weapon_id,omitempty"`
	SubWeaponUnlock int32                  `protobuf:"varint,4,opt,name=sub_weapon_unlock,json=subWeaponUnlock,proto3" json:"sub_weapon_unlock,omitempty"`
	AbilityCards    []*ProtoPlayerCardInfo `protobuf:"bytes,5,rep,name=ability_cards,json=abilityCards,proto3" json:"ability_cards,omitempty"`
}

func (x *ProtoPlayerLoadout) Reset() {
	*x = ProtoPlayerLoadout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerLoadout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerLoadout) ProtoMessage() {}

func (x *ProtoPlayerLoadout) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerLoadout.ProtoReflect.Descriptor instead.
func (*ProtoPlayerLoadout) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{35}
}

func (x *ProtoPlayerLoadout) GetJobCardId() string {
	if x != nil {
		return x.JobCardId
	}
	return ""
}

func (x *ProtoPlayerLoadout) GetSubJobIndex() int32 {
	if x != nil {
		return x.SubJobIndex
	}
	return 0
}

func (x *ProtoPlayerLoadout) GetWeaponId() string {
	if x != nil {
		return x.WeaponId
	}
	return ""
}

func (x *ProtoPlayerLoadout) GetSubWeaponUnlock() int32 {
	if x != nil {
		return x.SubWeaponUnlock
	}
	return 0
}

func (x *ProtoPlayerLoadout) GetAbilityCards() []*ProtoPlayerCardInfo {
	if x != nil {
		return x.AbilityCards
	}
	return nil
}

type ProtoPlayerCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityCardId    string `protobuf:"bytes,1,opt,name=ability_card_id,json=abilityCardId,proto3" json:"ability_card_id,omitempty"`
	AbilityCardLevel int32  `protobuf:"varint,2,opt,name=ability_card_level,json=abilityCardLevel,proto3" json:"ability_card_level,omitempty"`
	AbilityLevel     int32  `protobuf:"varint,3,opt,name=ability_level,json=abilityLevel,proto3" json:"ability_level,omitempty"`
	ExtraSkillUnlock int32  `protobuf:"varint,4,opt,name=extra_skill_unlock,json=extraSkillUnlock,proto3" json:"extra_skill_unlock,omitempty"`
	OverBoostLevel   int32  `protobuf:"varint,5,opt,name=over_boost_level,json=overBoostLevel,proto3" json:"over_boost_level,omitempty"`
	SlotIndex        int32  `protobuf:"varint,6,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
}

func (x *ProtoPlayerCardInfo) Reset() {
	*x = ProtoPlayerCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerCardInfo) ProtoMessage() {}

func (x *ProtoPlayerCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerCardInfo.ProtoReflect.Descriptor instead.
func (*ProtoPlayerCardInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{36}
}

func (x *ProtoPlayerCardInfo) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *ProtoPlayerCardInfo) GetAbilityCardLevel() int32 {
	if x != nil {
		return x.AbilityCardLevel
	}
	return 0
}

func (x *ProtoPlayerCardInfo) GetAbilityLevel() int32 {
	if x != nil {
		return x.AbilityLevel
	}
	return 0
}

func (x *ProtoPlayerCardInfo) GetExtraSkillUnlock() int32 {
	if x != nil {
		return x.ExtraSkillUnlock
	}
	return 0
}

func (x *ProtoPlayerCardInfo) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

func (x *ProtoPlayerCardInfo) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

type ProtoPlayerDeckCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDeckIndex int32              `protobuf:"varint,1,opt,name=current_deck_index,json=currentDeckIndex,proto3" json:"current_deck_index,omitempty"`
	Decks            []*ProtoPlayerDeck `protobuf:"bytes,2,rep,name=decks,proto3" json:"decks,omitempty"`
}

func (x *ProtoPlayerDeckCollection) Reset() {
	*x = ProtoPlayerDeckCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerDeckCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerDeckCollection) ProtoMessage() {}

func (x *ProtoPlayerDeckCollection) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerDeckCollection.ProtoReflect.Descriptor instead.
func (*ProtoPlayerDeckCollection) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{37}
}

func (x *ProtoPlayerDeckCollection) GetCurrentDeckIndex() int32 {
	if x != nil {
		return x.CurrentDeckIndex
	}
	return 0
}

func (x *ProtoPlayerDeckCollection) GetDecks() []*ProtoPlayerDeck {
	if x != nil {
		return x.Decks
	}
	return nil
}

type ProtoPlayerDeck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobCardIndex        int32                  `protobuf:"varint,1,opt,name=job_card_index,json=jobCardIndex,proto3" json:"job_card_index,omitempty"`
	SubJobCardIndex     int32                  `protobuf:"varint,2,opt,name=sub_job_card_index,json=subJobCardIndex,proto3" json:"sub_job_card_index,omitempty"`
	AbilityCardSlots    []*ProtoPlayerDeckSlot `protobuf:"bytes,3,rep,name=ability_card_slots,json=abilityCardSlots,proto3" json:"ability_card_slots,omitempty"`
	SubAbilityCardSlots []*ProtoPlayerDeckSlot `protobuf:"bytes,4,rep,name=sub_ability_card_slots,json=subAbilityCardSlots,proto3" json:"sub_ability_card_slots,omitempty"`
	WeaponIndex         int32                  `protobuf:"varint,5,opt,name=weapon_index,json=weaponIndex,proto3" json:"weapon_index,omitempty"`
	SubWeaponIndex      int32                  `protobuf:"varint,6,opt,name=sub_weapon_index,json=subWeaponIndex,proto3" json:"sub_weapon_index,omitempty"`
	DeckIndex           int32                  `protobuf:"varint,7,opt,name=deck_index,json=deckIndex,proto3" json:"deck_index,omitempty"`
	JobCardSubIndex     int32                  `protobuf:"varint,8,opt,name=job_card_sub_index,json=jobCardSubIndex,proto3" json:"job_card_sub_index,omitempty"`
	SubJobCardSubIndex  int32                  `protobuf:"varint,9,opt,name=sub_job_card_sub_index,json=subJobCardSubIndex,proto3" json:"sub_job_card_sub_index,omitempty"`
}

func (x *ProtoPlayerDeck) Reset() {
	*x = ProtoPlayerDeck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerDeck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerDeck) ProtoMessage() {}

func (x *ProtoPlayerDeck) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerDeck.ProtoReflect.Descriptor instead.
func (*ProtoPlayerDeck) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{38}
}

func (x *ProtoPlayerDeck) GetJobCardIndex() int32 {
	if x != nil {
		return x.JobCardIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetSubJobCardIndex() int32 {
	if x != nil {
		return x.SubJobCardIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetAbilityCardSlots() []*ProtoPlayerDeckSlot {
	if x != nil {
		return x.AbilityCardSlots
	}
	return nil
}

func (x *ProtoPlayerDeck) GetSubAbilityCardSlots() []*ProtoPlayerDeckSlot {
	if x != nil {
		return x.SubAbilityCardSlots
	}
	return nil
}

func (x *ProtoPlayerDeck) GetWeaponIndex() int32 {
	if x != nil {
		return x.WeaponIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetSubWeaponIndex() int32 {
	if x != nil {
		return x.SubWeaponIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetDeckIndex() int32 {
	if x != nil {
		return x.DeckIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetJobCardSubIndex() int32 {
	if x != nil {
		return x.JobCardSubIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetSubJobCardSubIndex() int32 {
	if x != nil {
		return x.SubJobCardSubIndex
	}
	return 0
}

type ProtoPlayerDeckSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityCardId string `protobuf:"bytes,1,opt,name=ability_card_id,json=abilityCardId,proto3" json:"ability_card_id,omitempty"`
	SlotIndex     int32  `protobuf:"varint,2,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
}

func (x *ProtoPlayerDeckSlot) Reset() {
	*x = ProtoPlayerDeckSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerDeckSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerDeckSlot) ProtoMessage() {}

func (x *ProtoPlayerDeckSlot) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerDeckSlot.ProtoReflect.Descriptor instead.
func (*ProtoPlayerDeckSlot) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{39}
}

func (x *ProtoPlayerDeckSlot) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *ProtoPlayerDeckSlot) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

type ProtoPlayerStamina struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentStamina   uint32 `protobuf:"varint,1,opt,name=current_stamina,json=currentStamina,proto3" json:"current_stamina,omitempty"`
	MaxStamina       uint32 `protobuf:"varint,2,opt,name=max_stamina,json=maxStamina,proto3" json:"max_stamina,omitempty"`
	StaminaDec       uint64 `protobuf:"varint,3,opt,name=stamina_dec,json=staminaDec,proto3" json:"stamina_dec,omitempty"`
	CurrentMpStamina uint32 `protobuf:"varint,4,opt,name=current_mp_stamina,json=currentMpStamina,proto3" json:"current_mp_stamina,omitempty"`
	MaxMpStamina     uint32 `protobuf:"varint,5,opt,name=max_mp_stamina,json=maxMpStamina,proto3" json:"max_mp_stamina,omitempty"`
	MpStaminaDec     uint64 `protobuf:"varint,6,opt,name=mp_stamina_dec,json=mpStaminaDec,proto3" json:"mp_stamina_dec,omitempty"`
}

func (x *ProtoPlayerStamina) Reset() {
	*x = ProtoPlayerStamina{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerStamina) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerStamina) ProtoMessage() {}

func (x *ProtoPlayerStamina) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerStamina.ProtoReflect.Descriptor instead.
func (*ProtoPlayerStamina) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{40}
}

func (x *ProtoPlayerStamina) GetCurrentStamina() uint32 {
	if x != nil {
		return x.CurrentStamina
	}
	return 0
}

func (x *ProtoPlayerStamina) GetMaxStamina() uint32 {
	if x != nil {
		return x.MaxStamina
	}
	return 0
}

func (x *ProtoPlayerStamina) GetStaminaDec() uint64 {
	if x != nil {
		return x.StaminaDec
	}
	return 0
}

func (x *ProtoPlayerStamina) GetCurrentMpStamina() uint32 {
	if x != nil {
		return x.CurrentMpStamina
	}
	return 0
}

func (x *ProtoPlayerStamina) GetMaxMpStamina() uint32 {
	if x != nil {
		return x.MaxMpStamina
	}
	return 0
}

func (x *ProtoPlayerStamina) GetMpStaminaDec() uint64 {
	if x != nil {
		return x.MpStaminaDec
	}
	return 0
}

type ProtoRankingInfoSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rankings       map[string]*ProtoRankingInfo `protobuf:"bytes,1,rep,name=rankings,proto3" json:"rankings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FinishedEvents []*ProtoRankingEventClaim    `protobuf:"bytes,2,rep,name=finished_events,json=finishedEvents,proto3" json:"finished_events,omitempty"`
}

func (x *ProtoRankingInfoSet) Reset() {
	*x = ProtoRankingInfoSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRankingInfoSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRankingInfoSet) ProtoMessage() {}

func (x *ProtoRankingInfoSet) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRankingInfoSet.ProtoReflect.Descriptor instead.
func (*ProtoRankingInfoSet) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{41}
}

func (x *ProtoRankingInfoSet) GetRankings() map[string]*ProtoRankingInfo {
	if x != nil {
		return x.Rankings
	}
	return nil
}

func (x *ProtoRankingInfoSet) GetFinishedEvents() []*ProtoRankingEventClaim {
	if x != nil {
		return x.FinishedEvents
	}
	return nil
}

type ProtoRankingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ShortCode       string                       `protobuf:"bytes,2,opt,name=short_code,json=shortCode,proto3" json:"short_code,omitempty"`
	PlayerRanking   *ProtoPlayerRankSetDetails   `protobuf:"bytes,3,opt,name=player_ranking,json=playerRanking,proto3" json:"player_ranking,omitempty"`
	UpperRankings   []*ProtoPlayerRankSetDetails `protobuf:"bytes,4,rep,name=upper_rankings,json=upperRankings,proto3" json:"upper_rankings,omitempty"`
	LowerRankings   []*ProtoPlayerRankSetDetails `protobuf:"bytes,5,rep,name=lower_rankings,json=lowerRankings,proto3" json:"lower_rankings,omitempty"`
	TopRankings     []*ProtoPlayerRankSetDetails `protobuf:"bytes,6,rep,name=top_rankings,json=topRankings,proto3" json:"top_rankings,omitempty"`
	RankRangeScores map[int64]float64            `protobuf:"bytes,7,rep,name=rank_range_scores,json=rankRangeScores,proto3" json:"rank_range_scores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *ProtoRankingInfo) Reset() {
	*x = ProtoRankingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRankingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRankingInfo) ProtoMessage() {}

func (x *ProtoRankingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRankingInfo.ProtoReflect.Descriptor instead.
func (*ProtoRankingInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{42}
}

func (x *ProtoRankingInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProtoRankingInfo) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ProtoRankingInfo) GetPlayerRanking() *ProtoPlayerRankSetDetails {
	if x != nil {
		return x.PlayerRanking
	}
	return nil
}

func (x *ProtoRankingInfo) GetUpperRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.UpperRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetLowerRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.LowerRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetTopRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.TopRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetRankRangeScores() map[int64]float64 {
	if x != nil {
		return x.RankRangeScores
	}
	return nil
}

type ProtoPlayerRankSetDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId       string              `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName     string              `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerLevel    int32               `protobuf:"varint,3,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	Score          float64             `protobuf:"fixed64,4,opt,name=score,proto3" json:"score,omitempty"`
	Rank           int64               `protobuf:"varint,5,opt,name=rank,proto3" json:"rank,omitempty"`
	PrimaryLoadout *ProtoPlayerLoadout `protobuf:"bytes,6,opt,name=primary_loadout,json=primaryLoadout,proto3" json:"primary_loadout,omitempty"`
}

func (x *ProtoPlayerRankSetDetails) Reset() {
	*x = ProtoPlayerRankSetDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerRankSetDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerRankSetDetails) ProtoMessage() {}

func (x *ProtoPlayerRankSetDetails) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerRankSetDetails.ProtoReflect.Descriptor instead.
func (*ProtoPlayerRankSetDetails) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{43}
}

func (x *ProtoPlayerRankSetDetails) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ProtoPlayerRankSetDetails) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoPlayerRankSetDetails) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetPrimaryLoadout() *ProtoPlayerLoadout {
	if x != nil {
		return x.PrimaryLoadout
	}
	return nil
}

type ProtoRankingEventClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claimed      bool              `protobuf:"varint,1,opt,name=claimed,proto3" json:"claimed,omitempty"`
	ReadyToClaim bool              `protobuf:"varint,2,opt,name=ready_to_claim,json=readyToClaim,proto3" json:"ready_to_claim,omitempty"`
	RankingInfo  *ProtoRankingInfo `protobuf:"bytes,3,opt,name=ranking_info,json=rankingInfo,proto3" json:"ranking_info,omitempty"`
}

func (x *ProtoRankingEventClaim) Reset() {
	*x = ProtoRankingEventClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRankingEventClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRankingEventClaim) ProtoMessage() {}

func (x *ProtoRankingEventClaim) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRankingEventClaim.ProtoReflect.Descriptor instead.
func (*ProtoRankingEventClaim) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{44}
}

func (x *ProtoRankingEventClaim) GetClaimed() bool {
	if x != nil {
		return x.Claimed
	}
	return false
}

func (x *ProtoRankingEventClaim) GetReadyToClaim() bool {
	if x != nil {
		return x.ReadyToClaim
	}
	return false
}

func (x *ProtoRankingEventClaim) GetRankingInfo() *ProtoRankingInfo {
	if x != nil {
		return x.RankingInfo
	}
	return nil
}

type ProtoRegionMapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentMapId string                    `protobuf:"bytes,1,opt,name=current_map_id,json=currentMapId,proto3" json:"current_map_id,omitempty"`
	RegionMaps   []*ProtoRegionMapInstance `protobuf:"bytes,2,rep,name=region_maps,json=regionMaps,proto3" json:"region_maps,omitempty"`
}

func (x *ProtoRegionMapData) Reset() {
	*x = ProtoRegionMapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionMapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionMapData) ProtoMessage() {}

func (x *ProtoRegionMapData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionMapData.ProtoReflect.Descriptor instead.
func (*ProtoRegionMapData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{45}
}

func (x *ProtoRegionMapData) GetCurrentMapId() string {
	if x != nil {
		return x.CurrentMapId
	}
	return ""
}

func (x *ProtoRegionMapData) GetRegionMaps() []*ProtoRegionMapInstance {
	if x != nil {
		return x.RegionMaps
	}
	return nil
}

type ProtoRegionHeaderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentMapId string                  `protobuf:"bytes,1,opt,name=current_map_id,json=currentMapId,proto3" json:"current_map_id,omitempty"`
	Headers      []*ProtoRegionMapHeader `protobuf:"bytes,2,rep,name=headers,proto3" json:"headers,omitempty"`
}

func (x *ProtoRegionHeaderData) Reset() {
	*x = ProtoRegionHeaderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionHeaderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionHeaderData) ProtoMessage() {}

func (x *ProtoRegionHeaderData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionHeaderData.ProtoReflect.Descriptor instead.
func (*ProtoRegionHeaderData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{46}
}

func (x *ProtoRegionHeaderData) GetCurrentMapId() string {
	if x != nil {
		return x.CurrentMapId
	}
	return ""
}

func (x *ProtoRegionHeaderData) GetHeaders() []*ProtoRegionMapHeader {
	if x != nil {
		return x.Headers
	}
	return nil
}

type ProtoRegionMapHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId          string `protobuf:"bytes,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	Cleared        bool   `protobuf:"varint,2,opt,name=cleared,proto3" json:"cleared,omitempty"`
	CompletedCount int32  `protobuf:"varint,3,opt,name=completed_count,json=completedCount,proto3" json:"completed_count,omitempty"`
}

func (x *ProtoRegionMapHeader) Reset() {
	*x = ProtoRegionMapHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionMapHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionMapHeader) ProtoMessage() {}

func (x *ProtoRegionMapHeader) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionMapHeader.ProtoReflect.Descriptor instead.
func (*ProtoRegionMapHeader) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{47}
}

func (x *ProtoRegionMapHeader) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *ProtoRegionMapHeader) GetCleared() bool {
	if x != nil {
		return x.Cleared
	}
	return false
}

func (x *ProtoRegionMapHeader) GetCompletedCount() int32 {
	if x != nil {
		return x.CompletedCount
	}
	return 0
}

type ProtoRegionMapInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId            string                 `protobuf:"bytes,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	NodeData         []*ProtoRegionNodeData `protobuf:"bytes,2,rep,name=node_data,json=nodeData,proto3" json:"node_data,omitempty"`
	CurrentNodeIndex int32                  `protobuf:"varint,3,opt,name=current_node_index,json=currentNodeIndex,proto3" json:"current_node_index,omitempty"`
	LockData         []*ProtoRegionLockData `protobuf:"bytes,4,rep,name=lock_data,json=lockData,proto3" json:"lock_data,omitempty"`
	EnemiesDefeated  uint64                 `protobuf:"varint,5,opt,name=enemies_defeated,json=enemiesDefeated,proto3" json:"enemies_defeated,omitempty"`
	HighScore        uint64                 `protobuf:"varint,6,opt,name=high_score,json=highScore,proto3" json:"high_score,omitempty"`
	JobTypeDefeats   map[string]uint64      `protobuf:"bytes,7,rep,name=job_type_defeats,json=jobTypeDefeats,proto3" json:"job_type_defeats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	PendingEvents    map[string]bool        `protobuf:"bytes,8,rep,name=pending_events,json=pendingEvents,proto3" json:"pending_events,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	PersistedEvents  map[string]bool        `protobuf:"bytes,9,rep,name=persisted_events,json=persistedEvents,proto3" json:"persisted_events,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoRegionMapInstance) Reset() {
	*x = ProtoRegionMapInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionMapInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionMapInstance) ProtoMessage() {}

func (x *ProtoRegionMapInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionMapInstance.ProtoReflect.Descriptor instead.
func (*ProtoRegionMapInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{48}
}

func (x *ProtoRegionMapInstance) GetMapId() string {
	if x != nil {
		return x.MapId
	}
	return ""
}

func (x *ProtoRegionMapInstance) GetNodeData() []*ProtoRegionNodeData {
	if x != nil {
		return x.NodeData
	}
	return nil
}

func (x *ProtoRegionMapInstance) GetCurrentNodeIndex() int32 {
	if x != nil {
		return x.CurrentNodeIndex
	}
	return 0
}

func (x *ProtoRegionMapInstance) GetLockData() []*ProtoRegionLockData {
	if x != nil {
		return x.LockData
	}
	return nil
}

func (x *ProtoRegionMapInstance) GetEnemiesDefeated() uint64 {
	if x != nil {
		return x.EnemiesDefeated
	}
	return 0
}

func (x *ProtoRegionMapInstance) GetHighScore() uint64 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

func (x *ProtoRegionMapInstance) GetJobTypeDefeats() map[string]uint64 {
	if x != nil {
		return x.JobTypeDefeats
	}
	return nil
}

func (x *ProtoRegionMapInstance) GetPendingEvents() map[string]bool {
	if x != nil {
		return x.PendingEvents
	}
	return nil
}

func (x *ProtoRegionMapInstance) GetPersistedEvents() map[string]bool {
	if x != nil {
		return x.PersistedEvents
	}
	return nil
}

type ProtoRegionNodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId         string `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Visible        bool   `protobuf:"varint,2,opt,name=visible,proto3" json:"visible,omitempty"`
	Locked         bool   `protobuf:"varint,3,opt,name=locked,proto3" json:"locked,omitempty"`
	Completed      bool   `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
	CompletedCount uint64 `protobuf:"varint,5,opt,name=completed_count,json=completedCount,proto3" json:"completed_count,omitempty"`
	Opened         bool   `protobuf:"varint,6,opt,name=opened,proto3" json:"opened,omitempty"`
}

func (x *ProtoRegionNodeData) Reset() {
	*x = ProtoRegionNodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionNodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionNodeData) ProtoMessage() {}

func (x *ProtoRegionNodeData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionNodeData.ProtoReflect.Descriptor instead.
func (*ProtoRegionNodeData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{49}
}

func (x *ProtoRegionNodeData) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *ProtoRegionNodeData) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *ProtoRegionNodeData) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *ProtoRegionNodeData) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *ProtoRegionNodeData) GetCompletedCount() uint64 {
	if x != nil {
		return x.CompletedCount
	}
	return 0
}

func (x *ProtoRegionNodeData) GetOpened() bool {
	if x != nil {
		return x.Opened
	}
	return false
}

type ProtoRegionLockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockId       string `protobuf:"bytes,1,opt,name=lock_id,json=lockId,proto3" json:"lock_id,omitempty"`
	ParentNodeId string `protobuf:"bytes,2,opt,name=parent_node_id,json=parentNodeId,proto3" json:"parent_node_id,omitempty"`
	TargetNodeId string `protobuf:"bytes,3,opt,name=target_node_id,json=targetNodeId,proto3" json:"target_node_id,omitempty"`
	Unlocked     bool   `protobuf:"varint,4,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
}

func (x *ProtoRegionLockData) Reset() {
	*x = ProtoRegionLockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionLockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionLockData) ProtoMessage() {}

func (x *ProtoRegionLockData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionLockData.ProtoReflect.Descriptor instead.
func (*ProtoRegionLockData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{50}
}

func (x *ProtoRegionLockData) GetLockId() string {
	if x != nil {
		return x.LockId
	}
	return ""
}

func (x *ProtoRegionLockData) GetParentNodeId() string {
	if x != nil {
		return x.ParentNodeId
	}
	return ""
}

func (x *ProtoRegionLockData) GetTargetNodeId() string {
	if x != nil {
		return x.TargetNodeId
	}
	return ""
}

func (x *ProtoRegionLockData) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

type ProtoRegionTeleportEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionMapId     string `protobuf:"bytes,1,opt,name=region_map_id,json=regionMapId,proto3" json:"region_map_id,omitempty"`
	NodeIndex       int32  `protobuf:"varint,2,opt,name=node_index,json=nodeIndex,proto3" json:"node_index,omitempty"`
	DefinitionValue int32  `protobuf:"varint,3,opt,name=definition_value,json=definitionValue,proto3" json:"definition_value,omitempty"`
	Target          int32  `protobuf:"varint,4,opt,name=target,proto3" json:"target,omitempty"`
	Order           int32  `protobuf:"varint,5,opt,name=order,proto3" json:"order,omitempty"`
	Repeatable      bool   `protobuf:"varint,6,opt,name=repeatable,proto3" json:"repeatable,omitempty"`
}

func (x *ProtoRegionTeleportEvent) Reset() {
	*x = ProtoRegionTeleportEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionTeleportEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionTeleportEvent) ProtoMessage() {}

func (x *ProtoRegionTeleportEvent) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionTeleportEvent.ProtoReflect.Descriptor instead.
func (*ProtoRegionTeleportEvent) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{51}
}

func (x *ProtoRegionTeleportEvent) GetRegionMapId() string {
	if x != nil {
		return x.RegionMapId
	}
	return ""
}

func (x *ProtoRegionTeleportEvent) GetNodeIndex() int32 {
	if x != nil {
		return x.NodeIndex
	}
	return 0
}

func (x *ProtoRegionTeleportEvent) GetDefinitionValue() int32 {
	if x != nil {
		return x.DefinitionValue
	}
	return 0
}

func (x *ProtoRegionTeleportEvent) GetTarget() int32 {
	if x != nil {
		return x.Target
	}
	return 0
}

func (x *ProtoRegionTeleportEvent) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *ProtoRegionTeleportEvent) GetRepeatable() bool {
	if x != nil {
		return x.Repeatable
	}
	return false
}

type ProtoRegionEventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceIndex     int32 `protobuf:"varint,1,opt,name=source_index,json=sourceIndex,proto3" json:"source_index,omitempty"`
	TargetIndex     int32 `protobuf:"varint,2,opt,name=target_index,json=targetIndex,proto3" json:"target_index,omitempty"`
	DefinitionValue int32 `protobuf:"varint,3,opt,name=definition_value,json=definitionValue,proto3" json:"definition_value,omitempty"`
	Order           int32 `protobuf:"varint,4,opt,name=order,proto3" json:"order,omitempty"`
}

func (x *ProtoRegionEventData) Reset() {
	*x = ProtoRegionEventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionEventData) ProtoMessage() {}

func (x *ProtoRegionEventData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionEventData.ProtoReflect.Descriptor instead.
func (*ProtoRegionEventData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{52}
}

func (x *ProtoRegionEventData) GetSourceIndex() int32 {
	if x != nil {
		return x.SourceIndex
	}
	return 0
}

func (x *ProtoRegionEventData) GetTargetIndex() int32 {
	if x != nil {
		return x.TargetIndex
	}
	return 0
}

func (x *ProtoRegionEventData) GetDefinitionValue() int32 {
	if x != nil {
		return x.DefinitionValue
	}
	return 0
}

func (x *ProtoRegionEventData) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProtoSkillPanelGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PanelPages     []*ProtoSkillPanelPage `protobuf:"bytes,1,rep,name=panel_pages,json=panelPages,proto3" json:"panel_pages,omitempty"`
	CompletedCount int32                  `protobuf:"varint,2,opt,name=completed_count,json=completedCount,proto3" json:"completed_count,omitempty"`
}

func (x *ProtoSkillPanelGroups) Reset() {
	*x = ProtoSkillPanelGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSkillPanelGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSkillPanelGroups) ProtoMessage() {}

func (x *ProtoSkillPanelGroups) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSkillPanelGroups.ProtoReflect.Descriptor instead.
func (*ProtoSkillPanelGroups) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{53}
}

func (x *ProtoSkillPanelGroups) GetPanelPages() []*ProtoSkillPanelPage {
	if x != nil {
		return x.PanelPages
	}
	return nil
}

func (x *ProtoSkillPanelGroups) GetCompletedCount() int32 {
	if x != nil {
		return x.CompletedCount
	}
	return 0
}

type ProtoSkillPanelPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       int32              `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Visible     bool               `protobuf:"varint,2,opt,name=visible,proto3" json:"visible,omitempty"`
	Unlocked    bool               `protobuf:"varint,3,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	Completed   bool               `protobuf:"varint,4,opt,name=completed,proto3" json:"completed,omitempty"`
	SkillPanels []*ProtoSkillPanel `protobuf:"bytes,5,rep,name=skill_panels,json=skillPanels,proto3" json:"skill_panels,omitempty"`
}

func (x *ProtoSkillPanelPage) Reset() {
	*x = ProtoSkillPanelPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSkillPanelPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSkillPanelPage) ProtoMessage() {}

func (x *ProtoSkillPanelPage) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSkillPanelPage.ProtoReflect.Descriptor instead.
func (*ProtoSkillPanelPage) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{54}
}

func (x *ProtoSkillPanelPage) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoSkillPanelPage) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *ProtoSkillPanelPage) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *ProtoSkillPanelPage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *ProtoSkillPanelPage) GetSkillPanels() []*ProtoSkillPanel {
	if x != nil {
		return x.SkillPanels
	}
	return nil
}

type ProtoSkillPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32 `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Unlocked  bool  `protobuf:"varint,2,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	Completed bool  `protobuf:"varint,3,opt,name=completed,proto3" json:"completed,omitempty"`
	CapItem   bool  `protobuf:"varint,4,opt,name=cap_item,json=capItem,proto3" json:"cap_item,omitempty"`
}

func (x *ProtoSkillPanel) Reset() {
	*x = ProtoSkillPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSkillPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSkillPanel) ProtoMessage() {}

func (x *ProtoSkillPanel) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSkillPanel.ProtoReflect.Descriptor instead.
func (*ProtoSkillPanel) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{55}
}

func (x *ProtoSkillPanel) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoSkillPanel) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *ProtoSkillPanel) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *ProtoSkillPanel) GetCapItem() bool {
	if x != nil {
		return x.CapItem
	}
	return false
}

type ProtoWeaponInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeaponList []*ProtoWeaponInstance `protobuf:"bytes,1,rep,name=weapon_list,json=weaponList,proto3" json:"weapon_list,omitempty"`
}

func (x *ProtoWeaponInventory) Reset() {
	*x = ProtoWeaponInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWeaponInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWeaponInventory) ProtoMessage() {}

func (x *ProtoWeaponInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWeaponInventory.ProtoReflect.Descriptor instead.
func (*ProtoWeaponInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{56}
}

func (x *ProtoWeaponInventory) GetWeaponList() []*ProtoWeaponInstance {
	if x != nil {
		return x.WeaponList
	}
	return nil
}

type ProtoWeaponInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId           string           `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	SubWeaponUnlock int32            `protobuf:"varint,2,opt,name=sub_weapon_unlock,json=subWeaponUnlock,proto3" json:"sub_weapon_unlock,omitempty"`
	BaseWeaponId    string           `protobuf:"bytes,3,opt,name=base_weapon_id,json=baseWeaponId,proto3" json:"base_weapon_id,omitempty"`
	CreatedAt       int64            `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	AutoAbilities   map[string]int32 `protobuf:"bytes,5,rep,name=auto_abilities,json=autoAbilities,proto3" json:"auto_abilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoWeaponInstance) Reset() {
	*x = ProtoWeaponInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWeaponInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWeaponInstance) ProtoMessage() {}

func (x *ProtoWeaponInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWeaponInstance.ProtoReflect.Descriptor instead.
func (*ProtoWeaponInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{57}
}

func (x *ProtoWeaponInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoWeaponInstance) GetSubWeaponUnlock() int32 {
	if x != nil {
		return x.SubWeaponUnlock
	}
	return 0
}

func (x *ProtoWeaponInstance) GetBaseWeaponId() string {
	if x != nil {
		return x.BaseWeaponId
	}
	return ""
}

func (x *ProtoWeaponInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProtoWeaponInstance) GetAutoAbilities() map[string]int32 {
	if x != nil {
		return x.AutoAbilities
	}
	return nil
}

var File_data_proto protoreflect.FileDescriptor

var file_data_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x22, 0xaf, 0x06, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x47, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x6d,
	0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x42,
	0x6f, 0x78, 0x52, 0x07, 0x6d, 0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x12, 0x48, 0x0a, 0x11, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3c, 0x0a, 0x0d, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x43, 0x61,
	0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x14, 0x66, 0x61, 0x69, 0x72, 0x79,
	0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x66, 0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x45, 0x0a, 0x0f, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x4e, 0x0a, 0x17, 0x73, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x73, 0x69, 0x6e,
	0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x4c, 0x0a, 0x16, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x6d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x6c, 0x61, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x51, 0x0a, 0x15, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61, 0x72,
	0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x52, 0x12,
	0x63, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x65,
	0x74, 0x73, 0x12, 0x42, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x22, 0xe4, 0x02, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x3f, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x35, 0x0a, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x04, 0x62, 0x61, 0x6e, 0x6b, 0x12, 0x39, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61,
	0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x57, 0x0a, 0x0f, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4d, 0x61, 0x78, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x6d, 0x61,
	0x78, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x4d,
	0x61, 0x78, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a,
	0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x44, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xec,
	0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43,
	0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x73, 0x65, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x6c, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x75, 0x74, 0x6f, 0x53, 0x65, 0x6c, 0x6c, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x77, 0x0a,
	0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d,
	0x61, 0x78, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x63, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x97, 0x03, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x65, 0x64,
	0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73,
	0x65, 0x65, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x5f,
	0x65, 0x78, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62,
	0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x22, 0xf7, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x45, 0x78, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x5f, 0x65, 0x78,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x78,
	0x70, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x78, 0x70, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x65, 0x78, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x34,
	0x0a, 0x07, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x12, 0x37, 0x0a, 0x05, 0x64, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x64, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x5f, 0x0a,
	0x17, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x61, 0x73,
	0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x00, 0x52, 0x15, 0x6c, 0x61, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x1a,
	0x0a, 0x18, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa6, 0x02, 0x0a, 0x14, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d,
	0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x72, 0x64,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x72,
	0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x3e, 0x0a, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x61, 0x72,
	0x64, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x0d, 0x63, 0x61, 0x72, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xdf, 0x01, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x70, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x2c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x22, 0x70, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x2c, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e,
	0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4b,
	0x65, 0x79, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x22, 0x50, 0x0a, 0x12, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x19, 0x0a, 0x08, 0x66, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x66, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69,
	0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x66, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4b, 0x0a, 0x14, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x2f, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x43, 0x61, 0x72, 0x64, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x22, 0x5d, 0x0a, 0x16, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x76, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x76, 0x69, 0x65, 0x77, 0x12, 0x2f, 0x0a, 0x04, 0x73, 0x65, 0x74, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f,
	0x72, 0x74, 0x52, 0x04, 0x73, 0x65, 0x74, 0x73, 0x22, 0xec, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e,
	0x63, 0x61, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0d, 0x73, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x69, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d,
	0x65, 0x64, 0x22, 0x95, 0x01, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x69, 0x72,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36,
	0x0a, 0x17, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x15, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x42, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x22, 0x6a, 0x0a, 0x1c, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x46, 0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4a, 0x0a, 0x0e, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x46, 0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7f, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46,
	0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x43, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x59, 0x0a, 0x0e, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72,
	0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x09, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74,
	0x22, 0x7e, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x43, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xa6, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a,
	0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x04, 0x6a, 0x6f,
	0x62, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x04, 0x6a, 0x6f, 0x62, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x77, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x73, 0x12, 0x4c, 0x0a, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x1a,
	0x5d, 0x0a, 0x10, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x4c,
	0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x37, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x07, 0x6a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x86, 0x06, 0x0a,
	0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x75, 0x62, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x76,
	0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x4d, 0x0a, 0x13,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x75, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x11, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1e, 0x0a, 0x0b, 0x62,
	0x61, 0x73, 0x65, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x77, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x1e, 0x0a, 0x0b, 0x68, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x70, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12,
	0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b,
	0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x6b,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a,
	0x0e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66,
	0x65, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x4d, 0x6f, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x72, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x11, 0x63, 0x72, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x4d, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65,
	0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6c,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x0e, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x13, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xb8, 0x01, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c,
	0x61, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x48, 0x01, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0x93, 0x04, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6c, 0x64,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67,
	0x6f, 0x6c, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x3d, 0x0a, 0x0c, 0x73, 0x65, 0x65,
	0x64, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74,
	0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x73, 0x65, 0x65,
	0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x65, 0x65, 0x64,
	0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x73, 0x65, 0x65, 0x64, 0x41, 0x72, 0x65, 0x61,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x65,
	0x65, 0x64, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c,
	0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x13, 0x73, 0x65, 0x65, 0x64, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72, 0x12, 0x53,
	0x0a, 0x14, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x64, 0x72,
	0x6f, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x63, 0x61, 0x72,
	0x64, 0x44, 0x72, 0x6f, 0x70, 0x73, 0x22, 0xb4, 0x04, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73,
	0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4d, 0x61,
	0x78, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x5f, 0x65, 0x78, 0x70, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x45, 0x78,
	0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x65, 0x63,
	0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x78, 0x70, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x6d,
	0x69, 0x6e, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x65,
	0x78, 0x70, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12,
	0x2c, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x86, 0x02,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x22, 0x5b, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d,
	0x61, 0x69, 0x6c, 0x42, 0x6f, 0x78, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x49, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0xaa, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69,
	0x6c, 0x42, 0x6f, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x6f,
	0x78, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x74, 0x0a, 0x0f, 0x52, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x08, 0x0a,
	0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x42, 0x49, 0x4c, 0x49,
	0x54, 0x59, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x54, 0x45,
	0x4d, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x4f, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10,
	0x03, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x13, 0x0a,
	0x0f, 0x46, 0x41, 0x49, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x49, 0x4f, 0x4e,
	0x10, 0x05, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x06,
	0x22, 0xbe, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0b,
	0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x75, 0x62, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x22, 0xe3, 0x01, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a,
	0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f,
	0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x0a, 0x09,
	0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x62,
	0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55,
	0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x40, 0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x87, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x26, 0x0a, 0x0f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x78, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x65, 0x63, 0x6b, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x05,
	0x64, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x64, 0x65, 0x63, 0x6b, 0x73, 0x22, 0xce, 0x03, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x12,
	0x24, 0x0a, 0x0e, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2b, 0x0a, 0x12, 0x73, 0x75, 0x62, 0x5f, 0x6a, 0x6f, 0x62,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x49, 0x0a, 0x12, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x10, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x50, 0x0a,
	0x16, 0x73, 0x75, 0x62, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x13, 0x73, 0x75, 0x62, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x75, 0x62, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x73, 0x75,
	0x62, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x2b, 0x0a, 0x12, 0x6a,
	0x6f, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x32, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x5f,
	0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x75, 0x62, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x75, 0x62, 0x4a, 0x6f, 0x62,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5c, 0x0a, 0x13,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xf9, 0x01, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x78, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x6d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x5f, 0x64, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x44, 0x65, 0x63, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x69,
	0x6e, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x4d, 0x70, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61,
	0x78, 0x5f, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x4d, 0x70, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x5f, 0x64,
	0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6d, 0x70, 0x53, 0x74, 0x61, 0x6d,
	0x69, 0x6e, 0x61, 0x44, 0x65, 0x63, 0x22, 0xfc, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x12, 0x45,
	0x0a, 0x08, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x72, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x47, 0x0a, 0x0f, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65,
	0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x0e,
	0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x55,
	0x0a, 0x0d, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x84, 0x04, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68,
	0x6f, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x12, 0x48, 0x0a, 0x0e, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e,
	0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x48, 0x0a,
	0x0e, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x52,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x5f, 0x72,
	0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x52, 0x0b, 0x74, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x59, 0x0a,
	0x11, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x72, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x6b,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xeb, 0x01, 0x0a,
	0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6d,
	0x61, 0x72, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x22, 0x95, 0x01, 0x0a, 0x16, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x74, 0x6f, 0x5f, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x3b, 0x0a, 0x0c, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e,
	0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x72, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x7b, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x3f,
	0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x73, 0x22,
	0x75, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x36,
	0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x22, 0x70, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x15,
	0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x65, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xfc, 0x05, 0x0a, 0x16, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x38, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x10,
	0x65, 0x6e, 0x65, 0x6d, 0x69, 0x65, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x65, 0x6e, 0x65, 0x6d, 0x69, 0x65, 0x73, 0x44,
	0x65, 0x66, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x69, 0x67, 0x68, 0x5f,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x68, 0x69, 0x67,
	0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x5c, 0x0a, 0x10, 0x6a, 0x6f, 0x62, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x64, 0x65, 0x66, 0x65, 0x61, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65,
	0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x65, 0x61, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x6a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66,
	0x65, 0x61, 0x74, 0x73, 0x12, 0x58, 0x0a, 0x0e, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x6e,
	0x64, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x5e,
	0x0a, 0x10, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x41,
	0x0a, 0x13, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x65, 0x61, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x40, 0x0a, 0x12, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x1a, 0x42, 0x0a, 0x14, 0x50, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xbf, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x17, 0x0a, 0x07, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x22, 0xd6, 0x01, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x14,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x7e, 0x0a, 0x15, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x5f, 0x70, 0x61,
	0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x13,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x3a, 0x0a,
	0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x70, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52, 0x0b, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x7c, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x63, 0x61, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x63, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x54, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x3c, 0x0a, 0x0b, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x0a, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb6, 0x02,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x75, 0x62, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x55, 0x0a,
	0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x43, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x6a, 0x61, 0x63, 0x6b, 0x31, 0x35, 0x32,
	0x31, 0x2f, 0x6d, 0x65, 0x76, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0xaa, 0x02, 0x0c, 0x4d,
	0x6f, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_data_proto_rawDescOnce sync.Once
	file_data_proto_rawDescData = file_data_proto_rawDesc
)

func file_data_proto_rawDescGZIP() []byte {
	file_data_proto_rawDescOnce.Do(func() {
		file_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_proto_rawDescData)
	})
	return file_data_proto_rawDescData
}

var file_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_data_proto_msgTypes = make([]protoimpl.MessageInfo, 68)
var file_data_proto_goTypes = []interface{}{
	(ProtoMailBoxItem_ReferenceSource)(0),   // 0: protog.ProtoMailBoxItem.ReferenceSource
	(*ProtoGameData)(nil),                   // 1: protog.ProtoGameData
	(*ProtoAbilityCardData)(nil),            // 2: protog.ProtoAbilityCardData
	(*ProtoAbilityCardHistory)(nil),         // 3: protog.ProtoAbilityCardHistory
	(*ProtoAbilityCardHistoryInstance)(nil), // 4: protog.ProtoAbilityCardHistoryInstance
	(*ProtoAbilityCardInventory)(nil),       // 5: protog.ProtoAbilityCardInventory
	(*ProtoAbilityCardInstance)(nil),        // 6: protog.ProtoAbilityCardInstance
	(*ProtoBattleData)(nil),                 // 7: protog.ProtoBattleData
	(*ProtoBattleStartData)(nil),            // 8: protog.ProtoBattleStartData
	(*ProtoDailyMissionInstance)(nil),       // 9: protog.ProtoDailyMissionInstance
	(*BattleItemDrop)(nil),                  // 10: protog.BattleItemDrop
	(*BattleCardDrop)(nil),                  // 11: protog.BattleCardDrop
	(*BattleDropTableKey)(nil),              // 12: protog.BattleDropTableKey
	(*BattleItemDropResult)(nil),            // 13: protog.BattleItemDropResult
	(*BattleCardDropResult)(nil),            // 14: protog.BattleCardDropResult
	(*ProtoCardFilterSortSet)(nil),          // 15: protog.ProtoCardFilterSortSet
	(*ProtoCardFilterSort)(nil),             // 16: protog.ProtoCardFilterSort
	(*ProtoLoginCampaignInstance)(nil),      // 17: protog.ProtoLoginCampaignInstance
	(*ProtoFairyCompanionData)(nil),         // 18: protog.ProtoFairyCompanionData
	(*ProtoFairyCompanionInventory)(nil),    // 19: protog.ProtoFairyCompanionInventory
	(*ProtoFairyCompanionInstance)(nil),     // 20: protog.ProtoFairyCompanionInstance
	(*ProtoItemData)(nil),                   // 21: protog.ProtoItemData
	(*ProtoItemDropRecord)(nil),             // 22: protog.ProtoItemDropRecord
	(*ProtoItemInventory)(nil),              // 23: protog.ProtoItemInventory
	(*ProtoItemInstance)(nil),               // 24: protog.ProtoItemInstance
	(*ProtoItemValuePair)(nil),              // 25: protog.ProtoItemValuePair
	(*ProtoJobCardData)(nil),                // 26: protog.ProtoJobCardData
	(*ProtoJobInventory)(nil),               // 27: protog.ProtoJobInventory
	(*ProtoJobCardInstance)(nil),            // 28: protog.ProtoJobCardInstance
	(*ProtoLastBattleInformation)(nil),      // 29: protog.ProtoLastBattleInformation
	(*ProtoLastBattleResults)(nil),          // 30: protog.ProtoLastBattleResults
	(*ProtoProgressInformation)(nil),        // 31: protog.ProtoProgressInformation
	(*ProtoCardPostBattleState)(nil),        // 32: protog.ProtoCardPostBattleState
	(*ProtoMailBox)(nil),                    // 33: protog.ProtoMailBox
	(*ProtoMailBoxItem)(nil),                // 34: protog.ProtoMailBoxItem
	(*ProtoPlayerInfo)(nil),                 // 35: protog.ProtoPlayerInfo
	(*ProtoPlayerLoadout)(nil),              // 36: protog.ProtoPlayerLoadout
	(*ProtoPlayerCardInfo)(nil),             // 37: protog.ProtoPlayerCardInfo
	(*ProtoPlayerDeckCollection)(nil),       // 38: protog.ProtoPlayerDeckCollection
	(*ProtoPlayerDeck)(nil),                 // 39: protog.ProtoPlayerDeck
	(*ProtoPlayerDeckSlot)(nil),             // 40: protog.ProtoPlayerDeckSlot
	(*ProtoPlayerStamina)(nil),              // 41: protog.ProtoPlayerStamina
	(*ProtoRankingInfoSet)(nil),             // 42: protog.ProtoRankingInfoSet
	(*ProtoRankingInfo)(nil),                // 43: protog.ProtoRankingInfo
	(*ProtoPlayerRankSetDetails)(nil),       // 44: protog.ProtoPlayerRankSetDetails
	(*ProtoRankingEventClaim)(nil),          // 45: protog.ProtoRankingEventClaim
	(*ProtoRegionMapData)(nil),              // 46: protog.ProtoRegionMapData
	(*ProtoRegionHeaderData)(nil),           // 47: protog.ProtoRegionHeaderData
	(*ProtoRegionMapHeader)(nil),            // 48: protog.ProtoRegionMapHeader
	(*ProtoRegionMapInstance)(nil),          // 49: protog.ProtoRegionMapInstance
	(*ProtoRegionNodeData)(nil),             // 50: protog.ProtoRegionNodeData
	(*ProtoRegionLockData)(nil),             // 51: protog.ProtoRegionLockData
	(*ProtoRegionTeleportEvent)(nil),        // 52: protog.ProtoRegionTeleportEvent
	(*ProtoRegionEventData)(nil),            // 53: protog.ProtoRegionEventData
	(*ProtoSkillPanelGroups)(nil),           // 54: protog.ProtoSkillPanelGroups
	(*ProtoSkillPanelPage)(nil),             // 55: protog.ProtoSkillPanelPage
	(*ProtoSkillPanel)(nil),                 // 56: protog.ProtoSkillPanel
	(*ProtoWeaponInventory)(nil),            // 57: protog.ProtoWeaponInventory
	(*ProtoWeaponInstance)(nil),             // 58: protog.ProtoWeaponInstance
	nil,                                     // 59: protog.ProtoAbilityCardData.MaxCardLevelsEntry
	nil,                                     // 60: protog.ProtoItemData.LimitDataEntry
	nil,                                     // 61: protog.ProtoJobCardData.SkillPanelsEntry
	nil,                                     // 62: protog.ProtoJobCardInstance.AutoAbilitiesEntry
	nil,                                     // 63: protog.ProtoRankingInfoSet.RankingsEntry
	nil,                                     // 64: protog.ProtoRankingInfo.RankRangeScoresEntry
	nil,                                     // 65: protog.ProtoRegionMapInstance.JobTypeDefeatsEntry
	nil,                                     // 66: protog.ProtoRegionMapInstance.PendingEventsEntry
	nil,                                     // 67: protog.ProtoRegionMapInstance.PersistedEventsEntry
	nil,                                     // 68: protog.ProtoWeaponInstance.AutoAbilitiesEntry
}
var file_data_proto_depIdxs = []int32{
	33, // 0: protog.ProtoGameData.mailbox:type_name -> protog.ProtoMailBox
	2,  // 1: protog.ProtoGameData.ability_card_data:type_name -> protog.ProtoAbilityCardData
	26, // 2: protog.ProtoGameData.job_card_data:type_name -> protog.ProtoJobCardData
	21, // 3: protog.ProtoGameData.item_data:type_name -> protog.ProtoItemData
	18, // 4: protog.ProtoGameData.fairy_companion_data:type_name -> protog.ProtoFairyCompanionData
	47, // 5: protog.ProtoGameData.region_map_data:type_name -> protog.ProtoRegionHeaderData
	7,  // 6: protog.ProtoGameData.single_play_battle_data:type_name -> protog.ProtoBattleData
	7,  // 7: protog.ProtoGameData.multi_play_battle_data:type_name -> protog.ProtoBattleData
	15, // 8: protog.ProtoGameData.card_filter_sort_sets:type_name -> protog.ProtoCardFilterSortSet
	42, // 9: protog.ProtoGameData.event_rankings:type_name -> protog.ProtoRankingInfoSet
	5,  // 10: protog.ProtoAbilityCardData.inventory:type_name -> protog.ProtoAbilityCardInventory
	5,  // 11: protog.ProtoAbilityCardData.bank:type_name -> protog.ProtoAbilityCardInventory
	3,  // 12: protog.ProtoAbilityCardData.history:type_name -> protog.ProtoAbilityCardHistory
	59, // 13: protog.ProtoAbilityCardData.max_card_levels:type_name -> protog.ProtoAbilityCardData.MaxCardLevelsEntry
	4,  // 14: protog.ProtoAbilityCardHistory.card_list:type_name -> protog.ProtoAbilityCardHistoryInstance
	6,  // 15: protog.ProtoAbilityCardInventory.card_list:type_name -> protog.ProtoAbilityCardInstance
	41, // 16: protog.ProtoBattleData.stamina:type_name -> protog.ProtoPlayerStamina
	38, // 17: protog.ProtoBattleData.decks:type_name -> protog.ProtoPlayerDeckCollection
	29, // 18: protog.ProtoBattleData.last_battle_information:type_name -> protog.ProtoLastBattleInformation
	10, // 19: protog.ProtoBattleStartData.item_drop_table:type_name -> protog.BattleItemDrop
	11, // 20: protog.ProtoBattleStartData.card_drop_table:type_name -> protog.BattleCardDrop
	25, // 21: protog.ProtoDailyMissionInstance.item_rewards:type_name -> protog.ProtoItemValuePair
	12, // 22: protog.BattleItemDrop.key:type_name -> protog.BattleDropTableKey
	13, // 23: protog.BattleItemDrop.drop:type_name -> protog.BattleItemDropResult
	12, // 24: protog.BattleCardDrop.key:type_name -> protog.BattleDropTableKey
	14, // 25: protog.BattleCardDrop.drop:type_name -> protog.BattleCardDropResult
	16, // 26: protog.ProtoCardFilterSortSet.sets:type_name -> protog.ProtoCardFilterSort
	19, // 27: protog.ProtoFairyCompanionData.inventory:type_name -> protog.ProtoFairyCompanionInventory
	20, // 28: protog.ProtoFairyCompanionInventory.companion_list:type_name -> protog.ProtoFairyCompanionInstance
	23, // 29: protog.ProtoItemData.inventory:type_name -> protog.ProtoItemInventory
	60, // 30: protog.ProtoItemData.limit_data:type_name -> protog.ProtoItemData.LimitDataEntry
	24, // 31: protog.ProtoItemInventory.item_list:type_name -> protog.ProtoItemInstance
	27, // 32: protog.ProtoJobCardData.jobs:type_name -> protog.ProtoJobInventory
	57, // 33: protog.ProtoJobCardData.weapons:type_name -> protog.ProtoWeaponInventory
	61, // 34: protog.ProtoJobCardData.skill_panels:type_name -> protog.ProtoJobCardData.SkillPanelsEntry
	28, // 35: protog.ProtoJobInventory.job_list:type_name -> protog.ProtoJobCardInstance
	54, // 36: protog.ProtoJobCardInstance.skill_panel_unlocks:type_name -> protog.ProtoSkillPanelGroups
	62, // 37: protog.ProtoJobCardInstance.auto_abilities:type_name -> protog.ProtoJobCardInstance.AutoAbilitiesEntry
	8,  // 38: protog.ProtoLastBattleInformation.start_data:type_name -> protog.ProtoBattleStartData
	30, // 39: protog.ProtoLastBattleInformation.results:type_name -> protog.ProtoLastBattleResults
	25, // 40: protog.ProtoLastBattleResults.seed_rewards:type_name -> protog.ProtoItemValuePair
	31, // 41: protog.ProtoLastBattleResults.progress_information:type_name -> protog.ProtoProgressInformation
	32, // 42: protog.ProtoLastBattleResults.card_states:type_name -> protog.ProtoCardPostBattleState
	25, // 43: protog.ProtoLastBattleResults.item_rewards:type_name -> protog.ProtoItemValuePair
	6,  // 44: protog.ProtoLastBattleResults.card_drops:type_name -> protog.ProtoAbilityCardInstance
	34, // 45: protog.ProtoMailBox.items:type_name -> protog.ProtoMailBoxItem
	0,  // 46: protog.ProtoMailBoxItem.source:type_name -> protog.ProtoMailBoxItem.ReferenceSource
	37, // 47: protog.ProtoPlayerInfo.rental_card:type_name -> protog.ProtoPlayerCardInfo
	37, // 48: protog.ProtoPlayerLoadout.ability_cards:type_name -> protog.ProtoPlayerCardInfo
	39, // 49: protog.ProtoPlayerDeckCollection.decks:type_name -> protog.ProtoPlayerDeck
	40, // 50: protog.ProtoPlayerDeck.ability_card_slots:type_name -> protog.ProtoPlayerDeckSlot
	40, // 51: protog.ProtoPlayerDeck.sub_ability_card_slots:type_name -> protog.ProtoPlayerDeckSlot
	63, // 52: protog.ProtoRankingInfoSet.rankings:type_name -> protog.ProtoRankingInfoSet.RankingsEntry
	45, // 53: protog.ProtoRankingInfoSet.finished_events:type_name -> protog.ProtoRankingEventClaim
	44, // 54: protog.ProtoRankingInfo.player_ranking:type_name -> protog.ProtoPlayerRankSetDetails
	44, // 55: protog.ProtoRankingInfo.upper_rankings:type_name -> protog.ProtoPlayerRankSetDetails
	44, // 56: protog.ProtoRankingInfo.lower_rankings:type_name -> protog.ProtoPlayerRankSetDetails
	44, // 57: protog.ProtoRankingInfo.top_rankings:type_name -> protog.ProtoPlayerRankSetDetails
	64, // 58: protog.ProtoRankingInfo.rank_range_scores:type_name -> protog.ProtoRankingInfo.RankRangeScoresEntry
	36, // 59: protog.ProtoPlayerRankSetDetails.primary_loadout:type_name -> protog.ProtoPlayerLoadout
	43, // 60: protog.ProtoRankingEventClaim.ranking_info:type_name -> protog.ProtoRankingInfo
	49, // 61: protog.ProtoRegionMapData.region_maps:type_name -> protog.ProtoRegionMapInstance
	48, // 62: protog.ProtoRegionHeaderData.headers:type_name -> protog.ProtoRegionMapHeader
	50, // 63: protog.ProtoRegionMapInstance.node_data:type_name -> protog.ProtoRegionNodeData
	51, // 64: protog.ProtoRegionMapInstance.lock_data:type_name -> protog.ProtoRegionLockData
	65, // 65: protog.ProtoRegionMapInstance.job_type_defeats:type_name -> protog.ProtoRegionMapInstance.JobTypeDefeatsEntry
	66, // 66: protog.ProtoRegionMapInstance.pending_events:type_name -> protog.ProtoRegionMapInstance.PendingEventsEntry
	67, // 67: protog.ProtoRegionMapInstance.persisted_events:type_name -> protog.ProtoRegionMapInstance.PersistedEventsEntry
	55, // 68: protog.ProtoSkillPanelGroups.panel_pages:type_name -> protog.ProtoSkillPanelPage
	56, // 69: protog.ProtoSkillPanelPage.skill_panels:type_name -> protog.ProtoSkillPanel
	58, // 70: protog.ProtoWeaponInventory.weapon_list:type_name -> protog.ProtoWeaponInstance
	68, // 71: protog.ProtoWeaponInstance.auto_abilities:type_name -> protog.ProtoWeaponInstance.AutoAbilitiesEntry
	22, // 72: protog.ProtoItemData.LimitDataEntry.value:type_name -> protog.ProtoItemDropRecord
	54, // 73: protog.ProtoJobCardData.SkillPanelsEntry.value:type_name -> protog.ProtoSkillPanelGroups
	43, // 74: protog.ProtoRankingInfoSet.RankingsEntry.value:type_name -> protog.ProtoRankingInfo
	75, // [75:75] is the sub-list for method output_type
	75, // [75:75] is the sub-list for method input_type
	75, // [75:75] is the sub-list for extension type_name
	75, // [75:75] is the sub-list for extension extendee
	0,  // [0:75] is the sub-list for field type_name
}

func init() { file_data_proto_init() }
func file_data_proto_init() {
	if File_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoGameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardHistoryInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBattleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBattleStartData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDailyMissionInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleItemDrop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleCardDrop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleDropTableKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleItemDropResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleCardDropResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCardFilterSortSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCardFilterSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoLoginCampaignInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFairyCompanionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFairyCompanionInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFairyCompanionInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoItemData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoItemDropRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoItemInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoItemInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoItemValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoJobCardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoJobInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoJobCardInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoLastBattleInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoLastBattleResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoProgressInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCardPostBattleState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMailBox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMailBoxItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerLoadout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerDeckCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerDeck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerDeckSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerStamina); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRankingInfoSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRankingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerRankSetDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRankingEventClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionMapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionHeaderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionMapHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionMapInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionNodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionLockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionTeleportEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionEventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSkillPanelGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSkillPanelPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSkillPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoWeaponInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoWeaponInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_data_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_data_proto_msgTypes[28].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   68,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_proto_goTypes,
		DependencyIndexes: file_data_proto_depIdxs,
		EnumInfos:         file_data_proto_enumTypes,
		MessageInfos:      file_data_proto_msgTypes,
	}.Build()
	File_data_proto = out.File
	file_data_proto_rawDesc = nil
	file_data_proto_goTypes = nil
	file_data_proto_depIdxs = nil
}
