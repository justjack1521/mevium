// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: data.proto

package protog

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoMailBoxItem_ReferenceSource int32

const (
	ProtoMailBoxItem_NONE            ProtoMailBoxItem_ReferenceSource = 0
	ProtoMailBoxItem_ABILITY_CARD    ProtoMailBoxItem_ReferenceSource = 1
	ProtoMailBoxItem_ITEM            ProtoMailBoxItem_ReferenceSource = 2
	ProtoMailBoxItem_JOB_CARD        ProtoMailBoxItem_ReferenceSource = 3
	ProtoMailBoxItem_WEAPON          ProtoMailBoxItem_ReferenceSource = 4
	ProtoMailBoxItem_FAIRY_COMPANION ProtoMailBoxItem_ReferenceSource = 5
	ProtoMailBoxItem_MP_STAMP        ProtoMailBoxItem_ReferenceSource = 6
)

// Enum value maps for ProtoMailBoxItem_ReferenceSource.
var (
	ProtoMailBoxItem_ReferenceSource_name = map[int32]string{
		0: "NONE",
		1: "ABILITY_CARD",
		2: "ITEM",
		3: "JOB_CARD",
		4: "WEAPON",
		5: "FAIRY_COMPANION",
		6: "MP_STAMP",
	}
	ProtoMailBoxItem_ReferenceSource_value = map[string]int32{
		"NONE":            0,
		"ABILITY_CARD":    1,
		"ITEM":            2,
		"JOB_CARD":        3,
		"WEAPON":          4,
		"FAIRY_COMPANION": 5,
		"MP_STAMP":        6,
	}
)

func (x ProtoMailBoxItem_ReferenceSource) Enum() *ProtoMailBoxItem_ReferenceSource {
	p := new(ProtoMailBoxItem_ReferenceSource)
	*p = x
	return p
}

func (x ProtoMailBoxItem_ReferenceSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProtoMailBoxItem_ReferenceSource) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[0].Descriptor()
}

func (ProtoMailBoxItem_ReferenceSource) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[0]
}

func (x ProtoMailBoxItem_ReferenceSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProtoMailBoxItem_ReferenceSource.Descriptor instead.
func (ProtoMailBoxItem_ReferenceSource) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{24, 0}
}

type ProtoGameData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerName              string                          `protobuf:"bytes,1,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"`
	PlayerLevel             int32                           `protobuf:"varint,2,opt,name=PlayerLevel,proto3" json:"PlayerLevel,omitempty"`
	PlayerStamina           *ProtoPlayerStamina             `protobuf:"bytes,3,opt,name=PlayerStamina,proto3" json:"PlayerStamina,omitempty"`
	TotalAccumExp           uint64                          `protobuf:"varint,4,opt,name=TotalAccumExp,proto3" json:"TotalAccumExp,omitempty"`
	AccumEXP                uint64                          `protobuf:"varint,5,opt,name=AccumEXP,proto3" json:"AccumEXP,omitempty"`
	EXPBonus                float32                         `protobuf:"fixed32,6,opt,name=EXPBonus,proto3" json:"EXPBonus,omitempty"`
	PlayerComment           string                          `protobuf:"bytes,7,opt,name=PlayerComment,proto3" json:"PlayerComment,omitempty"`
	RentalCard              string                          `protobuf:"bytes,8,opt,name=RentalCard,proto3" json:"RentalCard,omitempty"`
	AbilityCardInventory    *ProtoAbilityCardInventory      `protobuf:"bytes,9,opt,name=AbilityCardInventory,proto3" json:"AbilityCardInventory,omitempty"`
	AbilityCardBank         *ProtoAbilityCardInventory      `protobuf:"bytes,10,opt,name=AbilityCardBank,proto3" json:"AbilityCardBank,omitempty"`
	AbilityCardHistory      *ProtoAbilityCardHistory        `protobuf:"bytes,11,opt,name=AbilityCardHistory,proto3" json:"AbilityCardHistory,omitempty"`
	ItemInventory           *ProtoItemInventory             `protobuf:"bytes,12,opt,name=ItemInventory,proto3" json:"ItemInventory,omitempty"`
	JobCardInventory        *ProtoJobInventory              `protobuf:"bytes,13,opt,name=JobCardInventory,proto3" json:"JobCardInventory,omitempty"`
	WeaponInventory         *ProtoWeaponInventory           `protobuf:"bytes,14,opt,name=WeaponInventory,proto3" json:"WeaponInventory,omitempty"`
	FairyCompanionInventory *ProtoFairyCompanionInventory   `protobuf:"bytes,15,opt,name=FairyCompanionInventory,proto3" json:"FairyCompanionInventory,omitempty"`
	CardFilterSortSets      []*ProtoCardFilterSortSet       `protobuf:"bytes,16,rep,name=CardFilterSortSets,proto3" json:"CardFilterSortSets,omitempty"`
	SinglePlayerDecks       *ProtoPlayerDeckCollection      `protobuf:"bytes,17,opt,name=SinglePlayerDecks,proto3" json:"SinglePlayerDecks,omitempty"`
	MultiPlayerDecks        *ProtoPlayerDeckCollection      `protobuf:"bytes,18,opt,name=MultiPlayerDecks,proto3" json:"MultiPlayerDecks,omitempty"`
	RegionMapDataCollection *ProtoRegionMapDataCollection   `protobuf:"bytes,19,opt,name=RegionMapDataCollection,proto3" json:"RegionMapDataCollection,omitempty"`
	LastBattleResults       *ProtoLastBattleResults         `protobuf:"bytes,20,opt,name=LastBattleResults,proto3" json:"LastBattleResults,omitempty"`
	FollowingList           []*ProtoPlayerInfo              `protobuf:"bytes,21,rep,name=FollowingList,proto3" json:"FollowingList,omitempty"`
	FollowerList            []*ProtoPlayerInfo              `protobuf:"bytes,22,rep,name=FollowerList,proto3" json:"FollowerList,omitempty"`
	DailyMissionInfo        *ProtoDailyMissionInfo          `protobuf:"bytes,24,opt,name=DailyMissionInfo,proto3" json:"DailyMissionInfo,omitempty"`
	DailyLoginCampaigns     *ProtoDailyLoginCampaignInfoSet `protobuf:"bytes,25,opt,name=DailyLoginCampaigns,proto3" json:"DailyLoginCampaigns,omitempty"`
	EventRankings           *ProtoRankingInfoSet            `protobuf:"bytes,26,opt,name=EventRankings,proto3" json:"EventRankings,omitempty"`
	Mailbox                 *ProtoMailBox                   `protobuf:"bytes,27,opt,name=Mailbox,proto3" json:"Mailbox,omitempty"`
}

func (x *ProtoGameData) Reset() {
	*x = ProtoGameData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoGameData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoGameData) ProtoMessage() {}

func (x *ProtoGameData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoGameData.ProtoReflect.Descriptor instead.
func (*ProtoGameData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoGameData) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoGameData) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *ProtoGameData) GetPlayerStamina() *ProtoPlayerStamina {
	if x != nil {
		return x.PlayerStamina
	}
	return nil
}

func (x *ProtoGameData) GetTotalAccumExp() uint64 {
	if x != nil {
		return x.TotalAccumExp
	}
	return 0
}

func (x *ProtoGameData) GetAccumEXP() uint64 {
	if x != nil {
		return x.AccumEXP
	}
	return 0
}

func (x *ProtoGameData) GetEXPBonus() float32 {
	if x != nil {
		return x.EXPBonus
	}
	return 0
}

func (x *ProtoGameData) GetPlayerComment() string {
	if x != nil {
		return x.PlayerComment
	}
	return ""
}

func (x *ProtoGameData) GetRentalCard() string {
	if x != nil {
		return x.RentalCard
	}
	return ""
}

func (x *ProtoGameData) GetAbilityCardInventory() *ProtoAbilityCardInventory {
	if x != nil {
		return x.AbilityCardInventory
	}
	return nil
}

func (x *ProtoGameData) GetAbilityCardBank() *ProtoAbilityCardInventory {
	if x != nil {
		return x.AbilityCardBank
	}
	return nil
}

func (x *ProtoGameData) GetAbilityCardHistory() *ProtoAbilityCardHistory {
	if x != nil {
		return x.AbilityCardHistory
	}
	return nil
}

func (x *ProtoGameData) GetItemInventory() *ProtoItemInventory {
	if x != nil {
		return x.ItemInventory
	}
	return nil
}

func (x *ProtoGameData) GetJobCardInventory() *ProtoJobInventory {
	if x != nil {
		return x.JobCardInventory
	}
	return nil
}

func (x *ProtoGameData) GetWeaponInventory() *ProtoWeaponInventory {
	if x != nil {
		return x.WeaponInventory
	}
	return nil
}

func (x *ProtoGameData) GetFairyCompanionInventory() *ProtoFairyCompanionInventory {
	if x != nil {
		return x.FairyCompanionInventory
	}
	return nil
}

func (x *ProtoGameData) GetCardFilterSortSets() []*ProtoCardFilterSortSet {
	if x != nil {
		return x.CardFilterSortSets
	}
	return nil
}

func (x *ProtoGameData) GetSinglePlayerDecks() *ProtoPlayerDeckCollection {
	if x != nil {
		return x.SinglePlayerDecks
	}
	return nil
}

func (x *ProtoGameData) GetMultiPlayerDecks() *ProtoPlayerDeckCollection {
	if x != nil {
		return x.MultiPlayerDecks
	}
	return nil
}

func (x *ProtoGameData) GetRegionMapDataCollection() *ProtoRegionMapDataCollection {
	if x != nil {
		return x.RegionMapDataCollection
	}
	return nil
}

func (x *ProtoGameData) GetLastBattleResults() *ProtoLastBattleResults {
	if x != nil {
		return x.LastBattleResults
	}
	return nil
}

func (x *ProtoGameData) GetFollowingList() []*ProtoPlayerInfo {
	if x != nil {
		return x.FollowingList
	}
	return nil
}

func (x *ProtoGameData) GetFollowerList() []*ProtoPlayerInfo {
	if x != nil {
		return x.FollowerList
	}
	return nil
}

func (x *ProtoGameData) GetDailyMissionInfo() *ProtoDailyMissionInfo {
	if x != nil {
		return x.DailyMissionInfo
	}
	return nil
}

func (x *ProtoGameData) GetDailyLoginCampaigns() *ProtoDailyLoginCampaignInfoSet {
	if x != nil {
		return x.DailyLoginCampaigns
	}
	return nil
}

func (x *ProtoGameData) GetEventRankings() *ProtoRankingInfoSet {
	if x != nil {
		return x.EventRankings
	}
	return nil
}

func (x *ProtoGameData) GetMailbox() *ProtoMailBox {
	if x != nil {
		return x.Mailbox
	}
	return nil
}

type ProtoAbilityCardHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardList []*ProtoAbilityCardHistoryInstance `protobuf:"bytes,1,rep,name=CardList,proto3" json:"CardList,omitempty"`
}

func (x *ProtoAbilityCardHistory) Reset() {
	*x = ProtoAbilityCardHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardHistory) ProtoMessage() {}

func (x *ProtoAbilityCardHistory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardHistory.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardHistory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoAbilityCardHistory) GetCardList() []*ProtoAbilityCardHistoryInstance {
	if x != nil {
		return x.CardList
	}
	return nil
}

type ProtoAbilityCardHistoryInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId         string `protobuf:"bytes,1,opt,name=SysId,proto3" json:"SysId,omitempty"`
	AbilityCardId string `protobuf:"bytes,2,opt,name=AbilityCardId,proto3" json:"AbilityCardId,omitempty"`
	AutoSell      bool   `protobuf:"varint,3,opt,name=AutoSell,proto3" json:"AutoSell,omitempty"`
	CreatedAt     int64  `protobuf:"varint,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *ProtoAbilityCardHistoryInstance) Reset() {
	*x = ProtoAbilityCardHistoryInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardHistoryInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardHistoryInstance) ProtoMessage() {}

func (x *ProtoAbilityCardHistoryInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardHistoryInstance.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardHistoryInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoAbilityCardHistoryInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoAbilityCardHistoryInstance) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *ProtoAbilityCardHistoryInstance) GetAutoSell() bool {
	if x != nil {
		return x.AutoSell
	}
	return false
}

func (x *ProtoAbilityCardHistoryInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProtoAbilityCardInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxSlots int32                       `protobuf:"varint,1,opt,name=MaxSlots,proto3" json:"MaxSlots,omitempty"`
	CardList []*ProtoAbilityCardInstance `protobuf:"bytes,2,rep,name=CardList,proto3" json:"CardList,omitempty"`
}

func (x *ProtoAbilityCardInventory) Reset() {
	*x = ProtoAbilityCardInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardInventory) ProtoMessage() {}

func (x *ProtoAbilityCardInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardInventory.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoAbilityCardInventory) GetMaxSlots() int32 {
	if x != nil {
		return x.MaxSlots
	}
	return 0
}

func (x *ProtoAbilityCardInventory) GetCardList() []*ProtoAbilityCardInstance {
	if x != nil {
		return x.CardList
	}
	return nil
}

type ProtoAbilityCardInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId            string `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	CardLevel        int32  `protobuf:"varint,2,opt,name=card_level,json=cardLevel,proto3" json:"card_level,omitempty"`
	AccumExp         uint64 `protobuf:"varint,3,opt,name=accum_exp,json=accumExp,proto3" json:"accum_exp,omitempty"`
	CardLock         bool   `protobuf:"varint,4,opt,name=card_lock,json=cardLock,proto3" json:"card_lock,omitempty"`
	AbilityLevel     int32  `protobuf:"varint,5,opt,name=ability_level,json=abilityLevel,proto3" json:"ability_level,omitempty"`
	SeedUnlock       int32  `protobuf:"varint,6,opt,name=seed_unlock,json=seedUnlock,proto3" json:"seed_unlock,omitempty"`
	AbilityCardId    string `protobuf:"bytes,7,opt,name=ability_card_id,json=abilityCardId,proto3" json:"ability_card_id,omitempty"`
	CreatedAt        int64  `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	TotalAccumExp    uint64 `protobuf:"varint,9,opt,name=total_accum_exp,json=totalAccumExp,proto3" json:"total_accum_exp,omitempty"`
	ExtraSkillUnlock int32  `protobuf:"varint,10,opt,name=extra_skill_unlock,json=extraSkillUnlock,proto3" json:"extra_skill_unlock,omitempty"`
	OverBoostLevel   int32  `protobuf:"varint,11,opt,name=over_boost_level,json=overBoostLevel,proto3" json:"over_boost_level,omitempty"`
}

func (x *ProtoAbilityCardInstance) Reset() {
	*x = ProtoAbilityCardInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardInstance) ProtoMessage() {}

func (x *ProtoAbilityCardInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardInstance.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoAbilityCardInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoAbilityCardInstance) GetCardLevel() int32 {
	if x != nil {
		return x.CardLevel
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetAccumExp() uint64 {
	if x != nil {
		return x.AccumExp
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetCardLock() bool {
	if x != nil {
		return x.CardLock
	}
	return false
}

func (x *ProtoAbilityCardInstance) GetAbilityLevel() int32 {
	if x != nil {
		return x.AbilityLevel
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetSeedUnlock() int32 {
	if x != nil {
		return x.SeedUnlock
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *ProtoAbilityCardInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetTotalAccumExp() uint64 {
	if x != nil {
		return x.TotalAccumExp
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetExtraSkillUnlock() int32 {
	if x != nil {
		return x.ExtraSkillUnlock
	}
	return 0
}

func (x *ProtoAbilityCardInstance) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

type ProtoBattleStartData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionMap     string            `protobuf:"bytes,1,opt,name=region_map,json=regionMap,proto3" json:"region_map,omitempty"`
	Index         int32             `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	HardMode      bool              `protobuf:"varint,3,opt,name=hard_mode,json=hardMode,proto3" json:"hard_mode,omitempty"`
	DeckIndex     int32             `protobuf:"varint,4,opt,name=deck_index,json=deckIndex,proto3" json:"deck_index,omitempty"`
	ItemDropTable []*BattleItemDrop `protobuf:"bytes,5,rep,name=ItemDropTable,proto3" json:"ItemDropTable,omitempty"`
	CreatedAt     int64             `protobuf:"varint,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ProtoBattleStartData) Reset() {
	*x = ProtoBattleStartData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoBattleStartData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoBattleStartData) ProtoMessage() {}

func (x *ProtoBattleStartData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoBattleStartData.ProtoReflect.Descriptor instead.
func (*ProtoBattleStartData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoBattleStartData) GetRegionMap() string {
	if x != nil {
		return x.RegionMap
	}
	return ""
}

func (x *ProtoBattleStartData) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoBattleStartData) GetHardMode() bool {
	if x != nil {
		return x.HardMode
	}
	return false
}

func (x *ProtoBattleStartData) GetDeckIndex() int32 {
	if x != nil {
		return x.DeckIndex
	}
	return 0
}

func (x *ProtoBattleStartData) GetItemDropTable() []*BattleItemDrop {
	if x != nil {
		return x.ItemDropTable
	}
	return nil
}

func (x *ProtoBattleStartData) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProtoDailyMissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          string                `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Progress    int32                 `protobuf:"varint,2,opt,name=Progress,proto3" json:"Progress,omitempty"`
	Confirmed   bool                  `protobuf:"varint,3,opt,name=Confirmed,proto3" json:"Confirmed,omitempty"`
	Claimed     bool                  `protobuf:"varint,4,opt,name=Claimed,proto3" json:"Claimed,omitempty"`
	ReceivedAt  int64                 `protobuf:"varint,5,opt,name=ReceivedAt,proto3" json:"ReceivedAt,omitempty"`
	ItemRewards []*ProtoItemValuePair `protobuf:"bytes,6,rep,name=ItemRewards,proto3" json:"ItemRewards,omitempty"`
}

func (x *ProtoDailyMissionInfo) Reset() {
	*x = ProtoDailyMissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDailyMissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDailyMissionInfo) ProtoMessage() {}

func (x *ProtoDailyMissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDailyMissionInfo.ProtoReflect.Descriptor instead.
func (*ProtoDailyMissionInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoDailyMissionInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ProtoDailyMissionInfo) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ProtoDailyMissionInfo) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *ProtoDailyMissionInfo) GetClaimed() bool {
	if x != nil {
		return x.Claimed
	}
	return false
}

func (x *ProtoDailyMissionInfo) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

func (x *ProtoDailyMissionInfo) GetItemRewards() []*ProtoItemValuePair {
	if x != nil {
		return x.ItemRewards
	}
	return nil
}

type BattleItemDrop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  *BattleDropTableKey   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Drop *BattleItemDropResult `protobuf:"bytes,2,opt,name=drop,proto3" json:"drop,omitempty"`
}

func (x *BattleItemDrop) Reset() {
	*x = BattleItemDrop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleItemDrop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleItemDrop) ProtoMessage() {}

func (x *BattleItemDrop) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleItemDrop.ProtoReflect.Descriptor instead.
func (*BattleItemDrop) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{7}
}

func (x *BattleItemDrop) GetKey() *BattleDropTableKey {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *BattleItemDrop) GetDrop() *BattleItemDropResult {
	if x != nil {
		return x.Drop
	}
	return nil
}

type BattleDropTableKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FiendId    string `protobuf:"bytes,1,opt,name=fiend_id,json=fiendId,proto3" json:"fiend_id,omitempty"`
	FiendIndex int32  `protobuf:"varint,2,opt,name=fiend_index,json=fiendIndex,proto3" json:"fiend_index,omitempty"`
}

func (x *BattleDropTableKey) Reset() {
	*x = BattleDropTableKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleDropTableKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleDropTableKey) ProtoMessage() {}

func (x *BattleDropTableKey) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleDropTableKey.ProtoReflect.Descriptor instead.
func (*BattleDropTableKey) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{8}
}

func (x *BattleDropTableKey) GetFiendId() string {
	if x != nil {
		return x.FiendId
	}
	return ""
}

func (x *BattleDropTableKey) GetFiendIndex() int32 {
	if x != nil {
		return x.FiendIndex
	}
	return 0
}

type BattleItemDropResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId   string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Quantity int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
}

func (x *BattleItemDropResult) Reset() {
	*x = BattleItemDropResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BattleItemDropResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattleItemDropResult) ProtoMessage() {}

func (x *BattleItemDropResult) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattleItemDropResult.ProtoReflect.Descriptor instead.
func (*BattleItemDropResult) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{9}
}

func (x *BattleItemDropResult) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *BattleItemDropResult) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ProtoCardFilterSortSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	View int32                  `protobuf:"varint,1,opt,name=View,proto3" json:"View,omitempty"`
	Sets []*ProtoCardFilterSort `protobuf:"bytes,2,rep,name=Sets,proto3" json:"Sets,omitempty"`
}

func (x *ProtoCardFilterSortSet) Reset() {
	*x = ProtoCardFilterSortSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCardFilterSortSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCardFilterSortSet) ProtoMessage() {}

func (x *ProtoCardFilterSortSet) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCardFilterSortSet.ProtoReflect.Descriptor instead.
func (*ProtoCardFilterSortSet) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoCardFilterSortSet) GetView() int32 {
	if x != nil {
		return x.View
	}
	return 0
}

func (x *ProtoCardFilterSortSet) GetSets() []*ProtoCardFilterSort {
	if x != nil {
		return x.Sets
	}
	return nil
}

type ProtoCardFilterSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index          int32   `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	CardTypes      []int32 `protobuf:"varint,2,rep,packed,name=CardTypes,proto3" json:"CardTypes,omitempty"`
	CardCategories []int32 `protobuf:"varint,3,rep,packed,name=CardCategories,proto3" json:"CardCategories,omitempty"`
	SpecialFilters []int32 `protobuf:"varint,4,rep,packed,name=SpecialFilters,proto3" json:"SpecialFilters,omitempty"`
	SortSelectors  []int32 `protobuf:"varint,5,rep,packed,name=SortSelectors,proto3" json:"SortSelectors,omitempty"`
	SortDescending bool    `protobuf:"varint,6,opt,name=SortDescending,proto3" json:"SortDescending,omitempty"`
}

func (x *ProtoCardFilterSort) Reset() {
	*x = ProtoCardFilterSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCardFilterSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCardFilterSort) ProtoMessage() {}

func (x *ProtoCardFilterSort) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCardFilterSort.ProtoReflect.Descriptor instead.
func (*ProtoCardFilterSort) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{11}
}

func (x *ProtoCardFilterSort) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoCardFilterSort) GetCardTypes() []int32 {
	if x != nil {
		return x.CardTypes
	}
	return nil
}

func (x *ProtoCardFilterSort) GetCardCategories() []int32 {
	if x != nil {
		return x.CardCategories
	}
	return nil
}

func (x *ProtoCardFilterSort) GetSpecialFilters() []int32 {
	if x != nil {
		return x.SpecialFilters
	}
	return nil
}

func (x *ProtoCardFilterSort) GetSortSelectors() []int32 {
	if x != nil {
		return x.SortSelectors
	}
	return nil
}

func (x *ProtoCardFilterSort) GetSortDescending() bool {
	if x != nil {
		return x.SortDescending
	}
	return false
}

type ProtoDailyLoginCampaignInfoSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastReceived       int64                        `protobuf:"varint,1,opt,name=LastReceived,proto3" json:"LastReceived,omitempty"`
	StandardLoginBonus *ProtoDailyLoginCampaignInfo `protobuf:"bytes,2,opt,name=StandardLoginBonus,proto3" json:"StandardLoginBonus,omitempty"`
	SpecialLoginBonus  *ProtoDailyLoginCampaignInfo `protobuf:"bytes,3,opt,name=SpecialLoginBonus,proto3" json:"SpecialLoginBonus,omitempty"`
}

func (x *ProtoDailyLoginCampaignInfoSet) Reset() {
	*x = ProtoDailyLoginCampaignInfoSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDailyLoginCampaignInfoSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDailyLoginCampaignInfoSet) ProtoMessage() {}

func (x *ProtoDailyLoginCampaignInfoSet) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDailyLoginCampaignInfoSet.ProtoReflect.Descriptor instead.
func (*ProtoDailyLoginCampaignInfoSet) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{12}
}

func (x *ProtoDailyLoginCampaignInfoSet) GetLastReceived() int64 {
	if x != nil {
		return x.LastReceived
	}
	return 0
}

func (x *ProtoDailyLoginCampaignInfoSet) GetStandardLoginBonus() *ProtoDailyLoginCampaignInfo {
	if x != nil {
		return x.StandardLoginBonus
	}
	return nil
}

func (x *ProtoDailyLoginCampaignInfoSet) GetSpecialLoginBonus() *ProtoDailyLoginCampaignInfo {
	if x != nil {
		return x.SpecialLoginBonus
	}
	return nil
}

type ProtoDailyLoginCampaignInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claimed     []bool `protobuf:"varint,1,rep,packed,name=Claimed,proto3" json:"Claimed,omitempty"`
	LastClaimed int32  `protobuf:"varint,2,opt,name=LastClaimed,proto3" json:"LastClaimed,omitempty"`
	ID          string `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *ProtoDailyLoginCampaignInfo) Reset() {
	*x = ProtoDailyLoginCampaignInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoDailyLoginCampaignInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoDailyLoginCampaignInfo) ProtoMessage() {}

func (x *ProtoDailyLoginCampaignInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoDailyLoginCampaignInfo.ProtoReflect.Descriptor instead.
func (*ProtoDailyLoginCampaignInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{13}
}

func (x *ProtoDailyLoginCampaignInfo) GetClaimed() []bool {
	if x != nil {
		return x.Claimed
	}
	return nil
}

func (x *ProtoDailyLoginCampaignInfo) GetLastClaimed() int32 {
	if x != nil {
		return x.LastClaimed
	}
	return 0
}

func (x *ProtoDailyLoginCampaignInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

type ProtoFairyCompanionInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompanionList []*ProtoFairyCompanionInstance `protobuf:"bytes,2,rep,name=CompanionList,proto3" json:"CompanionList,omitempty"`
}

func (x *ProtoFairyCompanionInventory) Reset() {
	*x = ProtoFairyCompanionInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFairyCompanionInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFairyCompanionInventory) ProtoMessage() {}

func (x *ProtoFairyCompanionInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFairyCompanionInventory.ProtoReflect.Descriptor instead.
func (*ProtoFairyCompanionInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{14}
}

func (x *ProtoFairyCompanionInventory) GetCompanionList() []*ProtoFairyCompanionInstance {
	if x != nil {
		return x.CompanionList
	}
	return nil
}

type ProtoFairyCompanionInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId           string `protobuf:"bytes,1,opt,name=SysId,proto3" json:"SysId,omitempty"`
	BaseCompanionId string `protobuf:"bytes,2,opt,name=BaseCompanionId,proto3" json:"BaseCompanionId,omitempty"`
	CreatedAt       int64  `protobuf:"varint,3,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
}

func (x *ProtoFairyCompanionInstance) Reset() {
	*x = ProtoFairyCompanionInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoFairyCompanionInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoFairyCompanionInstance) ProtoMessage() {}

func (x *ProtoFairyCompanionInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoFairyCompanionInstance.ProtoReflect.Descriptor instead.
func (*ProtoFairyCompanionInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{15}
}

func (x *ProtoFairyCompanionInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoFairyCompanionInstance) GetBaseCompanionId() string {
	if x != nil {
		return x.BaseCompanionId
	}
	return ""
}

func (x *ProtoFairyCompanionInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProtoItemInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemList []*ProtoItemInstance `protobuf:"bytes,1,rep,name=ItemList,proto3" json:"ItemList,omitempty"`
}

func (x *ProtoItemInventory) Reset() {
	*x = ProtoItemInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoItemInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoItemInventory) ProtoMessage() {}

func (x *ProtoItemInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoItemInventory.ProtoReflect.Descriptor instead.
func (*ProtoItemInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{16}
}

func (x *ProtoItemInventory) GetItemList() []*ProtoItemInstance {
	if x != nil {
		return x.ItemList
	}
	return nil
}

type ProtoItemInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId     string `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	Quantity  int32  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ItemId    string `protobuf:"bytes,3,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	CreatedAt int64  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *ProtoItemInstance) Reset() {
	*x = ProtoItemInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoItemInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoItemInstance) ProtoMessage() {}

func (x *ProtoItemInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoItemInstance.ProtoReflect.Descriptor instead.
func (*ProtoItemInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{17}
}

func (x *ProtoItemInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoItemInstance) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProtoItemInstance) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ProtoItemInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type ProtoItemValuePair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Value  int32  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *ProtoItemValuePair) Reset() {
	*x = ProtoItemValuePair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoItemValuePair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoItemValuePair) ProtoMessage() {}

func (x *ProtoItemValuePair) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoItemValuePair.ProtoReflect.Descriptor instead.
func (*ProtoItemValuePair) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{18}
}

func (x *ProtoItemValuePair) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ProtoItemValuePair) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ProtoJobInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobList []*ProtoJobCardInstance `protobuf:"bytes,1,rep,name=JobList,proto3" json:"JobList,omitempty"`
}

func (x *ProtoJobInventory) Reset() {
	*x = ProtoJobInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoJobInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoJobInventory) ProtoMessage() {}

func (x *ProtoJobInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoJobInventory.ProtoReflect.Descriptor instead.
func (*ProtoJobInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{19}
}

func (x *ProtoJobInventory) GetJobList() []*ProtoJobCardInstance {
	if x != nil {
		return x.JobList
	}
	return nil
}

type ProtoJobCardInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId             string                 `protobuf:"bytes,1,opt,name=SysId,proto3" json:"SysId,omitempty"`
	SubJobUnlock      int32                  `protobuf:"varint,2,opt,name=SubJobUnlock,proto3" json:"SubJobUnlock,omitempty"`
	OverBoostLevel    int32                  `protobuf:"varint,3,opt,name=OverBoostLevel,proto3" json:"OverBoostLevel,omitempty"`
	SkillPanelUnlocks *ProtoSkillPanelGroups `protobuf:"bytes,4,opt,name=SkillPanelUnlocks,proto3" json:"SkillPanelUnlocks,omitempty"`
	BaseJobId         string                 `protobuf:"bytes,5,opt,name=BaseJobId,proto3" json:"BaseJobId,omitempty"`
	CreatedAt         int64                  `protobuf:"varint,6,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	WeaponUnlock      int32                  `protobuf:"varint,7,opt,name=WeaponUnlock,proto3" json:"WeaponUnlock,omitempty"`
	HPStatMod         int32                  `protobuf:"varint,8,opt,name=HPStatMod,proto3" json:"HPStatMod,omitempty"`
	AttackStatMod     int32                  `protobuf:"varint,9,opt,name=AttackStatMod,proto3" json:"AttackStatMod,omitempty"`
	BreakStatMod      int32                  `protobuf:"varint,10,opt,name=BreakStatMod,proto3" json:"BreakStatMod,omitempty"`
	MagicStatMod      int32                  `protobuf:"varint,11,opt,name=MagicStatMod,proto3" json:"MagicStatMod,omitempty"`
	SpeedStatMod      int32                  `protobuf:"varint,12,opt,name=SpeedStatMod,proto3" json:"SpeedStatMod,omitempty"`
	DefenseStatMod    int32                  `protobuf:"varint,14,opt,name=DefenseStatMod,proto3" json:"DefenseStatMod,omitempty"`
	CritChanceStatMod int32                  `protobuf:"varint,15,opt,name=CritChanceStatMod,proto3" json:"CritChanceStatMod,omitempty"`
	UltimateBoost     int32                  `protobuf:"varint,18,opt,name=UltimateBoost,proto3" json:"UltimateBoost,omitempty"`
	AutoAbilities     map[string]int32       `protobuf:"bytes,19,rep,name=AutoAbilities,proto3" json:"AutoAbilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoJobCardInstance) Reset() {
	*x = ProtoJobCardInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoJobCardInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoJobCardInstance) ProtoMessage() {}

func (x *ProtoJobCardInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoJobCardInstance.ProtoReflect.Descriptor instead.
func (*ProtoJobCardInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{20}
}

func (x *ProtoJobCardInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoJobCardInstance) GetSubJobUnlock() int32 {
	if x != nil {
		return x.SubJobUnlock
	}
	return 0
}

func (x *ProtoJobCardInstance) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

func (x *ProtoJobCardInstance) GetSkillPanelUnlocks() *ProtoSkillPanelGroups {
	if x != nil {
		return x.SkillPanelUnlocks
	}
	return nil
}

func (x *ProtoJobCardInstance) GetBaseJobId() string {
	if x != nil {
		return x.BaseJobId
	}
	return ""
}

func (x *ProtoJobCardInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProtoJobCardInstance) GetWeaponUnlock() int32 {
	if x != nil {
		return x.WeaponUnlock
	}
	return 0
}

func (x *ProtoJobCardInstance) GetHPStatMod() int32 {
	if x != nil {
		return x.HPStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetAttackStatMod() int32 {
	if x != nil {
		return x.AttackStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetBreakStatMod() int32 {
	if x != nil {
		return x.BreakStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetMagicStatMod() int32 {
	if x != nil {
		return x.MagicStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetSpeedStatMod() int32 {
	if x != nil {
		return x.SpeedStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetDefenseStatMod() int32 {
	if x != nil {
		return x.DefenseStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetCritChanceStatMod() int32 {
	if x != nil {
		return x.CritChanceStatMod
	}
	return 0
}

func (x *ProtoJobCardInstance) GetUltimateBoost() int32 {
	if x != nil {
		return x.UltimateBoost
	}
	return 0
}

func (x *ProtoJobCardInstance) GetAutoAbilities() map[string]int32 {
	if x != nil {
		return x.AutoAbilities
	}
	return nil
}

type ProtoLastBattleResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalEXP           int32                       `protobuf:"varint,1,opt,name=TotalEXP,proto3" json:"TotalEXP,omitempty"`
	GoldReward         int32                       `protobuf:"varint,2,opt,name=GoldReward,proto3" json:"GoldReward,omitempty"`
	PreviousWeeklyRank int64                       `protobuf:"varint,4,opt,name=PreviousWeeklyRank,proto3" json:"PreviousWeeklyRank,omitempty"`
	NewWeeklyHighScore bool                        `protobuf:"varint,3,opt,name=NewWeeklyHighScore,proto3" json:"NewWeeklyHighScore,omitempty"`
	Score              uint64                      `protobuf:"varint,6,opt,name=Score,proto3" json:"Score,omitempty"`
	PreviousLevel      uint32                      `protobuf:"varint,7,opt,name=PreviousLevel,proto3" json:"PreviousLevel,omitempty"`
	PreviousAccumEXP   uint64                      `protobuf:"varint,8,opt,name=PreviousAccumEXP,proto3" json:"PreviousAccumEXP,omitempty"`
	CardStates         []*ProtoCardPostBattleState `protobuf:"bytes,9,rep,name=CardStates,proto3" json:"CardStates,omitempty"`
	SkillSeedReward    []*ProtoItemValuePair       `protobuf:"bytes,10,rep,name=SkillSeedReward,proto3" json:"SkillSeedReward,omitempty"`
	PreviousMaxStamina uint32                      `protobuf:"varint,11,opt,name=PreviousMaxStamina,proto3" json:"PreviousMaxStamina,omitempty"`
	PreviousEXPBonus   float32                     `protobuf:"fixed32,12,opt,name=PreviousEXPBonus,proto3" json:"PreviousEXPBonus,omitempty"`
	PreviousDeckCount  int32                       `protobuf:"varint,13,opt,name=PreviousDeckCount,proto3" json:"PreviousDeckCount,omitempty"`
}

func (x *ProtoLastBattleResults) Reset() {
	*x = ProtoLastBattleResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoLastBattleResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoLastBattleResults) ProtoMessage() {}

func (x *ProtoLastBattleResults) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoLastBattleResults.ProtoReflect.Descriptor instead.
func (*ProtoLastBattleResults) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{21}
}

func (x *ProtoLastBattleResults) GetTotalEXP() int32 {
	if x != nil {
		return x.TotalEXP
	}
	return 0
}

func (x *ProtoLastBattleResults) GetGoldReward() int32 {
	if x != nil {
		return x.GoldReward
	}
	return 0
}

func (x *ProtoLastBattleResults) GetPreviousWeeklyRank() int64 {
	if x != nil {
		return x.PreviousWeeklyRank
	}
	return 0
}

func (x *ProtoLastBattleResults) GetNewWeeklyHighScore() bool {
	if x != nil {
		return x.NewWeeklyHighScore
	}
	return false
}

func (x *ProtoLastBattleResults) GetScore() uint64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProtoLastBattleResults) GetPreviousLevel() uint32 {
	if x != nil {
		return x.PreviousLevel
	}
	return 0
}

func (x *ProtoLastBattleResults) GetPreviousAccumEXP() uint64 {
	if x != nil {
		return x.PreviousAccumEXP
	}
	return 0
}

func (x *ProtoLastBattleResults) GetCardStates() []*ProtoCardPostBattleState {
	if x != nil {
		return x.CardStates
	}
	return nil
}

func (x *ProtoLastBattleResults) GetSkillSeedReward() []*ProtoItemValuePair {
	if x != nil {
		return x.SkillSeedReward
	}
	return nil
}

func (x *ProtoLastBattleResults) GetPreviousMaxStamina() uint32 {
	if x != nil {
		return x.PreviousMaxStamina
	}
	return 0
}

func (x *ProtoLastBattleResults) GetPreviousEXPBonus() float32 {
	if x != nil {
		return x.PreviousEXPBonus
	}
	return 0
}

func (x *ProtoLastBattleResults) GetPreviousDeckCount() int32 {
	if x != nil {
		return x.PreviousDeckCount
	}
	return 0
}

type ProtoCardPostBattleState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InstanceId       string `protobuf:"bytes,1,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	SlotIndex        int32  `protobuf:"varint,2,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
	PreviousLevel    int32  `protobuf:"varint,3,opt,name=previous_level,json=previousLevel,proto3" json:"previous_level,omitempty"`
	PreviousAccumExp uint64 `protobuf:"varint,4,opt,name=previous_accum_exp,json=previousAccumExp,proto3" json:"previous_accum_exp,omitempty"`
	LevelUps         int32  `protobuf:"varint,5,opt,name=level_ups,json=levelUps,proto3" json:"level_ups,omitempty"`
	TotalExp         uint64 `protobuf:"varint,6,opt,name=total_exp,json=totalExp,proto3" json:"total_exp,omitempty"`
	AccumExp         uint64 `protobuf:"varint,7,opt,name=accum_exp,json=accumExp,proto3" json:"accum_exp,omitempty"`
}

func (x *ProtoCardPostBattleState) Reset() {
	*x = ProtoCardPostBattleState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoCardPostBattleState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoCardPostBattleState) ProtoMessage() {}

func (x *ProtoCardPostBattleState) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoCardPostBattleState.ProtoReflect.Descriptor instead.
func (*ProtoCardPostBattleState) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{22}
}

func (x *ProtoCardPostBattleState) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ProtoCardPostBattleState) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetPreviousLevel() int32 {
	if x != nil {
		return x.PreviousLevel
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetPreviousAccumExp() uint64 {
	if x != nil {
		return x.PreviousAccumExp
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetLevelUps() int32 {
	if x != nil {
		return x.LevelUps
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetTotalExp() uint64 {
	if x != nil {
		return x.TotalExp
	}
	return 0
}

func (x *ProtoCardPostBattleState) GetAccumExp() uint64 {
	if x != nil {
		return x.AccumExp
	}
	return 0
}

type ProtoMailBox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items    []*ProtoMailBoxItem `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
	MaxItems int32               `protobuf:"varint,2,opt,name=MaxItems,proto3" json:"MaxItems,omitempty"`
}

func (x *ProtoMailBox) Reset() {
	*x = ProtoMailBox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMailBox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMailBox) ProtoMessage() {}

func (x *ProtoMailBox) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMailBox.ProtoReflect.Descriptor instead.
func (*ProtoMailBox) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{23}
}

func (x *ProtoMailBox) GetItems() []*ProtoMailBoxItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ProtoMailBox) GetMaxItems() int32 {
	if x != nil {
		return x.MaxItems
	}
	return 0
}

type ProtoMailBoxItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReferenceId string                           `protobuf:"bytes,1,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`
	Source      ProtoMailBoxItem_ReferenceSource `protobuf:"varint,2,opt,name=source,proto3,enum=protog.ProtoMailBoxItem_ReferenceSource" json:"source,omitempty"`
	Quantity    int32                            `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	ReceivedAt  int64                            `protobuf:"varint,4,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
}

func (x *ProtoMailBoxItem) Reset() {
	*x = ProtoMailBoxItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoMailBoxItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoMailBoxItem) ProtoMessage() {}

func (x *ProtoMailBoxItem) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoMailBoxItem.ProtoReflect.Descriptor instead.
func (*ProtoMailBoxItem) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{24}
}

func (x *ProtoMailBoxItem) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ProtoMailBoxItem) GetSource() ProtoMailBoxItem_ReferenceSource {
	if x != nil {
		return x.Source
	}
	return ProtoMailBoxItem_NONE
}

func (x *ProtoMailBoxItem) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProtoMailBoxItem) GetReceivedAt() int64 {
	if x != nil {
		return x.ReceivedAt
	}
	return 0
}

type ProtoPlayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId      string               `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName    string               `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerComment string               `protobuf:"bytes,3,opt,name=player_comment,json=playerComment,proto3" json:"player_comment,omitempty"`
	PlayerLevel   int32                `protobuf:"varint,4,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	LastOnline    int64                `protobuf:"varint,5,opt,name=last_online,json=lastOnline,proto3" json:"last_online,omitempty"`
	JobCardId     string               `protobuf:"bytes,6,opt,name=job_card_id,json=jobCardId,proto3" json:"job_card_id,omitempty"`
	SubJobIndex   int32                `protobuf:"varint,7,opt,name=sub_job_index,json=subJobIndex,proto3" json:"sub_job_index,omitempty"`
	CompanionId   string               `protobuf:"bytes,8,opt,name=companion_id,json=companionId,proto3" json:"companion_id,omitempty"`
	RentalCard    *ProtoPlayerCardInfo `protobuf:"bytes,9,opt,name=rental_card,json=rentalCard,proto3" json:"rental_card,omitempty"`
}

func (x *ProtoPlayerInfo) Reset() {
	*x = ProtoPlayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerInfo) ProtoMessage() {}

func (x *ProtoPlayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerInfo.ProtoReflect.Descriptor instead.
func (*ProtoPlayerInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{25}
}

func (x *ProtoPlayerInfo) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ProtoPlayerInfo) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoPlayerInfo) GetPlayerComment() string {
	if x != nil {
		return x.PlayerComment
	}
	return ""
}

func (x *ProtoPlayerInfo) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *ProtoPlayerInfo) GetLastOnline() int64 {
	if x != nil {
		return x.LastOnline
	}
	return 0
}

func (x *ProtoPlayerInfo) GetJobCardId() string {
	if x != nil {
		return x.JobCardId
	}
	return ""
}

func (x *ProtoPlayerInfo) GetSubJobIndex() int32 {
	if x != nil {
		return x.SubJobIndex
	}
	return 0
}

func (x *ProtoPlayerInfo) GetCompanionId() string {
	if x != nil {
		return x.CompanionId
	}
	return ""
}

func (x *ProtoPlayerInfo) GetRentalCard() *ProtoPlayerCardInfo {
	if x != nil {
		return x.RentalCard
	}
	return nil
}

type ProtoPlayerCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityCardId    string `protobuf:"bytes,1,opt,name=ability_card_id,json=abilityCardId,proto3" json:"ability_card_id,omitempty"`
	AbilityLevel     int32  `protobuf:"varint,3,opt,name=ability_level,json=abilityLevel,proto3" json:"ability_level,omitempty"`
	AbilityCardLevel int32  `protobuf:"varint,2,opt,name=ability_card_level,json=abilityCardLevel,proto3" json:"ability_card_level,omitempty"`
	ExtraSkillUnlock int32  `protobuf:"varint,4,opt,name=extra_skill_unlock,json=extraSkillUnlock,proto3" json:"extra_skill_unlock,omitempty"`
	OverBoostLevel   int32  `protobuf:"varint,5,opt,name=over_boost_level,json=overBoostLevel,proto3" json:"over_boost_level,omitempty"`
	SlotIndex        int32  `protobuf:"varint,6,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
}

func (x *ProtoPlayerCardInfo) Reset() {
	*x = ProtoPlayerCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerCardInfo) ProtoMessage() {}

func (x *ProtoPlayerCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerCardInfo.ProtoReflect.Descriptor instead.
func (*ProtoPlayerCardInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{26}
}

func (x *ProtoPlayerCardInfo) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *ProtoPlayerCardInfo) GetAbilityLevel() int32 {
	if x != nil {
		return x.AbilityLevel
	}
	return 0
}

func (x *ProtoPlayerCardInfo) GetAbilityCardLevel() int32 {
	if x != nil {
		return x.AbilityCardLevel
	}
	return 0
}

func (x *ProtoPlayerCardInfo) GetExtraSkillUnlock() int32 {
	if x != nil {
		return x.ExtraSkillUnlock
	}
	return 0
}

func (x *ProtoPlayerCardInfo) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

func (x *ProtoPlayerCardInfo) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

type ProtoPlayerDeckCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentDeckIndex int32              `protobuf:"varint,1,opt,name=CurrentDeckIndex,proto3" json:"CurrentDeckIndex,omitempty"`
	Decks            []*ProtoPlayerDeck `protobuf:"bytes,2,rep,name=Decks,proto3" json:"Decks,omitempty"`
}

func (x *ProtoPlayerDeckCollection) Reset() {
	*x = ProtoPlayerDeckCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerDeckCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerDeckCollection) ProtoMessage() {}

func (x *ProtoPlayerDeckCollection) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerDeckCollection.ProtoReflect.Descriptor instead.
func (*ProtoPlayerDeckCollection) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{27}
}

func (x *ProtoPlayerDeckCollection) GetCurrentDeckIndex() int32 {
	if x != nil {
		return x.CurrentDeckIndex
	}
	return 0
}

func (x *ProtoPlayerDeckCollection) GetDecks() []*ProtoPlayerDeck {
	if x != nil {
		return x.Decks
	}
	return nil
}

type ProtoPlayerDeck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobCardIndex        int32                  `protobuf:"varint,1,opt,name=JobCardIndex,proto3" json:"JobCardIndex,omitempty"`
	SubJobCardIndex     int32                  `protobuf:"varint,2,opt,name=SubJobCardIndex,proto3" json:"SubJobCardIndex,omitempty"`
	AbilityCardSlots    []*ProtoPlayerDeckSlot `protobuf:"bytes,3,rep,name=AbilityCardSlots,proto3" json:"AbilityCardSlots,omitempty"`
	SubAbilityCardSlots []*ProtoPlayerDeckSlot `protobuf:"bytes,4,rep,name=SubAbilityCardSlots,proto3" json:"SubAbilityCardSlots,omitempty"`
	WeaponIndex         int32                  `protobuf:"varint,5,opt,name=WeaponIndex,proto3" json:"WeaponIndex,omitempty"`
	SubWeaponIndex      int32                  `protobuf:"varint,6,opt,name=SubWeaponIndex,proto3" json:"SubWeaponIndex,omitempty"`
	DeckIndex           int32                  `protobuf:"varint,7,opt,name=DeckIndex,proto3" json:"DeckIndex,omitempty"`
	JobCardSubIndex     int32                  `protobuf:"varint,8,opt,name=JobCardSubIndex,proto3" json:"JobCardSubIndex,omitempty"`
	SubJobCardSubIndex  int32                  `protobuf:"varint,9,opt,name=SubJobCardSubIndex,proto3" json:"SubJobCardSubIndex,omitempty"`
}

func (x *ProtoPlayerDeck) Reset() {
	*x = ProtoPlayerDeck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerDeck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerDeck) ProtoMessage() {}

func (x *ProtoPlayerDeck) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerDeck.ProtoReflect.Descriptor instead.
func (*ProtoPlayerDeck) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{28}
}

func (x *ProtoPlayerDeck) GetJobCardIndex() int32 {
	if x != nil {
		return x.JobCardIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetSubJobCardIndex() int32 {
	if x != nil {
		return x.SubJobCardIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetAbilityCardSlots() []*ProtoPlayerDeckSlot {
	if x != nil {
		return x.AbilityCardSlots
	}
	return nil
}

func (x *ProtoPlayerDeck) GetSubAbilityCardSlots() []*ProtoPlayerDeckSlot {
	if x != nil {
		return x.SubAbilityCardSlots
	}
	return nil
}

func (x *ProtoPlayerDeck) GetWeaponIndex() int32 {
	if x != nil {
		return x.WeaponIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetSubWeaponIndex() int32 {
	if x != nil {
		return x.SubWeaponIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetDeckIndex() int32 {
	if x != nil {
		return x.DeckIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetJobCardSubIndex() int32 {
	if x != nil {
		return x.JobCardSubIndex
	}
	return 0
}

func (x *ProtoPlayerDeck) GetSubJobCardSubIndex() int32 {
	if x != nil {
		return x.SubJobCardSubIndex
	}
	return 0
}

type ProtoPlayerDeckSlot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityCardID string `protobuf:"bytes,1,opt,name=AbilityCardID,proto3" json:"AbilityCardID,omitempty"`
	SlotIndex     int32  `protobuf:"varint,2,opt,name=SlotIndex,proto3" json:"SlotIndex,omitempty"`
}

func (x *ProtoPlayerDeckSlot) Reset() {
	*x = ProtoPlayerDeckSlot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerDeckSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerDeckSlot) ProtoMessage() {}

func (x *ProtoPlayerDeckSlot) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerDeckSlot.ProtoReflect.Descriptor instead.
func (*ProtoPlayerDeckSlot) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{29}
}

func (x *ProtoPlayerDeckSlot) GetAbilityCardID() string {
	if x != nil {
		return x.AbilityCardID
	}
	return ""
}

func (x *ProtoPlayerDeckSlot) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

type ProtoPlayerStamina struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentStamina   uint32 `protobuf:"varint,1,opt,name=CurrentStamina,proto3" json:"CurrentStamina,omitempty"`
	MaxStamina       uint32 `protobuf:"varint,2,opt,name=MaxStamina,proto3" json:"MaxStamina,omitempty"`
	StaminaDec       uint64 `protobuf:"varint,3,opt,name=StaminaDec,proto3" json:"StaminaDec,omitempty"`
	CurrentMPStamina uint32 `protobuf:"varint,4,opt,name=CurrentMPStamina,proto3" json:"CurrentMPStamina,omitempty"`
	MaxMPStamina     uint32 `protobuf:"varint,5,opt,name=MaxMPStamina,proto3" json:"MaxMPStamina,omitempty"`
	MPStaminaDec     uint64 `protobuf:"varint,6,opt,name=MPStaminaDec,proto3" json:"MPStaminaDec,omitempty"`
}

func (x *ProtoPlayerStamina) Reset() {
	*x = ProtoPlayerStamina{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerStamina) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerStamina) ProtoMessage() {}

func (x *ProtoPlayerStamina) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerStamina.ProtoReflect.Descriptor instead.
func (*ProtoPlayerStamina) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{30}
}

func (x *ProtoPlayerStamina) GetCurrentStamina() uint32 {
	if x != nil {
		return x.CurrentStamina
	}
	return 0
}

func (x *ProtoPlayerStamina) GetMaxStamina() uint32 {
	if x != nil {
		return x.MaxStamina
	}
	return 0
}

func (x *ProtoPlayerStamina) GetStaminaDec() uint64 {
	if x != nil {
		return x.StaminaDec
	}
	return 0
}

func (x *ProtoPlayerStamina) GetCurrentMPStamina() uint32 {
	if x != nil {
		return x.CurrentMPStamina
	}
	return 0
}

func (x *ProtoPlayerStamina) GetMaxMPStamina() uint32 {
	if x != nil {
		return x.MaxMPStamina
	}
	return 0
}

func (x *ProtoPlayerStamina) GetMPStaminaDec() uint64 {
	if x != nil {
		return x.MPStaminaDec
	}
	return 0
}

type ProtoRankingInfoSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rankings       map[string]*ProtoRankingInfo `protobuf:"bytes,1,rep,name=Rankings,proto3" json:"Rankings,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FinishedEvents []*ProtoRankingEventClaim    `protobuf:"bytes,2,rep,name=FinishedEvents,proto3" json:"FinishedEvents,omitempty"`
}

func (x *ProtoRankingInfoSet) Reset() {
	*x = ProtoRankingInfoSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRankingInfoSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRankingInfoSet) ProtoMessage() {}

func (x *ProtoRankingInfoSet) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRankingInfoSet.ProtoReflect.Descriptor instead.
func (*ProtoRankingInfoSet) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{31}
}

func (x *ProtoRankingInfoSet) GetRankings() map[string]*ProtoRankingInfo {
	if x != nil {
		return x.Rankings
	}
	return nil
}

func (x *ProtoRankingInfoSet) GetFinishedEvents() []*ProtoRankingEventClaim {
	if x != nil {
		return x.FinishedEvents
	}
	return nil
}

type ProtoRankingInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string                       `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	ShortCode       string                       `protobuf:"bytes,2,opt,name=ShortCode,proto3" json:"ShortCode,omitempty"`
	PlayerRanking   *ProtoPlayerRankSetDetails   `protobuf:"bytes,3,opt,name=PlayerRanking,proto3" json:"PlayerRanking,omitempty"`
	UpperRankings   []*ProtoPlayerRankSetDetails `protobuf:"bytes,4,rep,name=UpperRankings,proto3" json:"UpperRankings,omitempty"`
	LowerRankings   []*ProtoPlayerRankSetDetails `protobuf:"bytes,5,rep,name=LowerRankings,proto3" json:"LowerRankings,omitempty"`
	TopRankings     []*ProtoPlayerRankSetDetails `protobuf:"bytes,6,rep,name=TopRankings,proto3" json:"TopRankings,omitempty"`
	RankRangeScores map[int64]float64            `protobuf:"bytes,7,rep,name=RankRangeScores,proto3" json:"RankRangeScores,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"fixed64,2,opt,name=value,proto3"`
}

func (x *ProtoRankingInfo) Reset() {
	*x = ProtoRankingInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRankingInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRankingInfo) ProtoMessage() {}

func (x *ProtoRankingInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRankingInfo.ProtoReflect.Descriptor instead.
func (*ProtoRankingInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{32}
}

func (x *ProtoRankingInfo) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ProtoRankingInfo) GetShortCode() string {
	if x != nil {
		return x.ShortCode
	}
	return ""
}

func (x *ProtoRankingInfo) GetPlayerRanking() *ProtoPlayerRankSetDetails {
	if x != nil {
		return x.PlayerRanking
	}
	return nil
}

func (x *ProtoRankingInfo) GetUpperRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.UpperRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetLowerRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.LowerRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetTopRankings() []*ProtoPlayerRankSetDetails {
	if x != nil {
		return x.TopRankings
	}
	return nil
}

func (x *ProtoRankingInfo) GetRankRangeScores() map[int64]float64 {
	if x != nil {
		return x.RankRangeScores
	}
	return nil
}

type ProtoPlayerRankSetDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerID        string                 `protobuf:"bytes,1,opt,name=PlayerID,proto3" json:"PlayerID,omitempty"`
	PlayerName      string                 `protobuf:"bytes,2,opt,name=PlayerName,proto3" json:"PlayerName,omitempty"`
	PlayerLevel     int32                  `protobuf:"varint,3,opt,name=PlayerLevel,proto3" json:"PlayerLevel,omitempty"`
	Score           float64                `protobuf:"fixed64,4,opt,name=Score,proto3" json:"Score,omitempty"`
	Rank            int64                  `protobuf:"varint,5,opt,name=Rank,proto3" json:"Rank,omitempty"`
	JobCardID       string                 `protobuf:"bytes,6,opt,name=JobCardID,proto3" json:"JobCardID,omitempty"`
	SubJobIndex     int32                  `protobuf:"varint,7,opt,name=SubJobIndex,proto3" json:"SubJobIndex,omitempty"`
	WeaponID        string                 `protobuf:"bytes,8,opt,name=WeaponID,proto3" json:"WeaponID,omitempty"`
	SubWeaponUnlock int32                  `protobuf:"varint,9,opt,name=SubWeaponUnlock,proto3" json:"SubWeaponUnlock,omitempty"`
	AbilityCards    []*ProtoPlayerCardInfo `protobuf:"bytes,22,rep,name=AbilityCards,proto3" json:"AbilityCards,omitempty"`
}

func (x *ProtoPlayerRankSetDetails) Reset() {
	*x = ProtoPlayerRankSetDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerRankSetDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerRankSetDetails) ProtoMessage() {}

func (x *ProtoPlayerRankSetDetails) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerRankSetDetails.ProtoReflect.Descriptor instead.
func (*ProtoPlayerRankSetDetails) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{33}
}

func (x *ProtoPlayerRankSetDetails) GetPlayerID() string {
	if x != nil {
		return x.PlayerID
	}
	return ""
}

func (x *ProtoPlayerRankSetDetails) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoPlayerRankSetDetails) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetScore() float64 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetRank() int64 {
	if x != nil {
		return x.Rank
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetJobCardID() string {
	if x != nil {
		return x.JobCardID
	}
	return ""
}

func (x *ProtoPlayerRankSetDetails) GetSubJobIndex() int32 {
	if x != nil {
		return x.SubJobIndex
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetWeaponID() string {
	if x != nil {
		return x.WeaponID
	}
	return ""
}

func (x *ProtoPlayerRankSetDetails) GetSubWeaponUnlock() int32 {
	if x != nil {
		return x.SubWeaponUnlock
	}
	return 0
}

func (x *ProtoPlayerRankSetDetails) GetAbilityCards() []*ProtoPlayerCardInfo {
	if x != nil {
		return x.AbilityCards
	}
	return nil
}

type ProtoRankingEventClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claimed      bool              `protobuf:"varint,1,opt,name=Claimed,proto3" json:"Claimed,omitempty"`
	ReadyToClaim bool              `protobuf:"varint,2,opt,name=ReadyToClaim,proto3" json:"ReadyToClaim,omitempty"`
	RankingInfo  *ProtoRankingInfo `protobuf:"bytes,3,opt,name=RankingInfo,proto3" json:"RankingInfo,omitempty"`
}

func (x *ProtoRankingEventClaim) Reset() {
	*x = ProtoRankingEventClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRankingEventClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRankingEventClaim) ProtoMessage() {}

func (x *ProtoRankingEventClaim) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRankingEventClaim.ProtoReflect.Descriptor instead.
func (*ProtoRankingEventClaim) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{34}
}

func (x *ProtoRankingEventClaim) GetClaimed() bool {
	if x != nil {
		return x.Claimed
	}
	return false
}

func (x *ProtoRankingEventClaim) GetReadyToClaim() bool {
	if x != nil {
		return x.ReadyToClaim
	}
	return false
}

func (x *ProtoRankingEventClaim) GetRankingInfo() *ProtoRankingInfo {
	if x != nil {
		return x.RankingInfo
	}
	return nil
}

type ProtoRegionMapDataCollection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentMapID      string                `protobuf:"bytes,1,opt,name=CurrentMapID,proto3" json:"CurrentMapID,omitempty"`
	RegionMapDataSets []*ProtoRegionMapData `protobuf:"bytes,2,rep,name=RegionMapDataSets,proto3" json:"RegionMapDataSets,omitempty"`
}

func (x *ProtoRegionMapDataCollection) Reset() {
	*x = ProtoRegionMapDataCollection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionMapDataCollection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionMapDataCollection) ProtoMessage() {}

func (x *ProtoRegionMapDataCollection) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionMapDataCollection.ProtoReflect.Descriptor instead.
func (*ProtoRegionMapDataCollection) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{35}
}

func (x *ProtoRegionMapDataCollection) GetCurrentMapID() string {
	if x != nil {
		return x.CurrentMapID
	}
	return ""
}

func (x *ProtoRegionMapDataCollection) GetRegionMapDataSets() []*ProtoRegionMapData {
	if x != nil {
		return x.RegionMapDataSets
	}
	return nil
}

type ProtoRegionMapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapID            string                 `protobuf:"bytes,1,opt,name=MapID,proto3" json:"MapID,omitempty"`
	NodeData         []*ProtoRegionNodeData `protobuf:"bytes,2,rep,name=NodeData,proto3" json:"NodeData,omitempty"`
	CurrentNodeIndex int32                  `protobuf:"varint,3,opt,name=CurrentNodeIndex,proto3" json:"CurrentNodeIndex,omitempty"`
	LockData         []*ProtoRegionLockData `protobuf:"bytes,4,rep,name=LockData,proto3" json:"LockData,omitempty"`
	EnemiesDefeated  uint64                 `protobuf:"varint,5,opt,name=EnemiesDefeated,proto3" json:"EnemiesDefeated,omitempty"`
	HighScore        uint64                 `protobuf:"varint,6,opt,name=HighScore,proto3" json:"HighScore,omitempty"`
	JobTypeDefeats   map[string]uint64      `protobuf:"bytes,7,rep,name=JobTypeDefeats,proto3" json:"JobTypeDefeats,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	NodeSetVisible   []int32                `protobuf:"varint,8,rep,packed,name=NodeSetVisible,proto3" json:"NodeSetVisible,omitempty"`
	NodeSetHidden    []int32                `protobuf:"varint,9,rep,packed,name=NodeSetHidden,proto3" json:"NodeSetHidden,omitempty"`
	NodeSetUnlocked  []int32                `protobuf:"varint,10,rep,packed,name=NodeSetUnlocked,proto3" json:"NodeSetUnlocked,omitempty"`
	NodeSetLocked    []int32                `protobuf:"varint,11,rep,packed,name=NodeSetLocked,proto3" json:"NodeSetLocked,omitempty"`
	NodeSetOpen      []int32                `protobuf:"varint,12,rep,packed,name=NodeSetOpen,proto3" json:"NodeSetOpen,omitempty"`
	NodeSetClosed    []int32                `protobuf:"varint,13,rep,packed,name=NodeSetClosed,proto3" json:"NodeSetClosed,omitempty"`
}

func (x *ProtoRegionMapData) Reset() {
	*x = ProtoRegionMapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionMapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionMapData) ProtoMessage() {}

func (x *ProtoRegionMapData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionMapData.ProtoReflect.Descriptor instead.
func (*ProtoRegionMapData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{36}
}

func (x *ProtoRegionMapData) GetMapID() string {
	if x != nil {
		return x.MapID
	}
	return ""
}

func (x *ProtoRegionMapData) GetNodeData() []*ProtoRegionNodeData {
	if x != nil {
		return x.NodeData
	}
	return nil
}

func (x *ProtoRegionMapData) GetCurrentNodeIndex() int32 {
	if x != nil {
		return x.CurrentNodeIndex
	}
	return 0
}

func (x *ProtoRegionMapData) GetLockData() []*ProtoRegionLockData {
	if x != nil {
		return x.LockData
	}
	return nil
}

func (x *ProtoRegionMapData) GetEnemiesDefeated() uint64 {
	if x != nil {
		return x.EnemiesDefeated
	}
	return 0
}

func (x *ProtoRegionMapData) GetHighScore() uint64 {
	if x != nil {
		return x.HighScore
	}
	return 0
}

func (x *ProtoRegionMapData) GetJobTypeDefeats() map[string]uint64 {
	if x != nil {
		return x.JobTypeDefeats
	}
	return nil
}

func (x *ProtoRegionMapData) GetNodeSetVisible() []int32 {
	if x != nil {
		return x.NodeSetVisible
	}
	return nil
}

func (x *ProtoRegionMapData) GetNodeSetHidden() []int32 {
	if x != nil {
		return x.NodeSetHidden
	}
	return nil
}

func (x *ProtoRegionMapData) GetNodeSetUnlocked() []int32 {
	if x != nil {
		return x.NodeSetUnlocked
	}
	return nil
}

func (x *ProtoRegionMapData) GetNodeSetLocked() []int32 {
	if x != nil {
		return x.NodeSetLocked
	}
	return nil
}

func (x *ProtoRegionMapData) GetNodeSetOpen() []int32 {
	if x != nil {
		return x.NodeSetOpen
	}
	return nil
}

func (x *ProtoRegionMapData) GetNodeSetClosed() []int32 {
	if x != nil {
		return x.NodeSetClosed
	}
	return nil
}

type ProtoRegionNodeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID         string `protobuf:"bytes,1,opt,name=NodeID,proto3" json:"NodeID,omitempty"`
	Visible        bool   `protobuf:"varint,2,opt,name=Visible,proto3" json:"Visible,omitempty"`
	Locked         bool   `protobuf:"varint,3,opt,name=Locked,proto3" json:"Locked,omitempty"`
	Completed      bool   `protobuf:"varint,4,opt,name=Completed,proto3" json:"Completed,omitempty"`
	CompletedCount uint64 `protobuf:"varint,5,opt,name=CompletedCount,proto3" json:"CompletedCount,omitempty"`
	Opened         bool   `protobuf:"varint,6,opt,name=Opened,proto3" json:"Opened,omitempty"`
}

func (x *ProtoRegionNodeData) Reset() {
	*x = ProtoRegionNodeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionNodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionNodeData) ProtoMessage() {}

func (x *ProtoRegionNodeData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionNodeData.ProtoReflect.Descriptor instead.
func (*ProtoRegionNodeData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{37}
}

func (x *ProtoRegionNodeData) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *ProtoRegionNodeData) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *ProtoRegionNodeData) GetLocked() bool {
	if x != nil {
		return x.Locked
	}
	return false
}

func (x *ProtoRegionNodeData) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *ProtoRegionNodeData) GetCompletedCount() uint64 {
	if x != nil {
		return x.CompletedCount
	}
	return 0
}

func (x *ProtoRegionNodeData) GetOpened() bool {
	if x != nil {
		return x.Opened
	}
	return false
}

type ProtoRegionLockData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LockID       string `protobuf:"bytes,1,opt,name=LockID,proto3" json:"LockID,omitempty"`
	ParentNodeID string `protobuf:"bytes,2,opt,name=ParentNodeID,proto3" json:"ParentNodeID,omitempty"`
	TargetNodeID string `protobuf:"bytes,3,opt,name=TargetNodeID,proto3" json:"TargetNodeID,omitempty"`
	Unlocked     bool   `protobuf:"varint,4,opt,name=Unlocked,proto3" json:"Unlocked,omitempty"`
}

func (x *ProtoRegionLockData) Reset() {
	*x = ProtoRegionLockData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionLockData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionLockData) ProtoMessage() {}

func (x *ProtoRegionLockData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionLockData.ProtoReflect.Descriptor instead.
func (*ProtoRegionLockData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{38}
}

func (x *ProtoRegionLockData) GetLockID() string {
	if x != nil {
		return x.LockID
	}
	return ""
}

func (x *ProtoRegionLockData) GetParentNodeID() string {
	if x != nil {
		return x.ParentNodeID
	}
	return ""
}

func (x *ProtoRegionLockData) GetTargetNodeID() string {
	if x != nil {
		return x.TargetNodeID
	}
	return ""
}

func (x *ProtoRegionLockData) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

type ProtoRegionEventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceIndex     int32 `protobuf:"varint,1,opt,name=SourceIndex,proto3" json:"SourceIndex,omitempty"`
	TargetIndex     int32 `protobuf:"varint,2,opt,name=TargetIndex,proto3" json:"TargetIndex,omitempty"`
	DefinitionValue int32 `protobuf:"varint,3,opt,name=DefinitionValue,proto3" json:"DefinitionValue,omitempty"`
	Order           int32 `protobuf:"varint,4,opt,name=Order,proto3" json:"Order,omitempty"`
}

func (x *ProtoRegionEventData) Reset() {
	*x = ProtoRegionEventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoRegionEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoRegionEventData) ProtoMessage() {}

func (x *ProtoRegionEventData) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoRegionEventData.ProtoReflect.Descriptor instead.
func (*ProtoRegionEventData) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{39}
}

func (x *ProtoRegionEventData) GetSourceIndex() int32 {
	if x != nil {
		return x.SourceIndex
	}
	return 0
}

func (x *ProtoRegionEventData) GetTargetIndex() int32 {
	if x != nil {
		return x.TargetIndex
	}
	return 0
}

func (x *ProtoRegionEventData) GetDefinitionValue() int32 {
	if x != nil {
		return x.DefinitionValue
	}
	return 0
}

func (x *ProtoRegionEventData) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

type ProtoSkillPanelGroups struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PanelPages     []*ProtoSkillPanelPage `protobuf:"bytes,1,rep,name=PanelPages,proto3" json:"PanelPages,omitempty"`
	CompletedCount int32                  `protobuf:"varint,2,opt,name=CompletedCount,proto3" json:"CompletedCount,omitempty"`
}

func (x *ProtoSkillPanelGroups) Reset() {
	*x = ProtoSkillPanelGroups{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSkillPanelGroups) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSkillPanelGroups) ProtoMessage() {}

func (x *ProtoSkillPanelGroups) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSkillPanelGroups.ProtoReflect.Descriptor instead.
func (*ProtoSkillPanelGroups) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{40}
}

func (x *ProtoSkillPanelGroups) GetPanelPages() []*ProtoSkillPanelPage {
	if x != nil {
		return x.PanelPages
	}
	return nil
}

func (x *ProtoSkillPanelGroups) GetCompletedCount() int32 {
	if x != nil {
		return x.CompletedCount
	}
	return 0
}

type ProtoSkillPanelPage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index       int32              `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Visible     bool               `protobuf:"varint,2,opt,name=Visible,proto3" json:"Visible,omitempty"`
	Unlocked    bool               `protobuf:"varint,3,opt,name=Unlocked,proto3" json:"Unlocked,omitempty"`
	Completed   bool               `protobuf:"varint,4,opt,name=Completed,proto3" json:"Completed,omitempty"`
	SkillPanels []*ProtoSkillPanel `protobuf:"bytes,5,rep,name=SkillPanels,proto3" json:"SkillPanels,omitempty"`
}

func (x *ProtoSkillPanelPage) Reset() {
	*x = ProtoSkillPanelPage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSkillPanelPage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSkillPanelPage) ProtoMessage() {}

func (x *ProtoSkillPanelPage) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSkillPanelPage.ProtoReflect.Descriptor instead.
func (*ProtoSkillPanelPage) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{41}
}

func (x *ProtoSkillPanelPage) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoSkillPanelPage) GetVisible() bool {
	if x != nil {
		return x.Visible
	}
	return false
}

func (x *ProtoSkillPanelPage) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *ProtoSkillPanelPage) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *ProtoSkillPanelPage) GetSkillPanels() []*ProtoSkillPanel {
	if x != nil {
		return x.SkillPanels
	}
	return nil
}

type ProtoSkillPanel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index     int32 `protobuf:"varint,1,opt,name=Index,proto3" json:"Index,omitempty"`
	Unlocked  bool  `protobuf:"varint,2,opt,name=Unlocked,proto3" json:"Unlocked,omitempty"`
	Completed bool  `protobuf:"varint,3,opt,name=Completed,proto3" json:"Completed,omitempty"`
	CapItem   bool  `protobuf:"varint,4,opt,name=CapItem,proto3" json:"CapItem,omitempty"`
}

func (x *ProtoSkillPanel) Reset() {
	*x = ProtoSkillPanel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoSkillPanel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoSkillPanel) ProtoMessage() {}

func (x *ProtoSkillPanel) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoSkillPanel.ProtoReflect.Descriptor instead.
func (*ProtoSkillPanel) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{42}
}

func (x *ProtoSkillPanel) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ProtoSkillPanel) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *ProtoSkillPanel) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

func (x *ProtoSkillPanel) GetCapItem() bool {
	if x != nil {
		return x.CapItem
	}
	return false
}

type ProtoWeaponInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeaponList []*ProtoWeaponInstance `protobuf:"bytes,1,rep,name=WeaponList,proto3" json:"WeaponList,omitempty"`
}

func (x *ProtoWeaponInventory) Reset() {
	*x = ProtoWeaponInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWeaponInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWeaponInventory) ProtoMessage() {}

func (x *ProtoWeaponInventory) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWeaponInventory.ProtoReflect.Descriptor instead.
func (*ProtoWeaponInventory) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{43}
}

func (x *ProtoWeaponInventory) GetWeaponList() []*ProtoWeaponInstance {
	if x != nil {
		return x.WeaponList
	}
	return nil
}

type ProtoWeaponInstance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId           string           `protobuf:"bytes,1,opt,name=SysId,proto3" json:"SysId,omitempty"`
	SubWeaponUnlock int32            `protobuf:"varint,2,opt,name=SubWeaponUnlock,proto3" json:"SubWeaponUnlock,omitempty"`
	BaseWeaponId    string           `protobuf:"bytes,3,opt,name=BaseWeaponId,proto3" json:"BaseWeaponId,omitempty"`
	CreatedAt       int64            `protobuf:"varint,4,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	AutoAbilities   map[string]int32 `protobuf:"bytes,5,rep,name=AutoAbilities,proto3" json:"AutoAbilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoWeaponInstance) Reset() {
	*x = ProtoWeaponInstance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoWeaponInstance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoWeaponInstance) ProtoMessage() {}

func (x *ProtoWeaponInstance) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoWeaponInstance.ProtoReflect.Descriptor instead.
func (*ProtoWeaponInstance) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{44}
}

func (x *ProtoWeaponInstance) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *ProtoWeaponInstance) GetSubWeaponUnlock() int32 {
	if x != nil {
		return x.SubWeaponUnlock
	}
	return 0
}

func (x *ProtoWeaponInstance) GetBaseWeaponId() string {
	if x != nil {
		return x.BaseWeaponId
	}
	return ""
}

func (x *ProtoWeaponInstance) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProtoWeaponInstance) GetAutoAbilities() map[string]int32 {
	if x != nil {
		return x.AutoAbilities
	}
	return nil
}

var File_data_proto protoreflect.FileDescriptor

var file_data_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x22, 0x8f, 0x0d, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x47, 0x61,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x40, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x52, 0x0d, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x24, 0x0a, 0x0d, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70,
	0x12, 0x1a, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x58, 0x50, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x58, 0x50, 0x12, 0x1a, 0x0a, 0x08,
	0x45, 0x58, 0x50, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08,
	0x45, 0x58, 0x50, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1e,
	0x0a, 0x0a, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x72, 0x64, 0x12, 0x55,
	0x0a, 0x14, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x14, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x4b, 0x0a, 0x0f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x42, 0x61, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x0f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x42, 0x61,
	0x6e, 0x6b, 0x12, 0x4f, 0x0a, 0x12, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72,
	0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x12, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x40, 0x0a, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x0d, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x45, 0x0a, 0x10, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f,
	0x62, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x10, 0x4a, 0x6f, 0x62, 0x43,
	0x61, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x46, 0x0a, 0x0f,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x5e, 0x0a, 0x17, 0x46, 0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x17, 0x46, 0x61, 0x69,
	0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x12, 0x4e, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43,
	0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74,
	0x52, 0x12, 0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74,
	0x53, 0x65, 0x74, 0x73, 0x12, 0x4f, 0x0a, 0x11, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x11, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x65, 0x63, 0x6b, 0x73, 0x12, 0x4d, 0x0a, 0x10, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x10, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44,
	0x65, 0x63, 0x6b, 0x73, 0x12, 0x5e, 0x0a, 0x17, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x11, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x61,
	0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x52,
	0x11, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0d, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3b, 0x0a, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0c, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49,
	0x0a, 0x10, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x58, 0x0a, 0x13, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x73,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43,
	0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x52, 0x13,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x61, 0x6e, 0x6b,
	0x69, 0x6e, 0x67, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x74, 0x52, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x4d, 0x61, 0x69, 0x6c, 0x62, 0x6f,
	0x78, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x78, 0x52, 0x07, 0x4d,
	0x61, 0x69, 0x6c, 0x62, 0x6f, 0x78, 0x22, 0x5e, 0x0a, 0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x43, 0x0a, 0x08, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x43, 0x61,
	0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x97, 0x01, 0x0a, 0x1f, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x79,
	0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x79, 0x73, 0x49, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65,
	0x6c, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x41, 0x75, 0x74, 0x6f, 0x53, 0x65,
	0x6c, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x75, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x4d, 0x61, 0x78, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x4d, 0x61, 0x78, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x3c, 0x0a, 0x08, 0x43, 0x61, 0x72,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x08, 0x43,
	0x61, 0x72, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x97, 0x03, 0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x61, 0x72, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x63, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61,
	0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x61, 0x72, 0x64,
	0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x65,
	0x64, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x65, 0x65, 0x64, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x75, 0x6d,
	0x5f, 0x65, 0x78, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x74,
	0x72, 0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x6b, 0x69, 0x6c,
	0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x22, 0xe4, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x1b, 0x0a, 0x09, 0x68, 0x61, 0x72, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x72, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3c, 0x0a, 0x0d, 0x49,
	0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x0d, 0x49, 0x74, 0x65, 0x6d,
	0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xd9, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x50, 0x61, 0x69, 0x72, 0x52, 0x0b, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x73, 0x22, 0x70, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x74,
	0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x12, 0x2c, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x42, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x04, 0x64, 0x72, 0x6f, 0x70, 0x22, 0x50, 0x0a, 0x12, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x44, 0x72, 0x6f, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69,
	0x65, 0x6e, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x4b, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x5d, 0x0a, 0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61,
	0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x56, 0x69, 0x65, 0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x56,
	0x69, 0x65, 0x77, 0x12, 0x2f, 0x0a, 0x04, 0x53, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x43, 0x61, 0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04,
	0x53, 0x65, 0x74, 0x73, 0x22, 0xe7, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61,
	0x72, 0x64, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x12, 0x26, 0x0a, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x43, 0x61, 0x72, 0x64, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x53, 0x6f, 0x72, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x53, 0x6f, 0x72, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x53, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xec,
	0x01, 0x0a, 0x1e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65,
	0x74, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x53, 0x0a, 0x12, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72,
	0x64, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x53, 0x74, 0x61, 0x6e, 0x64, 0x61, 0x72, 0x64,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x51, 0x0a, 0x11, 0x53, 0x70,
	0x65, 0x63, 0x69, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x43, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x22, 0x69, 0x0a,
	0x1b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x43, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x07, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x4c, 0x61, 0x73,
	0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x22, 0x69, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x46, 0x61, 0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61,
	0x69, 0x72, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x22, 0x7b, 0x0a, 0x1b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x46, 0x61, 0x69, 0x72,
	0x79, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x79, 0x73, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x53, 0x79, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x4b, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6e, 0x63, 0x65, 0x52, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7e, 0x0a,
	0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x43, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x07, 0x4a, 0x6f, 0x62, 0x4c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x07, 0x4a, 0x6f, 0x62, 0x4c, 0x69, 0x73, 0x74, 0x22,
	0xea, 0x05, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x79, 0x73, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x79, 0x73, 0x49, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x53, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x4f, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x4f, 0x76, 0x65, 0x72,
	0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x4b, 0x0a, 0x11, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x52, 0x11, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x42, 0x61, 0x73, 0x65, 0x4a,
	0x6f, 0x62, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x42, 0x61, 0x73, 0x65,
	0x4a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x50, 0x53, 0x74, 0x61,
	0x74, 0x4d, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x48, 0x50, 0x53, 0x74,
	0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x41, 0x74,
	0x74, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x42,
	0x72, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x4d, 0x6f, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x53, 0x70, 0x65, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74,
	0x4d, 0x6f, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x53, 0x70, 0x65, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x65, 0x6e,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x44, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12,
	0x2c, 0x0a, 0x11, 0x43, 0x72, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x4d, 0x6f, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x43, 0x72, 0x69, 0x74,
	0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x55, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x42, 0x6f,
	0x6f, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x41, 0x75, 0x74,
	0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x41, 0x75,
	0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xae, 0x04, 0x0a,
	0x16, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4c, 0x61, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x58, 0x50, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c,
	0x45, 0x58, 0x50, 0x12, 0x1e, 0x0a, 0x0a, 0x47, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x47, 0x6f, 0x6c, 0x64, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x57,
	0x65, 0x65, 0x6b, 0x6c, 0x79, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x12, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x52,
	0x61, 0x6e, 0x6b, 0x12, 0x2e, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79,
	0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x12, 0x4e, 0x65, 0x77, 0x57, 0x65, 0x65, 0x6b, 0x6c, 0x79, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x50, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0d, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x2a, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x63, 0x63, 0x75, 0x6d,
	0x45, 0x58, 0x50, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x6f, 0x75, 0x73, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x58, 0x50, 0x12, 0x40, 0x0a, 0x0a, 0x43,
	0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61,
	0x72, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x0a, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x44, 0x0a,
	0x0f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x49, 0x74, 0x65, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x50, 0x61,
	0x69, 0x72, 0x52, 0x0f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x65, 0x64, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4d,
	0x61, 0x78, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x12, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4d, 0x61, 0x78, 0x53, 0x74, 0x61, 0x6d,
	0x69, 0x6e, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x45,
	0x58, 0x50, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x45, 0x58, 0x50, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12,
	0x2c, 0x0a, 0x11, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x65, 0x63, 0x6b, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x86, 0x02,
	0x0a, 0x18, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x74, 0x42,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x10, 0x70,
	0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x41, 0x63, 0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x12,
	0x1b, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x75, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x73, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x63,
	0x75, 0x6d, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x61, 0x63,
	0x63, 0x75, 0x6d, 0x45, 0x78, 0x70, 0x22, 0x5a, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d,
	0x61, 0x69, 0x6c, 0x42, 0x6f, 0x78, 0x12, 0x2e, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x61, 0x78, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x4d, 0x61, 0x78, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xaa, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6c,
	0x42, 0x6f, 0x78, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x4d, 0x61, 0x69, 0x6c, 0x42, 0x6f, 0x78,
	0x49, 0x74, 0x65, 0x6d, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x74, 0x0a, 0x0f, 0x52, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x42, 0x49, 0x4c, 0x49, 0x54,
	0x59, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x54, 0x45, 0x4d,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x4f, 0x42, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x03,
	0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e, 0x10, 0x04, 0x12, 0x13, 0x0a, 0x0f,
	0x46, 0x41, 0x49, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x41, 0x4e, 0x49, 0x4f, 0x4e, 0x10,
	0x05, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x50, 0x5f, 0x53, 0x54, 0x41, 0x4d, 0x50, 0x10, 0x06, 0x22,
	0xdf, 0x02, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x1e, 0x0a, 0x0b,
	0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d,
	0x73, 0x75, 0x62, 0x5f, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x3c, 0x0a, 0x0b, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43, 0x61, 0x72,
	0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x6e, 0x74, 0x61, 0x6c, 0x43, 0x61, 0x72,
	0x64, 0x22, 0x87, 0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x76,
	0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x76, 0x0a, 0x19, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x2d, 0x0a, 0x05, 0x44, 0x65, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x52, 0x05, 0x44, 0x65,
	0x63, 0x6b, 0x73, 0x22, 0xb9, 0x03, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x4a, 0x6f, 0x62, 0x43, 0x61,
	0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x4a,
	0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x53,
	0x75, 0x62, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x47, 0x0a, 0x10, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x44, 0x65, 0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x10, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x4d,
	0x0a, 0x13, 0x53, 0x75, 0x62, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x44, 0x65, 0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x13, 0x53, 0x75, 0x62, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x20, 0x0a,
	0x0b, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x26, 0x0a, 0x0e, 0x53, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x53, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x65, 0x63, 0x6b, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x44, 0x65, 0x63, 0x6b,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x28, 0x0a, 0x0f, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f,
	0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x2e, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x53, 0x75, 0x62,
	0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x53, 0x75, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22,
	0x59, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x44, 0x65,
	0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09,
	0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xf0, 0x01, 0x0a, 0x12, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e,
	0x61, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x6d,
	0x69, 0x6e, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x43, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x4d, 0x61, 0x78,
	0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x4d,
	0x61, 0x78, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x74, 0x61,
	0x6d, 0x69, 0x6e, 0x61, 0x44, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x53,
	0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x44, 0x65, 0x63, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x4d, 0x50, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x50, 0x53, 0x74,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x61, 0x78, 0x4d, 0x50, 0x53, 0x74,
	0x61, 0x6d, 0x69, 0x6e, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x4d, 0x61, 0x78,
	0x4d, 0x50, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x50, 0x53,
	0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x44, 0x65, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0c, 0x4d, 0x50, 0x53, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x61, 0x44, 0x65, 0x63, 0x22, 0xfb, 0x01,
	0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x53, 0x65, 0x74, 0x12, 0x45, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x74, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x46, 0x0a, 0x0e,
	0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x52, 0x0e, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x1a, 0x55, 0x0a, 0x0d, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfd, 0x03, 0x0a, 0x10,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x47,
	0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x47, 0x0a, 0x0d, 0x55, 0x70, 0x70, 0x65, 0x72,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0d, 0x55, 0x70, 0x70, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x47, 0x0a, 0x0d, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b,
	0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0d, 0x4c, 0x6f, 0x77, 0x65,
	0x72, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x54, 0x6f, 0x70,
	0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x0b, 0x54, 0x6f, 0x70, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x57,
	0x0a, 0x0f, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x61, 0x6e, 0x67,
	0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x1a, 0x42, 0x0a, 0x14, 0x52, 0x61, 0x6e, 0x6b, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xea, 0x02, 0x0a, 0x19,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x52, 0x61, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x52, 0x61, 0x6e,
	0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4a, 0x6f, 0x62, 0x43, 0x61, 0x72, 0x64, 0x49, 0x44, 0x12,
	0x20, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x53, 0x75, 0x62, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x1a, 0x0a, 0x08, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x28, 0x0a,
	0x0f, 0x53, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70, 0x6f,
	0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x3f, 0x0a, 0x0c, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x16, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x79, 0x54, 0x6f, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x12, 0x3a, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x8c, 0x01,
	0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70,
	0x49, 0x44, 0x12, 0x48, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x4d, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x53, 0x65, 0x74, 0x73, 0x22, 0x91, 0x05, 0x0a,
	0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x4d, 0x61, 0x70, 0x49, 0x44, 0x12, 0x37, 0x0a, 0x08, 0x4e, 0x6f, 0x64,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x43, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x37,
	0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x4c,
	0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x45, 0x6e, 0x65, 0x6d, 0x69,
	0x65, 0x73, 0x44, 0x65, 0x66, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0f, 0x45, 0x6e, 0x65, 0x6d, 0x69, 0x65, 0x73, 0x44, 0x65, 0x66, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x48, 0x69, 0x67, 0x68, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x56, 0x0a, 0x0e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x65, 0x61, 0x74,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x65, 0x61,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x44, 0x65, 0x66, 0x65, 0x61, 0x74, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x03, 0x28, 0x05, 0x52,
	0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12,
	0x24, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0f,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x24, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x4c,
	0x6f, 0x63, 0x6b, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74,
	0x4f, 0x70, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0b, 0x4e, 0x6f, 0x64, 0x65,
	0x53, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x4e, 0x6f, 0x64, 0x65, 0x53,
	0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x1a, 0x41, 0x0a,
	0x13, 0x4a, 0x6f, 0x62, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x65, 0x61, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xbd, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4e, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x6f, 0x64, 0x65,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x12, 0x18, 0x0a, 0x07, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x4f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x4f, 0x70, 0x65, 0x6e, 0x65, 0x64,
	0x22, 0x91, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e,
	0x4c, 0x6f, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x6b,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x4c, 0x6f, 0x63, 0x6b, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x55, 0x6e, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x22, 0x9a, 0x01, 0x0a, 0x14, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a,
	0x0b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x20, 0x0a, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x28, 0x0a, 0x0f, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x44, 0x65, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x22, 0x7c, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50,
	0x61, 0x6e, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x3b, 0x0a, 0x0a, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x0a, 0x50, 0x61, 0x6e,
	0x65, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0xba, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61,
	0x6e, 0x65, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x12, 0x39, 0x0a, 0x0b, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x52,
	0x0b, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x7b, 0x0a, 0x0f,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x50, 0x61, 0x6e, 0x65, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x43, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x43, 0x61, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x53, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x3b, 0x0a, 0x0a, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x0a, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xaf,
	0x02, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x79, 0x73, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x79, 0x73, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f,
	0x53, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x53, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x22, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x65, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x42, 0x61,
	0x73, 0x65, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x54, 0x0a, 0x0d, 0x41, 0x75, 0x74, 0x6f,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x65,
	0x61, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x2e, 0x41, 0x75, 0x74,
	0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x40,
	0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a,
	0x75, 0x73, 0x74, 0x6a, 0x61, 0x63, 0x6b, 0x31, 0x35, 0x32, 0x31, 0x2f, 0x6d, 0x65, 0x76, 0x69,
	0x75, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_proto_rawDescOnce sync.Once
	file_data_proto_rawDescData = file_data_proto_rawDesc
)

func file_data_proto_rawDescGZIP() []byte {
	file_data_proto_rawDescOnce.Do(func() {
		file_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_proto_rawDescData)
	})
	return file_data_proto_rawDescData
}

var file_data_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_data_proto_msgTypes = make([]protoimpl.MessageInfo, 50)
var file_data_proto_goTypes = []interface{}{
	(ProtoMailBoxItem_ReferenceSource)(0),   // 0: protog.ProtoMailBoxItem.ReferenceSource
	(*ProtoGameData)(nil),                   // 1: protog.ProtoGameData
	(*ProtoAbilityCardHistory)(nil),         // 2: protog.ProtoAbilityCardHistory
	(*ProtoAbilityCardHistoryInstance)(nil), // 3: protog.ProtoAbilityCardHistoryInstance
	(*ProtoAbilityCardInventory)(nil),       // 4: protog.ProtoAbilityCardInventory
	(*ProtoAbilityCardInstance)(nil),        // 5: protog.ProtoAbilityCardInstance
	(*ProtoBattleStartData)(nil),            // 6: protog.ProtoBattleStartData
	(*ProtoDailyMissionInfo)(nil),           // 7: protog.ProtoDailyMissionInfo
	(*BattleItemDrop)(nil),                  // 8: protog.BattleItemDrop
	(*BattleDropTableKey)(nil),              // 9: protog.BattleDropTableKey
	(*BattleItemDropResult)(nil),            // 10: protog.BattleItemDropResult
	(*ProtoCardFilterSortSet)(nil),          // 11: protog.ProtoCardFilterSortSet
	(*ProtoCardFilterSort)(nil),             // 12: protog.ProtoCardFilterSort
	(*ProtoDailyLoginCampaignInfoSet)(nil),  // 13: protog.ProtoDailyLoginCampaignInfoSet
	(*ProtoDailyLoginCampaignInfo)(nil),     // 14: protog.ProtoDailyLoginCampaignInfo
	(*ProtoFairyCompanionInventory)(nil),    // 15: protog.ProtoFairyCompanionInventory
	(*ProtoFairyCompanionInstance)(nil),     // 16: protog.ProtoFairyCompanionInstance
	(*ProtoItemInventory)(nil),              // 17: protog.ProtoItemInventory
	(*ProtoItemInstance)(nil),               // 18: protog.ProtoItemInstance
	(*ProtoItemValuePair)(nil),              // 19: protog.ProtoItemValuePair
	(*ProtoJobInventory)(nil),               // 20: protog.ProtoJobInventory
	(*ProtoJobCardInstance)(nil),            // 21: protog.ProtoJobCardInstance
	(*ProtoLastBattleResults)(nil),          // 22: protog.ProtoLastBattleResults
	(*ProtoCardPostBattleState)(nil),        // 23: protog.ProtoCardPostBattleState
	(*ProtoMailBox)(nil),                    // 24: protog.ProtoMailBox
	(*ProtoMailBoxItem)(nil),                // 25: protog.ProtoMailBoxItem
	(*ProtoPlayerInfo)(nil),                 // 26: protog.ProtoPlayerInfo
	(*ProtoPlayerCardInfo)(nil),             // 27: protog.ProtoPlayerCardInfo
	(*ProtoPlayerDeckCollection)(nil),       // 28: protog.ProtoPlayerDeckCollection
	(*ProtoPlayerDeck)(nil),                 // 29: protog.ProtoPlayerDeck
	(*ProtoPlayerDeckSlot)(nil),             // 30: protog.ProtoPlayerDeckSlot
	(*ProtoPlayerStamina)(nil),              // 31: protog.ProtoPlayerStamina
	(*ProtoRankingInfoSet)(nil),             // 32: protog.ProtoRankingInfoSet
	(*ProtoRankingInfo)(nil),                // 33: protog.ProtoRankingInfo
	(*ProtoPlayerRankSetDetails)(nil),       // 34: protog.ProtoPlayerRankSetDetails
	(*ProtoRankingEventClaim)(nil),          // 35: protog.ProtoRankingEventClaim
	(*ProtoRegionMapDataCollection)(nil),    // 36: protog.ProtoRegionMapDataCollection
	(*ProtoRegionMapData)(nil),              // 37: protog.ProtoRegionMapData
	(*ProtoRegionNodeData)(nil),             // 38: protog.ProtoRegionNodeData
	(*ProtoRegionLockData)(nil),             // 39: protog.ProtoRegionLockData
	(*ProtoRegionEventData)(nil),            // 40: protog.ProtoRegionEventData
	(*ProtoSkillPanelGroups)(nil),           // 41: protog.ProtoSkillPanelGroups
	(*ProtoSkillPanelPage)(nil),             // 42: protog.ProtoSkillPanelPage
	(*ProtoSkillPanel)(nil),                 // 43: protog.ProtoSkillPanel
	(*ProtoWeaponInventory)(nil),            // 44: protog.ProtoWeaponInventory
	(*ProtoWeaponInstance)(nil),             // 45: protog.ProtoWeaponInstance
	nil,                                     // 46: protog.ProtoJobCardInstance.AutoAbilitiesEntry
	nil,                                     // 47: protog.ProtoRankingInfoSet.RankingsEntry
	nil,                                     // 48: protog.ProtoRankingInfo.RankRangeScoresEntry
	nil,                                     // 49: protog.ProtoRegionMapData.JobTypeDefeatsEntry
	nil,                                     // 50: protog.ProtoWeaponInstance.AutoAbilitiesEntry
}
var file_data_proto_depIdxs = []int32{
	31, // 0: protog.ProtoGameData.PlayerStamina:type_name -> protog.ProtoPlayerStamina
	4,  // 1: protog.ProtoGameData.AbilityCardInventory:type_name -> protog.ProtoAbilityCardInventory
	4,  // 2: protog.ProtoGameData.AbilityCardBank:type_name -> protog.ProtoAbilityCardInventory
	2,  // 3: protog.ProtoGameData.AbilityCardHistory:type_name -> protog.ProtoAbilityCardHistory
	17, // 4: protog.ProtoGameData.ItemInventory:type_name -> protog.ProtoItemInventory
	20, // 5: protog.ProtoGameData.JobCardInventory:type_name -> protog.ProtoJobInventory
	44, // 6: protog.ProtoGameData.WeaponInventory:type_name -> protog.ProtoWeaponInventory
	15, // 7: protog.ProtoGameData.FairyCompanionInventory:type_name -> protog.ProtoFairyCompanionInventory
	11, // 8: protog.ProtoGameData.CardFilterSortSets:type_name -> protog.ProtoCardFilterSortSet
	28, // 9: protog.ProtoGameData.SinglePlayerDecks:type_name -> protog.ProtoPlayerDeckCollection
	28, // 10: protog.ProtoGameData.MultiPlayerDecks:type_name -> protog.ProtoPlayerDeckCollection
	36, // 11: protog.ProtoGameData.RegionMapDataCollection:type_name -> protog.ProtoRegionMapDataCollection
	22, // 12: protog.ProtoGameData.LastBattleResults:type_name -> protog.ProtoLastBattleResults
	26, // 13: protog.ProtoGameData.FollowingList:type_name -> protog.ProtoPlayerInfo
	26, // 14: protog.ProtoGameData.FollowerList:type_name -> protog.ProtoPlayerInfo
	7,  // 15: protog.ProtoGameData.DailyMissionInfo:type_name -> protog.ProtoDailyMissionInfo
	13, // 16: protog.ProtoGameData.DailyLoginCampaigns:type_name -> protog.ProtoDailyLoginCampaignInfoSet
	32, // 17: protog.ProtoGameData.EventRankings:type_name -> protog.ProtoRankingInfoSet
	24, // 18: protog.ProtoGameData.Mailbox:type_name -> protog.ProtoMailBox
	3,  // 19: protog.ProtoAbilityCardHistory.CardList:type_name -> protog.ProtoAbilityCardHistoryInstance
	5,  // 20: protog.ProtoAbilityCardInventory.CardList:type_name -> protog.ProtoAbilityCardInstance
	8,  // 21: protog.ProtoBattleStartData.ItemDropTable:type_name -> protog.BattleItemDrop
	19, // 22: protog.ProtoDailyMissionInfo.ItemRewards:type_name -> protog.ProtoItemValuePair
	9,  // 23: protog.BattleItemDrop.key:type_name -> protog.BattleDropTableKey
	10, // 24: protog.BattleItemDrop.drop:type_name -> protog.BattleItemDropResult
	12, // 25: protog.ProtoCardFilterSortSet.Sets:type_name -> protog.ProtoCardFilterSort
	14, // 26: protog.ProtoDailyLoginCampaignInfoSet.StandardLoginBonus:type_name -> protog.ProtoDailyLoginCampaignInfo
	14, // 27: protog.ProtoDailyLoginCampaignInfoSet.SpecialLoginBonus:type_name -> protog.ProtoDailyLoginCampaignInfo
	16, // 28: protog.ProtoFairyCompanionInventory.CompanionList:type_name -> protog.ProtoFairyCompanionInstance
	18, // 29: protog.ProtoItemInventory.ItemList:type_name -> protog.ProtoItemInstance
	21, // 30: protog.ProtoJobInventory.JobList:type_name -> protog.ProtoJobCardInstance
	41, // 31: protog.ProtoJobCardInstance.SkillPanelUnlocks:type_name -> protog.ProtoSkillPanelGroups
	46, // 32: protog.ProtoJobCardInstance.AutoAbilities:type_name -> protog.ProtoJobCardInstance.AutoAbilitiesEntry
	23, // 33: protog.ProtoLastBattleResults.CardStates:type_name -> protog.ProtoCardPostBattleState
	19, // 34: protog.ProtoLastBattleResults.SkillSeedReward:type_name -> protog.ProtoItemValuePair
	25, // 35: protog.ProtoMailBox.Items:type_name -> protog.ProtoMailBoxItem
	0,  // 36: protog.ProtoMailBoxItem.source:type_name -> protog.ProtoMailBoxItem.ReferenceSource
	27, // 37: protog.ProtoPlayerInfo.rental_card:type_name -> protog.ProtoPlayerCardInfo
	29, // 38: protog.ProtoPlayerDeckCollection.Decks:type_name -> protog.ProtoPlayerDeck
	30, // 39: protog.ProtoPlayerDeck.AbilityCardSlots:type_name -> protog.ProtoPlayerDeckSlot
	30, // 40: protog.ProtoPlayerDeck.SubAbilityCardSlots:type_name -> protog.ProtoPlayerDeckSlot
	47, // 41: protog.ProtoRankingInfoSet.Rankings:type_name -> protog.ProtoRankingInfoSet.RankingsEntry
	35, // 42: protog.ProtoRankingInfoSet.FinishedEvents:type_name -> protog.ProtoRankingEventClaim
	34, // 43: protog.ProtoRankingInfo.PlayerRanking:type_name -> protog.ProtoPlayerRankSetDetails
	34, // 44: protog.ProtoRankingInfo.UpperRankings:type_name -> protog.ProtoPlayerRankSetDetails
	34, // 45: protog.ProtoRankingInfo.LowerRankings:type_name -> protog.ProtoPlayerRankSetDetails
	34, // 46: protog.ProtoRankingInfo.TopRankings:type_name -> protog.ProtoPlayerRankSetDetails
	48, // 47: protog.ProtoRankingInfo.RankRangeScores:type_name -> protog.ProtoRankingInfo.RankRangeScoresEntry
	27, // 48: protog.ProtoPlayerRankSetDetails.AbilityCards:type_name -> protog.ProtoPlayerCardInfo
	33, // 49: protog.ProtoRankingEventClaim.RankingInfo:type_name -> protog.ProtoRankingInfo
	37, // 50: protog.ProtoRegionMapDataCollection.RegionMapDataSets:type_name -> protog.ProtoRegionMapData
	38, // 51: protog.ProtoRegionMapData.NodeData:type_name -> protog.ProtoRegionNodeData
	39, // 52: protog.ProtoRegionMapData.LockData:type_name -> protog.ProtoRegionLockData
	49, // 53: protog.ProtoRegionMapData.JobTypeDefeats:type_name -> protog.ProtoRegionMapData.JobTypeDefeatsEntry
	42, // 54: protog.ProtoSkillPanelGroups.PanelPages:type_name -> protog.ProtoSkillPanelPage
	43, // 55: protog.ProtoSkillPanelPage.SkillPanels:type_name -> protog.ProtoSkillPanel
	45, // 56: protog.ProtoWeaponInventory.WeaponList:type_name -> protog.ProtoWeaponInstance
	50, // 57: protog.ProtoWeaponInstance.AutoAbilities:type_name -> protog.ProtoWeaponInstance.AutoAbilitiesEntry
	33, // 58: protog.ProtoRankingInfoSet.RankingsEntry.value:type_name -> protog.ProtoRankingInfo
	59, // [59:59] is the sub-list for method output_type
	59, // [59:59] is the sub-list for method input_type
	59, // [59:59] is the sub-list for extension type_name
	59, // [59:59] is the sub-list for extension extendee
	0,  // [0:59] is the sub-list for field type_name
}

func init() { file_data_proto_init() }
func file_data_proto_init() {
	if File_data_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoGameData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardHistoryInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoBattleStartData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDailyMissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleItemDrop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleDropTableKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BattleItemDropResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCardFilterSortSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCardFilterSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDailyLoginCampaignInfoSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoDailyLoginCampaignInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFairyCompanionInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoFairyCompanionInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoItemInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoItemInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoItemValuePair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoJobInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoJobCardInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoLastBattleResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoCardPostBattleState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMailBox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoMailBoxItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerDeckCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerDeck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerDeckSlot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerStamina); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRankingInfoSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRankingInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerRankSetDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRankingEventClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionMapDataCollection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionMapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionNodeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionLockData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoRegionEventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSkillPanelGroups); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSkillPanelPage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoSkillPanel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoWeaponInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoWeaponInstance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   50,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_proto_goTypes,
		DependencyIndexes: file_data_proto_depIdxs,
		EnumInfos:         file_data_proto_enumTypes,
		MessageInfos:      file_data_proto_msgTypes,
	}.Build()
	File_data_proto = out.File
	file_data_proto_rawDesc = nil
	file_data_proto_goTypes = nil
	file_data_proto_depIdxs = nil
}
