// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: protomodel/ability_card.proto

package protomodel

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AbilityCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId           string           `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	Active          bool             `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	CardNumber      int32            `protobuf:"varint,3,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	InShop          bool             `protobuf:"varint,4,opt,name=in_shop,json=inShop,proto3" json:"in_shop,omitempty"`
	BaseAbilityCard *BaseAbilityCard `protobuf:"bytes,5,opt,name=base_ability_card,json=baseAbilityCard,proto3" json:"base_ability_card,omitempty"`
	AugmentConfig   *AugmentConfig   `protobuf:"bytes,6,opt,name=augment_config,json=augmentConfig,proto3" json:"augment_config,omitempty"`
}

func (x *AbilityCard) Reset() {
	*x = AbilityCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protomodel_ability_card_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbilityCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbilityCard) ProtoMessage() {}

func (x *AbilityCard) ProtoReflect() protoreflect.Message {
	mi := &file_protomodel_ability_card_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbilityCard.ProtoReflect.Descriptor instead.
func (*AbilityCard) Descriptor() ([]byte, []int) {
	return file_protomodel_ability_card_proto_rawDescGZIP(), []int{0}
}

func (x *AbilityCard) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *AbilityCard) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AbilityCard) GetCardNumber() int32 {
	if x != nil {
		return x.CardNumber
	}
	return 0
}

func (x *AbilityCard) GetInShop() bool {
	if x != nil {
		return x.InShop
	}
	return false
}

func (x *AbilityCard) GetBaseAbilityCard() *BaseAbilityCard {
	if x != nil {
		return x.BaseAbilityCard
	}
	return nil
}

func (x *AbilityCard) GetAugmentConfig() *AugmentConfig {
	if x != nil {
		return x.AugmentConfig
	}
	return nil
}

type BaseAbilityCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId           string `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	Active          bool   `protobuf:"varint,2,opt,name=active,proto3" json:"active,omitempty"`
	Name            string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	FiendCard       bool   `protobuf:"varint,4,opt,name=fiend_card,json=fiendCard,proto3" json:"fiend_card,omitempty"`
	SkillSeedOne    string `protobuf:"bytes,5,opt,name=skill_seed_one,json=skillSeedOne,proto3" json:"skill_seed_one,omitempty"`
	SkillSeedTwo    string `protobuf:"bytes,6,opt,name=skill_seed_two,json=skillSeedTwo,proto3" json:"skill_seed_two,omitempty"`
	SkillSeedSplit  string `protobuf:"bytes,7,opt,name=skill_seed_split,json=skillSeedSplit,proto3" json:"skill_seed_split,omitempty"`
	SeedFusionBoost int32  `protobuf:"varint,8,opt,name=seed_fusion_boost,json=seedFusionBoost,proto3" json:"seed_fusion_boost,omitempty"`
	Ability         string `protobuf:"bytes,9,opt,name=ability,proto3" json:"ability,omitempty"`
	Element         string `protobuf:"bytes,10,opt,name=element,proto3" json:"element,omitempty"`
	Category        string `protobuf:"bytes,11,opt,name=category,proto3" json:"category,omitempty"`
	FastLearner     bool   `protobuf:"varint,12,opt,name=fast_learner,json=fastLearner,proto3" json:"fast_learner,omitempty"`
}

func (x *BaseAbilityCard) Reset() {
	*x = BaseAbilityCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protomodel_ability_card_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseAbilityCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseAbilityCard) ProtoMessage() {}

func (x *BaseAbilityCard) ProtoReflect() protoreflect.Message {
	mi := &file_protomodel_ability_card_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseAbilityCard.ProtoReflect.Descriptor instead.
func (*BaseAbilityCard) Descriptor() ([]byte, []int) {
	return file_protomodel_ability_card_proto_rawDescGZIP(), []int{1}
}

func (x *BaseAbilityCard) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *BaseAbilityCard) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *BaseAbilityCard) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BaseAbilityCard) GetFiendCard() bool {
	if x != nil {
		return x.FiendCard
	}
	return false
}

func (x *BaseAbilityCard) GetSkillSeedOne() string {
	if x != nil {
		return x.SkillSeedOne
	}
	return ""
}

func (x *BaseAbilityCard) GetSkillSeedTwo() string {
	if x != nil {
		return x.SkillSeedTwo
	}
	return ""
}

func (x *BaseAbilityCard) GetSkillSeedSplit() string {
	if x != nil {
		return x.SkillSeedSplit
	}
	return ""
}

func (x *BaseAbilityCard) GetSeedFusionBoost() int32 {
	if x != nil {
		return x.SeedFusionBoost
	}
	return 0
}

func (x *BaseAbilityCard) GetAbility() string {
	if x != nil {
		return x.Ability
	}
	return ""
}

func (x *BaseAbilityCard) GetElement() string {
	if x != nil {
		return x.Element
	}
	return ""
}

func (x *BaseAbilityCard) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *BaseAbilityCard) GetFastLearner() bool {
	if x != nil {
		return x.FastLearner
	}
	return false
}

type AugmentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SysId               string `protobuf:"bytes,1,opt,name=sys_id,json=sysId,proto3" json:"sys_id,omitempty"`
	BaseSysId           string `protobuf:"bytes,2,opt,name=base_sys_id,json=baseSysId,proto3" json:"base_sys_id,omitempty"`
	NextAugmentId       string `protobuf:"bytes,3,opt,name=next_augment_id,json=nextAugmentId,proto3" json:"next_augment_id,omitempty"`
	Active              bool   `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	StarLevel           int32  `protobuf:"varint,5,opt,name=star_level,json=starLevel,proto3" json:"star_level,omitempty"`
	InitialMaxCardLevel int32  `protobuf:"varint,6,opt,name=initial_max_card_level,json=initialMaxCardLevel,proto3" json:"initial_max_card_level,omitempty"`
	SkillSeedMax        int32  `protobuf:"varint,7,opt,name=skill_seed_max,json=skillSeedMax,proto3" json:"skill_seed_max,omitempty"`
	SkillSeedWeight     int32  `protobuf:"varint,8,opt,name=skill_seed_weight,json=skillSeedWeight,proto3" json:"skill_seed_weight,omitempty"`
	ExtraSkillUnlockMax int32  `protobuf:"varint,9,opt,name=extra_skill_unlock_max,json=extraSkillUnlockMax,proto3" json:"extra_skill_unlock_max,omitempty"`
	AutoAbilityMax      int32  `protobuf:"varint,10,opt,name=auto_ability_max,json=autoAbilityMax,proto3" json:"auto_ability_max,omitempty"`
	FusionCost          int32  `protobuf:"varint,11,opt,name=fusion_cost,json=fusionCost,proto3" json:"fusion_cost,omitempty"`
	FusionExp           int32  `protobuf:"varint,12,opt,name=fusion_exp,json=fusionExp,proto3" json:"fusion_exp,omitempty"`
	SaleTickets         int32  `protobuf:"varint,13,opt,name=sale_tickets,json=saleTickets,proto3" json:"sale_tickets,omitempty"`
	AugmentCost         int32  `protobuf:"varint,14,opt,name=augment_cost,json=augmentCost,proto3" json:"augment_cost,omitempty"`
	MaxAbilityLevel     int32  `protobuf:"varint,15,opt,name=max_ability_level,json=maxAbilityLevel,proto3" json:"max_ability_level,omitempty"`
	SaleGold            int32  `protobuf:"varint,16,opt,name=sale_gold,json=saleGold,proto3" json:"sale_gold,omitempty"`
}

func (x *AugmentConfig) Reset() {
	*x = AugmentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protomodel_ability_card_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AugmentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AugmentConfig) ProtoMessage() {}

func (x *AugmentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_protomodel_ability_card_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AugmentConfig.ProtoReflect.Descriptor instead.
func (*AugmentConfig) Descriptor() ([]byte, []int) {
	return file_protomodel_ability_card_proto_rawDescGZIP(), []int{2}
}

func (x *AugmentConfig) GetSysId() string {
	if x != nil {
		return x.SysId
	}
	return ""
}

func (x *AugmentConfig) GetBaseSysId() string {
	if x != nil {
		return x.BaseSysId
	}
	return ""
}

func (x *AugmentConfig) GetNextAugmentId() string {
	if x != nil {
		return x.NextAugmentId
	}
	return ""
}

func (x *AugmentConfig) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AugmentConfig) GetStarLevel() int32 {
	if x != nil {
		return x.StarLevel
	}
	return 0
}

func (x *AugmentConfig) GetInitialMaxCardLevel() int32 {
	if x != nil {
		return x.InitialMaxCardLevel
	}
	return 0
}

func (x *AugmentConfig) GetSkillSeedMax() int32 {
	if x != nil {
		return x.SkillSeedMax
	}
	return 0
}

func (x *AugmentConfig) GetSkillSeedWeight() int32 {
	if x != nil {
		return x.SkillSeedWeight
	}
	return 0
}

func (x *AugmentConfig) GetExtraSkillUnlockMax() int32 {
	if x != nil {
		return x.ExtraSkillUnlockMax
	}
	return 0
}

func (x *AugmentConfig) GetAutoAbilityMax() int32 {
	if x != nil {
		return x.AutoAbilityMax
	}
	return 0
}

func (x *AugmentConfig) GetFusionCost() int32 {
	if x != nil {
		return x.FusionCost
	}
	return 0
}

func (x *AugmentConfig) GetFusionExp() int32 {
	if x != nil {
		return x.FusionExp
	}
	return 0
}

func (x *AugmentConfig) GetSaleTickets() int32 {
	if x != nil {
		return x.SaleTickets
	}
	return 0
}

func (x *AugmentConfig) GetAugmentCost() int32 {
	if x != nil {
		return x.AugmentCost
	}
	return 0
}

func (x *AugmentConfig) GetMaxAbilityLevel() int32 {
	if x != nil {
		return x.MaxAbilityLevel
	}
	return 0
}

func (x *AugmentConfig) GetSaleGold() int32 {
	if x != nil {
		return x.SaleGold
	}
	return 0
}

var File_protomodel_ability_card_proto protoreflect.FileDescriptor

var file_protomodel_ability_card_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xf7, 0x01, 0x0a, 0x0b, 0x41, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x64,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x73, 0x68, 0x6f,
	0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x53, 0x68, 0x6f, 0x70, 0x12,
	0x42, 0x0a, 0x11, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43,
	0x61, 0x72, 0x64, 0x12, 0x3b, 0x0a, 0x0e, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0d, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x22, 0x88, 0x03, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x65, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79,
	0x43, 0x61, 0x72, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x79, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x66, 0x69, 0x65,
	0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f,
	0x73, 0x65, 0x65, 0x64, 0x5f, 0x6f, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x65, 0x64, 0x4f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x5f, 0x74, 0x77, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x65, 0x64, 0x54,
	0x77, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x65, 0x64,
	0x5f, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x53, 0x65, 0x65, 0x64, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x65, 0x65, 0x64, 0x5f, 0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x62, 0x6f, 0x6f, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x65, 0x65, 0x64, 0x46, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x61, 0x73, 0x74,
	0x5f, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b,
	0x66, 0x61, 0x73, 0x74, 0x4c, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x72, 0x22, 0xda, 0x04, 0x0a, 0x0d,
	0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x79, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x79, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x73, 0x79, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x53,
	0x79, 0x73, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x75, 0x67,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e,
	0x65, 0x78, 0x74, 0x41, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x6d,
	0x61, 0x78, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x61, 0x78, 0x43,
	0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x53, 0x65, 0x65, 0x64, 0x4d, 0x61, 0x78, 0x12, 0x2a,
	0x0a, 0x11, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x73, 0x65, 0x65, 0x64, 0x5f, 0x77, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x53, 0x65, 0x65, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x6d, 0x61, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x61, 0x78, 0x12,
	0x28, 0x0a, 0x10, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f,
	0x6d, 0x61, 0x78, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4d, 0x61, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x75, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x75,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x66, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x6c,
	0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x73, 0x61, 0x6c, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x61, 0x75, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x6d, 0x61, 0x78, 0x41,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x73, 0x61, 0x6c, 0x65, 0x47, 0x6f, 0x6c, 0x64, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x6a, 0x61, 0x63, 0x6b, 0x31,
	0x35, 0x32, 0x31, 0x2f, 0x6d, 0x65, 0x76, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67,
	0x65, 0x6e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protomodel_ability_card_proto_rawDescOnce sync.Once
	file_protomodel_ability_card_proto_rawDescData = file_protomodel_ability_card_proto_rawDesc
)

func file_protomodel_ability_card_proto_rawDescGZIP() []byte {
	file_protomodel_ability_card_proto_rawDescOnce.Do(func() {
		file_protomodel_ability_card_proto_rawDescData = protoimpl.X.CompressGZIP(file_protomodel_ability_card_proto_rawDescData)
	})
	return file_protomodel_ability_card_proto_rawDescData
}

var file_protomodel_ability_card_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_protomodel_ability_card_proto_goTypes = []interface{}{
	(*AbilityCard)(nil),     // 0: model.AbilityCard
	(*BaseAbilityCard)(nil), // 1: model.BaseAbilityCard
	(*AugmentConfig)(nil),   // 2: model.AugmentConfig
}
var file_protomodel_ability_card_proto_depIdxs = []int32{
	1, // 0: model.AbilityCard.base_ability_card:type_name -> model.BaseAbilityCard
	2, // 1: model.AbilityCard.augment_config:type_name -> model.AugmentConfig
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_protomodel_ability_card_proto_init() }
func file_protomodel_ability_card_proto_init() {
	if File_protomodel_ability_card_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protomodel_ability_card_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbilityCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protomodel_ability_card_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseAbilityCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protomodel_ability_card_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AugmentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protomodel_ability_card_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protomodel_ability_card_proto_goTypes,
		DependencyIndexes: file_protomodel_ability_card_proto_depIdxs,
		MessageInfos:      file_protomodel_ability_card_proto_msgTypes,
	}.Build()
	File_protomodel_ability_card_proto = out.File
	file_protomodel_ability_card_proto_rawDesc = nil
	file_protomodel_ability_card_proto_goTypes = nil
	file_protomodel_ability_card_proto_depIdxs = nil
}
