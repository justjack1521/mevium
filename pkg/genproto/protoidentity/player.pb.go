// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: protoidentity/player.proto

package protoidentity

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProtoPlayerIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId      string `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName    string `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	PlayerLevel   int32  `protobuf:"varint,3,opt,name=player_level,json=playerLevel,proto3" json:"player_level,omitempty"`
	PlayerComment string `protobuf:"bytes,4,opt,name=player_comment,json=playerComment,proto3" json:"player_comment,omitempty"`
	CompanionId   string `protobuf:"bytes,5,opt,name=companion_id,json=companionId,proto3" json:"companion_id,omitempty"`
}

func (x *ProtoPlayerIdentity) Reset() {
	*x = ProtoPlayerIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerIdentity) ProtoMessage() {}

func (x *ProtoPlayerIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerIdentity.ProtoReflect.Descriptor instead.
func (*ProtoPlayerIdentity) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{0}
}

func (x *ProtoPlayerIdentity) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ProtoPlayerIdentity) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoPlayerIdentity) GetPlayerLevel() int32 {
	if x != nil {
		return x.PlayerLevel
	}
	return 0
}

func (x *ProtoPlayerIdentity) GetPlayerComment() string {
	if x != nil {
		return x.PlayerComment
	}
	return ""
}

func (x *ProtoPlayerIdentity) GetCompanionId() string {
	if x != nil {
		return x.CompanionId
	}
	return ""
}

type ProtoPlayerLoadoutIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobCard      *ProtoPlayerJobIdentity     `protobuf:"bytes,1,opt,name=job_card,json=jobCard,proto3" json:"job_card,omitempty"`
	Weapon       *ProtoPlayerWeaponIdentity  `protobuf:"bytes,2,opt,name=weapon,proto3" json:"weapon,omitempty"`
	AbilityCards []*ProtoAbilityCardIdentity `protobuf:"bytes,3,rep,name=ability_cards,json=abilityCards,proto3" json:"ability_cards,omitempty"`
}

func (x *ProtoPlayerLoadoutIdentity) Reset() {
	*x = ProtoPlayerLoadoutIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerLoadoutIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerLoadoutIdentity) ProtoMessage() {}

func (x *ProtoPlayerLoadoutIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerLoadoutIdentity.ProtoReflect.Descriptor instead.
func (*ProtoPlayerLoadoutIdentity) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{1}
}

func (x *ProtoPlayerLoadoutIdentity) GetJobCard() *ProtoPlayerJobIdentity {
	if x != nil {
		return x.JobCard
	}
	return nil
}

func (x *ProtoPlayerLoadoutIdentity) GetWeapon() *ProtoPlayerWeaponIdentity {
	if x != nil {
		return x.Weapon
	}
	return nil
}

func (x *ProtoPlayerLoadoutIdentity) GetAbilityCards() []*ProtoAbilityCardIdentity {
	if x != nil {
		return x.AbilityCards
	}
	return nil
}

type ProtoPlayerJobIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JobCardId      string `protobuf:"bytes,1,opt,name=job_card_id,json=jobCardId,proto3" json:"job_card_id,omitempty"`
	SubJobIndex    int32  `protobuf:"varint,2,opt,name=sub_job_index,json=subJobIndex,proto3" json:"sub_job_index,omitempty"`
	CrownLevel     int32  `protobuf:"varint,3,opt,name=crown_level,json=crownLevel,proto3" json:"crown_level,omitempty"`
	OverBoostLevel int32  `protobuf:"varint,4,opt,name=over_boost_level,json=overBoostLevel,proto3" json:"over_boost_level,omitempty"`
}

func (x *ProtoPlayerJobIdentity) Reset() {
	*x = ProtoPlayerJobIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerJobIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerJobIdentity) ProtoMessage() {}

func (x *ProtoPlayerJobIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerJobIdentity.ProtoReflect.Descriptor instead.
func (*ProtoPlayerJobIdentity) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{2}
}

func (x *ProtoPlayerJobIdentity) GetJobCardId() string {
	if x != nil {
		return x.JobCardId
	}
	return ""
}

func (x *ProtoPlayerJobIdentity) GetSubJobIndex() int32 {
	if x != nil {
		return x.SubJobIndex
	}
	return 0
}

func (x *ProtoPlayerJobIdentity) GetCrownLevel() int32 {
	if x != nil {
		return x.CrownLevel
	}
	return 0
}

func (x *ProtoPlayerJobIdentity) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

type ProtoPlayerJobStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HpStatMod         int32            `protobuf:"varint,3,opt,name=hp_stat_mod,json=hpStatMod,proto3" json:"hp_stat_mod,omitempty"`
	AttackStatMod     int32            `protobuf:"varint,4,opt,name=attack_stat_mod,json=attackStatMod,proto3" json:"attack_stat_mod,omitempty"`
	BreakStatMod      int32            `protobuf:"varint,5,opt,name=break_stat_mod,json=breakStatMod,proto3" json:"break_stat_mod,omitempty"`
	MagicStatMod      int32            `protobuf:"varint,6,opt,name=magic_stat_mod,json=magicStatMod,proto3" json:"magic_stat_mod,omitempty"`
	SpeedStatMod      int32            `protobuf:"varint,7,opt,name=speed_stat_mod,json=speedStatMod,proto3" json:"speed_stat_mod,omitempty"`
	DefenseStatMod    int32            `protobuf:"varint,8,opt,name=defense_stat_mod,json=defenseStatMod,proto3" json:"defense_stat_mod,omitempty"`
	CritChanceStatMod int32            `protobuf:"varint,9,opt,name=crit_chance_stat_mod,json=critChanceStatMod,proto3" json:"crit_chance_stat_mod,omitempty"`
	UltimateBoost     int32            `protobuf:"varint,10,opt,name=ultimate_boost,json=ultimateBoost,proto3" json:"ultimate_boost,omitempty"`
	AutoAbilities     map[string]int32 `protobuf:"bytes,12,rep,name=auto_abilities,json=autoAbilities,proto3" json:"auto_abilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoPlayerJobStat) Reset() {
	*x = ProtoPlayerJobStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerJobStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerJobStat) ProtoMessage() {}

func (x *ProtoPlayerJobStat) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerJobStat.ProtoReflect.Descriptor instead.
func (*ProtoPlayerJobStat) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{3}
}

func (x *ProtoPlayerJobStat) GetHpStatMod() int32 {
	if x != nil {
		return x.HpStatMod
	}
	return 0
}

func (x *ProtoPlayerJobStat) GetAttackStatMod() int32 {
	if x != nil {
		return x.AttackStatMod
	}
	return 0
}

func (x *ProtoPlayerJobStat) GetBreakStatMod() int32 {
	if x != nil {
		return x.BreakStatMod
	}
	return 0
}

func (x *ProtoPlayerJobStat) GetMagicStatMod() int32 {
	if x != nil {
		return x.MagicStatMod
	}
	return 0
}

func (x *ProtoPlayerJobStat) GetSpeedStatMod() int32 {
	if x != nil {
		return x.SpeedStatMod
	}
	return 0
}

func (x *ProtoPlayerJobStat) GetDefenseStatMod() int32 {
	if x != nil {
		return x.DefenseStatMod
	}
	return 0
}

func (x *ProtoPlayerJobStat) GetCritChanceStatMod() int32 {
	if x != nil {
		return x.CritChanceStatMod
	}
	return 0
}

func (x *ProtoPlayerJobStat) GetUltimateBoost() int32 {
	if x != nil {
		return x.UltimateBoost
	}
	return 0
}

func (x *ProtoPlayerJobStat) GetAutoAbilities() map[string]int32 {
	if x != nil {
		return x.AutoAbilities
	}
	return nil
}

type ProtoPlayerWeaponIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WeaponId        string `protobuf:"bytes,1,opt,name=weapon_id,json=weaponId,proto3" json:"weapon_id,omitempty"`
	SubWeaponUnlock int32  `protobuf:"varint,2,opt,name=sub_weapon_unlock,json=subWeaponUnlock,proto3" json:"sub_weapon_unlock,omitempty"`
}

func (x *ProtoPlayerWeaponIdentity) Reset() {
	*x = ProtoPlayerWeaponIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerWeaponIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerWeaponIdentity) ProtoMessage() {}

func (x *ProtoPlayerWeaponIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerWeaponIdentity.ProtoReflect.Descriptor instead.
func (*ProtoPlayerWeaponIdentity) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{4}
}

func (x *ProtoPlayerWeaponIdentity) GetWeaponId() string {
	if x != nil {
		return x.WeaponId
	}
	return ""
}

func (x *ProtoPlayerWeaponIdentity) GetSubWeaponUnlock() int32 {
	if x != nil {
		return x.SubWeaponUnlock
	}
	return 0
}

type ProtoPlayerWeaponStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HpStatMod         int32            `protobuf:"varint,3,opt,name=hp_stat_mod,json=hpStatMod,proto3" json:"hp_stat_mod,omitempty"`
	AttackStatMod     int32            `protobuf:"varint,4,opt,name=attack_stat_mod,json=attackStatMod,proto3" json:"attack_stat_mod,omitempty"`
	BreakStatMod      int32            `protobuf:"varint,5,opt,name=break_stat_mod,json=breakStatMod,proto3" json:"break_stat_mod,omitempty"`
	MagicStatMod      int32            `protobuf:"varint,6,opt,name=magic_stat_mod,json=magicStatMod,proto3" json:"magic_stat_mod,omitempty"`
	SpeedStatMod      int32            `protobuf:"varint,7,opt,name=speed_stat_mod,json=speedStatMod,proto3" json:"speed_stat_mod,omitempty"`
	DefenseStatMod    int32            `protobuf:"varint,8,opt,name=defense_stat_mod,json=defenseStatMod,proto3" json:"defense_stat_mod,omitempty"`
	CritChanceStatMod int32            `protobuf:"varint,9,opt,name=crit_chance_stat_mod,json=critChanceStatMod,proto3" json:"crit_chance_stat_mod,omitempty"`
	UltimateBoost     int32            `protobuf:"varint,10,opt,name=ultimate_boost,json=ultimateBoost,proto3" json:"ultimate_boost,omitempty"`
	AutoAbilities     map[string]int32 `protobuf:"bytes,11,rep,name=auto_abilities,json=autoAbilities,proto3" json:"auto_abilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoPlayerWeaponStat) Reset() {
	*x = ProtoPlayerWeaponStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerWeaponStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerWeaponStat) ProtoMessage() {}

func (x *ProtoPlayerWeaponStat) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerWeaponStat.ProtoReflect.Descriptor instead.
func (*ProtoPlayerWeaponStat) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{5}
}

func (x *ProtoPlayerWeaponStat) GetHpStatMod() int32 {
	if x != nil {
		return x.HpStatMod
	}
	return 0
}

func (x *ProtoPlayerWeaponStat) GetAttackStatMod() int32 {
	if x != nil {
		return x.AttackStatMod
	}
	return 0
}

func (x *ProtoPlayerWeaponStat) GetBreakStatMod() int32 {
	if x != nil {
		return x.BreakStatMod
	}
	return 0
}

func (x *ProtoPlayerWeaponStat) GetMagicStatMod() int32 {
	if x != nil {
		return x.MagicStatMod
	}
	return 0
}

func (x *ProtoPlayerWeaponStat) GetSpeedStatMod() int32 {
	if x != nil {
		return x.SpeedStatMod
	}
	return 0
}

func (x *ProtoPlayerWeaponStat) GetDefenseStatMod() int32 {
	if x != nil {
		return x.DefenseStatMod
	}
	return 0
}

func (x *ProtoPlayerWeaponStat) GetCritChanceStatMod() int32 {
	if x != nil {
		return x.CritChanceStatMod
	}
	return 0
}

func (x *ProtoPlayerWeaponStat) GetUltimateBoost() int32 {
	if x != nil {
		return x.UltimateBoost
	}
	return 0
}

func (x *ProtoPlayerWeaponStat) GetAutoAbilities() map[string]int32 {
	if x != nil {
		return x.AutoAbilities
	}
	return nil
}

type ProtoAbilityCardIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AbilityCardId    string `protobuf:"bytes,1,opt,name=ability_card_id,json=abilityCardId,proto3" json:"ability_card_id,omitempty"`
	AbilityCardLevel int32  `protobuf:"varint,2,opt,name=ability_card_level,json=abilityCardLevel,proto3" json:"ability_card_level,omitempty"`
	AbilityLevel     int32  `protobuf:"varint,3,opt,name=ability_level,json=abilityLevel,proto3" json:"ability_level,omitempty"`
	ExtraSkillUnlock int32  `protobuf:"varint,4,opt,name=extra_skill_unlock,json=extraSkillUnlock,proto3" json:"extra_skill_unlock,omitempty"`
	OverBoostLevel   int32  `protobuf:"varint,5,opt,name=over_boost_level,json=overBoostLevel,proto3" json:"over_boost_level,omitempty"`
	SlotIndex        int32  `protobuf:"varint,6,opt,name=slot_index,json=slotIndex,proto3" json:"slot_index,omitempty"`
}

func (x *ProtoAbilityCardIdentity) Reset() {
	*x = ProtoAbilityCardIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardIdentity) ProtoMessage() {}

func (x *ProtoAbilityCardIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardIdentity.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardIdentity) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{6}
}

func (x *ProtoAbilityCardIdentity) GetAbilityCardId() string {
	if x != nil {
		return x.AbilityCardId
	}
	return ""
}

func (x *ProtoAbilityCardIdentity) GetAbilityCardLevel() int32 {
	if x != nil {
		return x.AbilityCardLevel
	}
	return 0
}

func (x *ProtoAbilityCardIdentity) GetAbilityLevel() int32 {
	if x != nil {
		return x.AbilityLevel
	}
	return 0
}

func (x *ProtoAbilityCardIdentity) GetExtraSkillUnlock() int32 {
	if x != nil {
		return x.ExtraSkillUnlock
	}
	return 0
}

func (x *ProtoAbilityCardIdentity) GetOverBoostLevel() int32 {
	if x != nil {
		return x.OverBoostLevel
	}
	return 0
}

func (x *ProtoAbilityCardIdentity) GetSlotIndex() int32 {
	if x != nil {
		return x.SlotIndex
	}
	return 0
}

type ProtoAbilityCardStat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AutoAbilities map[string]int32 `protobuf:"bytes,6,rep,name=auto_abilities,json=autoAbilities,proto3" json:"auto_abilities,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ProtoAbilityCardStat) Reset() {
	*x = ProtoAbilityCardStat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoAbilityCardStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoAbilityCardStat) ProtoMessage() {}

func (x *ProtoAbilityCardStat) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoAbilityCardStat.ProtoReflect.Descriptor instead.
func (*ProtoAbilityCardStat) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{7}
}

func (x *ProtoAbilityCardStat) GetAutoAbilities() map[string]int32 {
	if x != nil {
		return x.AutoAbilities
	}
	return nil
}

type ProtoPlayerLoadout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId     string                           `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName   string                           `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"`
	DeckIndex    int32                            `protobuf:"varint,3,opt,name=deck_index,json=deckIndex,proto3" json:"deck_index,omitempty"`
	Job          *ProtoPlayerJobLoadout           `protobuf:"bytes,4,opt,name=job,proto3" json:"job,omitempty"`
	Weapon       *ProtoPlayerWeaponLoadout        `protobuf:"bytes,5,opt,name=weapon,proto3" json:"weapon,omitempty"`
	AbilityCards []*ProtoPlayerAbilityCardLoadout `protobuf:"bytes,6,rep,name=ability_cards,json=abilityCards,proto3" json:"ability_cards,omitempty"`
}

func (x *ProtoPlayerLoadout) Reset() {
	*x = ProtoPlayerLoadout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerLoadout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerLoadout) ProtoMessage() {}

func (x *ProtoPlayerLoadout) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerLoadout.ProtoReflect.Descriptor instead.
func (*ProtoPlayerLoadout) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{8}
}

func (x *ProtoPlayerLoadout) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *ProtoPlayerLoadout) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

func (x *ProtoPlayerLoadout) GetDeckIndex() int32 {
	if x != nil {
		return x.DeckIndex
	}
	return 0
}

func (x *ProtoPlayerLoadout) GetJob() *ProtoPlayerJobLoadout {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *ProtoPlayerLoadout) GetWeapon() *ProtoPlayerWeaponLoadout {
	if x != nil {
		return x.Weapon
	}
	return nil
}

func (x *ProtoPlayerLoadout) GetAbilityCards() []*ProtoPlayerAbilityCardLoadout {
	if x != nil {
		return x.AbilityCards
	}
	return nil
}

type ProtoPlayerJobLoadout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *ProtoPlayerJobIdentity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Stat     *ProtoPlayerJobStat     `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *ProtoPlayerJobLoadout) Reset() {
	*x = ProtoPlayerJobLoadout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerJobLoadout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerJobLoadout) ProtoMessage() {}

func (x *ProtoPlayerJobLoadout) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerJobLoadout.ProtoReflect.Descriptor instead.
func (*ProtoPlayerJobLoadout) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{9}
}

func (x *ProtoPlayerJobLoadout) GetIdentity() *ProtoPlayerJobIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *ProtoPlayerJobLoadout) GetStat() *ProtoPlayerJobStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

type ProtoPlayerWeaponLoadout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *ProtoPlayerWeaponIdentity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Stat     *ProtoPlayerWeaponStat     `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *ProtoPlayerWeaponLoadout) Reset() {
	*x = ProtoPlayerWeaponLoadout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerWeaponLoadout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerWeaponLoadout) ProtoMessage() {}

func (x *ProtoPlayerWeaponLoadout) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerWeaponLoadout.ProtoReflect.Descriptor instead.
func (*ProtoPlayerWeaponLoadout) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{10}
}

func (x *ProtoPlayerWeaponLoadout) GetIdentity() *ProtoPlayerWeaponIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *ProtoPlayerWeaponLoadout) GetStat() *ProtoPlayerWeaponStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

type ProtoPlayerAbilityCardLoadout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identity *ProtoAbilityCardIdentity `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Stat     *ProtoAbilityCardStat     `protobuf:"bytes,2,opt,name=stat,proto3" json:"stat,omitempty"`
}

func (x *ProtoPlayerAbilityCardLoadout) Reset() {
	*x = ProtoPlayerAbilityCardLoadout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protoidentity_player_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtoPlayerAbilityCardLoadout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtoPlayerAbilityCardLoadout) ProtoMessage() {}

func (x *ProtoPlayerAbilityCardLoadout) ProtoReflect() protoreflect.Message {
	mi := &file_protoidentity_player_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtoPlayerAbilityCardLoadout.ProtoReflect.Descriptor instead.
func (*ProtoPlayerAbilityCardLoadout) Descriptor() ([]byte, []int) {
	return file_protoidentity_player_proto_rawDescGZIP(), []int{11}
}

func (x *ProtoPlayerAbilityCardLoadout) GetIdentity() *ProtoAbilityCardIdentity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *ProtoPlayerAbilityCardLoadout) GetStat() *ProtoAbilityCardStat {
	if x != nil {
		return x.Stat
	}
	return nil
}

var File_protoidentity_player_proto protoreflect.FileDescriptor

var file_protoidentity_player_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2f,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xc0, 0x01, 0x0a, 0x13, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xdf, 0x01, 0x0a, 0x1a, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x08, 0x6a, 0x6f, 0x62, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x6a, 0x6f,
	0x62, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3b, 0x0a, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x61,
	0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x16,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x6a, 0x6f, 0x62, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x6f, 0x62,
	0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x75, 0x62, 0x5f, 0x6a, 0x6f,
	0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73,
	0x75, 0x62, 0x4a, 0x6f, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x6f, 0x77, 0x6e, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x72, 0x6f, 0x77, 0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x76, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x76, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0xea, 0x03, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0b,
	0x68, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x68, 0x70, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61,
	0x74, 0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x72,
	0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61,
	0x67, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x70, 0x65, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64,
	0x12, 0x2f, 0x0a, 0x14, 0x63, 0x72, 0x69, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x63, 0x72, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f,
	0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f,
	0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6c, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x56, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f,
	0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2f, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x41,
	0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x40, 0x0a, 0x12, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x64, 0x0a, 0x19, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x73, 0x75, 0x62, 0x5f, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73, 0x75, 0x62, 0x57, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x22, 0xf0, 0x03, 0x0a, 0x15, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x68, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x70, 0x53, 0x74, 0x61, 0x74, 0x4d,
	0x6f, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x72,
	0x65, 0x61, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64,
	0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d,
	0x6f, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x65, 0x64, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x65, 0x6e, 0x73, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x72, 0x69, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x72, 0x69, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x6c, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x75, 0x6c, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x12, 0x59,
	0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x40, 0x0a, 0x12, 0x41, 0x75, 0x74,
	0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8c, 0x02, 0x0a, 0x18,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x12, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x2c, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x65, 0x78, 0x74, 0x72, 0x61, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x55, 0x6e, 0x6c, 0x6f, 0x63,
	0x6b, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x62, 0x6f, 0x6f, 0x73, 0x74, 0x5f,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x76, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x73, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0xb2, 0x01, 0x0a, 0x14, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x12, 0x58, 0x0a, 0x0e, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x2e, 0x41, 0x75, 0x74, 0x6f,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x61, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x40, 0x0a,
	0x12, 0x41, 0x75, 0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xae, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x65, 0x63, 0x6b, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x31, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75,
	0x74, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x3a, 0x0a, 0x06, 0x77, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x52, 0x06, 0x77, 0x65, 0x61, 0x70,
	0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x0d, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x6f,
	0x75, 0x74, 0x52, 0x0c, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x87, 0x01, 0x0a, 0x15, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x69, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4a, 0x6f, 0x62,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x18, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e,
	0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x3f, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x57, 0x65, 0x61, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x57, 0x65, 0x61,
	0x70, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x93, 0x01,
	0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x61, 0x64, 0x6f, 0x75, 0x74, 0x12,
	0x3e, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x41, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x32, 0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x41, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x43, 0x61, 0x72, 0x64, 0x53, 0x74, 0x61, 0x74, 0x52, 0x04, 0x73,
	0x74, 0x61, 0x74, 0x42, 0x53, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6a, 0x75, 0x73, 0x74, 0x6a, 0x61, 0x63, 0x6b, 0x31, 0x35, 0x32, 0x31, 0x2f, 0x6d,
	0x65, 0x76, 0x69, 0x75, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x65, 0x6e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0xaa, 0x02, 0x15, 0x4d, 0x6f, 0x62, 0x69, 0x75, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protoidentity_player_proto_rawDescOnce sync.Once
	file_protoidentity_player_proto_rawDescData = file_protoidentity_player_proto_rawDesc
)

func file_protoidentity_player_proto_rawDescGZIP() []byte {
	file_protoidentity_player_proto_rawDescOnce.Do(func() {
		file_protoidentity_player_proto_rawDescData = protoimpl.X.CompressGZIP(file_protoidentity_player_proto_rawDescData)
	})
	return file_protoidentity_player_proto_rawDescData
}

var file_protoidentity_player_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_protoidentity_player_proto_goTypes = []interface{}{
	(*ProtoPlayerIdentity)(nil),           // 0: identity.ProtoPlayerIdentity
	(*ProtoPlayerLoadoutIdentity)(nil),    // 1: identity.ProtoPlayerLoadoutIdentity
	(*ProtoPlayerJobIdentity)(nil),        // 2: identity.ProtoPlayerJobIdentity
	(*ProtoPlayerJobStat)(nil),            // 3: identity.ProtoPlayerJobStat
	(*ProtoPlayerWeaponIdentity)(nil),     // 4: identity.ProtoPlayerWeaponIdentity
	(*ProtoPlayerWeaponStat)(nil),         // 5: identity.ProtoPlayerWeaponStat
	(*ProtoAbilityCardIdentity)(nil),      // 6: identity.ProtoAbilityCardIdentity
	(*ProtoAbilityCardStat)(nil),          // 7: identity.ProtoAbilityCardStat
	(*ProtoPlayerLoadout)(nil),            // 8: identity.ProtoPlayerLoadout
	(*ProtoPlayerJobLoadout)(nil),         // 9: identity.ProtoPlayerJobLoadout
	(*ProtoPlayerWeaponLoadout)(nil),      // 10: identity.ProtoPlayerWeaponLoadout
	(*ProtoPlayerAbilityCardLoadout)(nil), // 11: identity.ProtoPlayerAbilityCardLoadout
	nil,                                   // 12: identity.ProtoPlayerJobStat.AutoAbilitiesEntry
	nil,                                   // 13: identity.ProtoPlayerWeaponStat.AutoAbilitiesEntry
	nil,                                   // 14: identity.ProtoAbilityCardStat.AutoAbilitiesEntry
}
var file_protoidentity_player_proto_depIdxs = []int32{
	2,  // 0: identity.ProtoPlayerLoadoutIdentity.job_card:type_name -> identity.ProtoPlayerJobIdentity
	4,  // 1: identity.ProtoPlayerLoadoutIdentity.weapon:type_name -> identity.ProtoPlayerWeaponIdentity
	6,  // 2: identity.ProtoPlayerLoadoutIdentity.ability_cards:type_name -> identity.ProtoAbilityCardIdentity
	12, // 3: identity.ProtoPlayerJobStat.auto_abilities:type_name -> identity.ProtoPlayerJobStat.AutoAbilitiesEntry
	13, // 4: identity.ProtoPlayerWeaponStat.auto_abilities:type_name -> identity.ProtoPlayerWeaponStat.AutoAbilitiesEntry
	14, // 5: identity.ProtoAbilityCardStat.auto_abilities:type_name -> identity.ProtoAbilityCardStat.AutoAbilitiesEntry
	9,  // 6: identity.ProtoPlayerLoadout.job:type_name -> identity.ProtoPlayerJobLoadout
	10, // 7: identity.ProtoPlayerLoadout.weapon:type_name -> identity.ProtoPlayerWeaponLoadout
	11, // 8: identity.ProtoPlayerLoadout.ability_cards:type_name -> identity.ProtoPlayerAbilityCardLoadout
	2,  // 9: identity.ProtoPlayerJobLoadout.identity:type_name -> identity.ProtoPlayerJobIdentity
	3,  // 10: identity.ProtoPlayerJobLoadout.stat:type_name -> identity.ProtoPlayerJobStat
	4,  // 11: identity.ProtoPlayerWeaponLoadout.identity:type_name -> identity.ProtoPlayerWeaponIdentity
	5,  // 12: identity.ProtoPlayerWeaponLoadout.stat:type_name -> identity.ProtoPlayerWeaponStat
	6,  // 13: identity.ProtoPlayerAbilityCardLoadout.identity:type_name -> identity.ProtoAbilityCardIdentity
	7,  // 14: identity.ProtoPlayerAbilityCardLoadout.stat:type_name -> identity.ProtoAbilityCardStat
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_protoidentity_player_proto_init() }
func file_protoidentity_player_proto_init() {
	if File_protoidentity_player_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protoidentity_player_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerLoadoutIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerJobIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerJobStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerWeaponIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerWeaponStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoAbilityCardStat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerLoadout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerJobLoadout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerWeaponLoadout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protoidentity_player_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtoPlayerAbilityCardLoadout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protoidentity_player_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protoidentity_player_proto_goTypes,
		DependencyIndexes: file_protoidentity_player_proto_depIdxs,
		MessageInfos:      file_protoidentity_player_proto_msgTypes,
	}.Build()
	File_protoidentity_player_proto = out.File
	file_protoidentity_player_proto_rawDesc = nil
	file_protoidentity_player_proto_goTypes = nil
	file_protoidentity_player_proto_depIdxs = nil
}
